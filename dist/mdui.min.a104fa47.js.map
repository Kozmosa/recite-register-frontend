{"version":3,"sources":["wrap_start.js","polyfill.js","jq.js","global.js","function.js","jq_extend.js","mutation.js","headroom.js","headroom.data.js","collapse.js","ripple.js","textfield.js","slider.js","spinner.js","wrap_end.js","collapse.data.js","table.js","fab.js","fab.data.js","select.js","select.data.js","appbar.js","tab.js","tab.data.js","drawer.js","drawer.data.js","dialog.js","dialog.data.js","dialog.dialog.js","dialog.alert.js","dialog.confirm.js","dialog.prompt.js","tooltip.js","tooltip.data.js","snackbar.js","bottom_nav.js","panel.js","panel.data.js","menu.js","menu.data.js"],"names":["global","factory","exports","module","define","amd","mdui","this","lastTime","window","requestAnimationFrame","webkitRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","callback","element","currTime","Date","getTime","timeToCall","Math","max","id","setTimeout","clearTimeout","queueData","$","JQ","arr","i","length","$$1","selector","html","trim","toCreate","indexOf","tempParent","document","createElement","innerHTML","childNodes","push","elems","match","querySelectorAll","getElementById","slice","i$1","ready","nodeType","i$2","extend","this$1","args","len","arguments","Object","keys","forEach","prop","target","shift","loop","isObjectLike","obj","isFunction","fn","isString","isArrayLike","each","call","map","ref","value","ret","elem","concat","apply","merge","first","second","val","unique","result","prototype","elementDisplay","dir","nodes","nameIndex","node","j","_this","is","contains","parent","documentElement","param","key","destructure","keyTmp","v","Array","isArray","encodeURIComponent","join","el","get","index","undefined","filter","ele","$selector","not","$excludes","offset","getBoundingClientRect","left","pageXOffset","top","pageYOffset","width","height","offsetParent","css","position","self","name","parentOffset","nodeName","toLowerCase","show","display","style","getComputedStyle","getPropertyValue","body","appendChild","parentNode","removeChild","hide","toggle","hasClass","className","classList","removeAttr","attr","removeAttribute","removeProp","e","eq","last","children","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","$compareWith","find","foundElements","_","__","childNode","has","$targets","siblings","prevAll","add","nextAll","closest","parents","remove","empty","clone","cloneNode","replaceWith","newContent","before","serializeArray","elements","$elem","type","disabled","checked","serialize","props","0","1","2","defaults","set","setAttribute","argLength","getAttribute","k","classes","split","cls","Width","Height","win","doc","DOCUMENT_NODE","IEFixValue","isWidth","parseFloat","isNaN","Number","reverse","newChild","newChilds","copyByClone","tempDiv","child","insertBefore","nextSibling","appendTo","prependTo","after","replaceAll","original","dataNS","data","attributes","attribute","replace","u","charAt","toUpperCase","dataKey","removeData","n","bubbles","cancelable","t","createEvent","initMouseEvent","Event","MouseEvent","detail","initCustomEvent","CustomEvent","handlers","mduiElementId","fnFalse","getElementId","eventName","func","event","handler","toString","sel","removeEventListener","proxy","test","readyState","addEventListener","on","one","origCallback","off","elementId","useCapture","callFn","_detail","preventDefault","stopPropagation","proxyfn","_data","eName","trigger","evt","isMouseEvent","dispatchEvent","globalOptions","jsonpID","ajaxEvent","ajaxStart","ajaxSuccess","ajaxError","ajaxComplete","isQueryStringData","method","appendQuery","url","query","ajaxSetup","options","ajax","processData","async","cache","username","password","headers","xhrFields","statusCode","dataType","jsonp","jsonpCallback","now","contentType","timeout","callbacks","isCanceled","globals","eventParams","triggerEvent","xhr","triggerCallback","result1","result2","sendData","location","ArrayBuffer","Blob","Document","FormData","constructor","abortTimeout","callbackName","requestUrl","script","onerror","src","append","xhrTimeout","XMLHttpRequest","open","setRequestHeader","crossDomain","RegExp","$2","host","onload","textStatus","responseData","isHttpStatusSuccess","status","JSON","parse","responseText","err","responseType","response","statusText","onabort","abort","send","params","$document","$window","queue","queueName","dequeue","TouchHandler","touches","isAllow","allow","register","start","move","end","cancel","unlock","addClass","GUID","parseOptions","str","Function","substr","componentEvent","pluginName","inst","fullEventName","jQuery","reflow","clientLeft","transition","duration","webkitTransitionDuration","transitionDuration","transitionEnd","events","fireCallBack","transformOrigin","webkitTransformOrigin","transform","webkitTransform","showOverlay","zIndex","$overlay","level","hideOverlay","force","removeClass","lockScreen","$body","newBodyWidth","unlockScreen","throttle","delay","timer","guid","s4","floor","random","substring","entries","mutation","apiInit","that","item","$this","m","Headroom","DEFAULT","tolerance","initialClass","pinnedClass","unpinnedClass","opts","$headroom","oldInst","down","up","_init","state","inited","lastScrollY","_attachEvent","_scroll","rafId","currentScrollY","direction","toleranceExceeded","abs","unpin","pin","enable","disable","getState","Ripple","getProp","updateValueStyle","reInit","rangeSelector","layerHTML","fillHTML","CollapsePrivate","accordion","Collapse","namespace","ns","classpPefix","class_item","class_item_open","class_header","class_body","$collapse","$item","_isOpen","close","_getItem","parseInt","$content","$tmpItem","scrollHeight","openAll","closeAll","$target","checkboxHTML","tag","Table","$table","init","$thRow","$tdRows","$tdCheckboxs","selectable","selectedRow","_updateThCheckbox","_updateTdCheckbox","_updateNumericCol","$tdRow","$checkbox","$thCheckbox","isCheckedAll","checkbox","row","$th","th","updateTables","$ripple","button","tmp","touchStartX","pageX","touchStartY","pageY","center","innerHeight","innerWidth","diameter","pow","translate","$wave","removeTimeout","removeRipple","hidden","hideRipple","hideEvent","moveEvent","input","$input","domLoadedEvent","$textField","validity","valid","inputValue","hasExtraSpace","maxlength","text","focus","updateTextFields","$slider","$track","$fill","$thumb","min","isDisabled","isDiscrete","discrete","$thumbText","percent","updateSliders","Fab","$fab","$btn","$dial","$dialBtns","btn","Select","gutter","$selectNative","uniqueID","handleUpdate","$select","$items","option","textContent","selected","selectedIndex","$selected","$menu","size","itemData","margin-top","transformOriginY","menuMarginTop","windowHeight","selectHeight","$menuItemFirst","menuItemHeight","menuItemMargin","menuWidth","menuHeight","selectTop","heightTemp","menuMarginTopMax","menuTop","transform-origin","readjustMenu","Tab","$ele","$tab","$tabs","$indicator","activeIndex","hash","tab","_setActive","_setIndicatorPosition","_bindTabEvent","clickEvent","targetId","$activeTab","activeTabOffset","scrollLeft","next","prev","$oldTabs","$newTabs","oldTabsEle","newTabsEle","Drawer","overlay","swipe","isDesktop","$drawer","swipeSupport","openNavEventHandler","swipeStartX","swiping","maybeSwiping","swipeAreaWidth","setPosition","translateX","closeTransform","transformCSS","cleanPosition","getMaxTranslateX","getTranslateX","currentX","onBodyTouchStart","touchmove","onBodyTouchMove","touchend","onBodyTouchEnd","touchcancel","touchX","touchY","dXAbs","dYAbs","changedTouches","translateRatio","swipingState","Dialog","isLockScreen","currentInst","history","modal","closeOnEsc","closeOnCancel","closeOnConfirm","destroyOnClosed","readjust","$dialog","$dialogTitle","$dialogContent","$dialogActions","dialogHeight","hashchangeEvent","overlayClick","destroy","_doOpen","_arguments","back","keyCode","dialog","DEFAULT_BUTTON","bold","onClick","title","content","buttons","stackedButtons","cssClass","onOpen","onOpened","onClose","onClosed","buttonsHTML","HTML","alert","onConfirm","confirmText","confirm","onCancel","cancelText","prompt","label","defaultValue","confirmOnEnter","Tooltip","$tooltip","oldOpts","marginLeft","marginTop","targetProps","targetMargin","tooltipWidth","offsetWidth","tooltipHeight","offsetHeight","targetOffset","margin-left","timeoutId","buttonText","buttonColor","closeOnButtonClick","closeOnOutsideClick","onButtonClick","Snackbar","message","buttonColorStyle","buttonColorClass","$snackbar","_setPosition","translateY","snackbarHeight","clientHeight","snackbar","isThis","$bottomNav","spinner","layer","$spinner","updateSpinners","Panel","Menu","align","fixed","covered","subMenuTrigger","subMenuDelay","menuLeft","transformOriginX","windowWidth","isCovered","isFixed","$anchor","anchorTmp","anchorTop","anchorLeft","anchorHeight","anchorWidth","anchorBottom","anchorRight","anchorOffsetTop","offsetTop","anchorOffsetLeft","offsetLeft","menuHeightTemp","isCascade","menuWidthTemp","openSubMenu","$submenu","submenuTop","submenuLeft","submenuWidth","submenuHeight","itemTmp","itemWidth","itemHeight","itemLeft","itemTop","closeSubMenu","$subSubmenu","bindSubMenuEvent","timeoutOpen","$tmpSubmenu","eventType","$relatedTarget","relatedTarget","tmpClose","tmpOpen","anchorSelector","menuSelector"],"mappings":"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","file":"mdui.min.a104fa47.js","sourceRoot":"..","sourcesContent":["/* jshint ignore:start */\n;(function(global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.mdui = factory());\n}(this, (function() {\n  'use strict';\n\n  /* jshint ignore:end */\n  var mdui = {};\n","/**\n * =============================================================================\n * ************   浏览器兼容性问题修复   ************\n * =============================================================================\n */\n\n/**\n * requestAnimationFrame\n * cancelAnimationFrame\n */\n(function () {\n  var lastTime = 0;\n\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = window.webkitRequestAnimationFrame;\n    window.cancelAnimationFrame = window.webkitCancelAnimationFrame;\n  }\n\n  if (!window.requestAnimationFrame) {\n    window.requestAnimationFrame = function (callback, element) {\n      var currTime = new Date().getTime();\n      var timeToCall = Math.max(0, 16.7 - (currTime - lastTime));\n\n      var id = window.setTimeout(function () {\n          callback(currTime + timeToCall);\n        }, timeToCall);\n\n      lastTime = currTime + timeToCall;\n      return id;\n    };\n  }\n\n  if (!window.cancelAnimationFrame) {\n    window.cancelAnimationFrame = function (id) {\n      clearTimeout(id);\n    };\n  }\n})();\n","/**\n * JQ 1.0.0 (https://github.com/zdhxiong/mdui.JQ#readme)\n * Copyright 2018-2018 zdhxiong\n * Licensed under MIT\n */\nvar $ = (function () {\n  'use strict';\n\n  var JQ = function JQ(arr) {\n    var self = this;\n\n    for (var i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n\n    self.length = arr.length;\n\n    return this;\n  };\n\n  function $$1(selector) {\n    var arr = [];\n\n    if (!selector) {\n      return new JQ(arr);\n    }\n\n    if (selector instanceof JQ) {\n      return selector;\n    }\n\n    if (typeof selector === 'string') {\n      var html = selector.trim();\n\n      if (html[0] === '<' && html[html.length - 1] === '>') {\n        // 创建 HTML 字符串\n        var toCreate = 'div';\n\n        if (html.indexOf('<li') === 0) {\n          toCreate = 'ul';\n        }\n\n        if (html.indexOf('<tr') === 0) {\n          toCreate = 'tbody';\n        }\n\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) {\n          toCreate = 'tr';\n        }\n\n        if (html.indexOf('<tbody') === 0) {\n          toCreate = 'table';\n        }\n\n        if (html.indexOf('<option') === 0) {\n          toCreate = 'select';\n        }\n\n        var tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n\n        for (var i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        // 选择器\n        var elems = selector[0] === '#' && !selector.match(/[ .<>:~]/)\n          ? [document.getElementById(selector.slice(1))]\n          : document.querySelectorAll(selector);\n\n        for (var i$1 = 0; i$1 < elems.length; i$1 += 1) {\n          if (elems[i$1]) {\n            arr.push(elems[i$1]);\n          }\n        }\n      }\n    } else if (typeof selector === 'function') {\n      // function\n      return $$1(document).ready(selector);\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // NodeList\n      for (var i$2 = 0; i$2 < selector.length; i$2 += 1) {\n        arr.push(selector[i$2]);\n      }\n    }\n\n    return new JQ(arr);\n  }\n\n  $$1.fn = JQ.prototype;\n\n  function extend() {\n    var this$1 = this;\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (!args.length) {\n      return this;\n    }\n\n    // $.extend(obj)\n    if (args.length === 1) {\n      Object.keys(args[0]).forEach(function (prop) {\n        this$1[prop] = args[0][prop];\n      });\n\n      return this;\n    }\n\n    // $.extend({}, defaults[, obj])\n    var target = args.shift();\n\n    var loop = function ( i ) {\n      Object.keys(args[i]).forEach(function (prop) {\n        target[prop] = args[i][prop];\n      });\n    };\n\n    for (var i = 0; i < args.length; i += 1) loop( i );\n\n    return target;\n  }\n\n  $$1.fn.extend = extend;\n  $$1.extend = extend;\n\n  /**\n   * 判断一个节点名\n   * @param ele\n   * @param name\n   * @returns {boolean}\n   */\n  function isNodeName(ele, name) {\n    return ele.nodeName && ele.nodeName.toLowerCase() === name.toLowerCase();\n  }\n\n  /**\n   * 除去 null 后的 object 类型\n   * @param obj\n   * @returns {*|boolean}\n   */\n  function isObjectLike(obj) {\n    return typeof obj === 'object' && obj !== null;\n  }\n\n  function isFunction(fn) {\n    return typeof fn === 'function';\n  }\n\n  function isString(obj) {\n    return typeof obj === 'string';\n  }\n\n  function isWindow(win) {\n    return win && win === win.window;\n  }\n\n  function isDocument(doc) {\n    return doc && doc.nodeType === doc.DOCUMENT_NODE;\n  }\n\n  function isArrayLike(obj) {\n    return typeof obj.length === 'number';\n  }\n\n  /**\n   * 循环数组或对象\n   * @param obj\n   * @param callback\n   * @returns {*}\n   */\n  function each(obj, callback) {\n    if (isArrayLike(obj)) {\n      for (var i = 0; i < obj.length; i += 1) {\n        if (callback.call(obj[i], i, obj[i]) === false) {\n          return obj;\n        }\n      }\n    } else {\n      var keys = Object.keys(obj);\n      for (var i$1 = 0; i$1 < keys.length; i$1 += 1) {\n        if (callback.call(obj[keys[i$1]], keys[i$1], obj[keys[i$1]]) === false) {\n          return obj;\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  /**\n   * 遍历数组或对象，通过函数返回一个新的数组或对象，null 和 undefined 将被过滤掉。\n   * @param elems\n   * @param callback\n   * @returns {Array}\n   */\n  function map(elems, callback) {\n    var ref;\n\n    var value;\n    var ret = [];\n\n    each(elems, function (i, elem) {\n      value = callback(elem, i);\n\n      if (value !== null && value !== undefined) {\n        ret.push(value);\n      }\n    });\n\n    return (ref = []).concat.apply(ref, ret);\n  }\n\n  /**\n   * 把对象合并到第一个参数中，并返回第一个参数\n   * @param first\n   * @param second\n   * @returns {*}\n   */\n  function merge(first, second) {\n    each(second, function (i, val) {\n      first.push(val);\n    });\n\n    return first;\n  }\n\n  /**\n   * 删除数组中重复元素\n   * @param arr {Array}\n   * @returns {Array}\n   */\n  function unique(arr) {\n    var result = [];\n\n    for (var i = 0; i < arr.length; i += 1) {\n      if (result.indexOf(arr[i]) === -1) {\n        result.push(arr[i]);\n      }\n    }\n\n    return result;\n  }\n\n  var elementDisplay = {};\n\n  /**\n   * 获取元素的默认 display 样式值，用于 .show() 方法\n   * @param nodeName\n   * @returns {*}\n   */\n  function defaultDisplay(nodeName) {\n    var element;\n    var display;\n\n    if (!elementDisplay[nodeName]) {\n      element = document.createElement(nodeName);\n      document.body.appendChild(element);\n      display = getComputedStyle(element, '').getPropertyValue('display');\n      element.parentNode.removeChild(element);\n      if (display === 'none') {\n        display = 'block';\n      }\n\n      elementDisplay[nodeName] = display;\n    }\n\n    return elementDisplay[nodeName];\n  }\n\n  $$1.extend({\n    each: each,\n    merge: merge,\n    unique: unique,\n    map: map,\n\n    /**\n     * 一个 DOM 节点是否包含另一个 DOM 节点\n     * @param parent {Node} 父节点\n     * @param node {Node} 子节点\n     * @returns {Boolean}\n     */\n    contains: function contains(parent, node) {\n      if (parent && !node) {\n        return document.documentElement.contains(parent);\n      }\n\n      return parent !== node && parent.contains(node);\n    },\n\n    /**\n     * 将数组或对象序列化\n     * @param obj\n     * @returns {String}\n     */\n    param: function param(obj) {\n      if (!isObjectLike(obj)) {\n        return '';\n      }\n\n      var args = [];\n\n      function destructure(key, value) {\n        var keyTmp;\n\n        if (isObjectLike(value)) {\n          each(value, function (i, v) {\n            if (Array.isArray(value) && !isObjectLike(v)) {\n              keyTmp = '';\n            } else {\n              keyTmp = i;\n            }\n\n            destructure((key + \"[\" + keyTmp + \"]\"), v);\n          });\n        } else {\n          if (value !== null && value !== '') {\n            keyTmp = \"=\" + (encodeURIComponent(value));\n          } else {\n            keyTmp = '';\n          }\n\n          args.push(encodeURIComponent(key) + keyTmp);\n        }\n      }\n\n      each(obj, function (key, value) {\n        destructure(key, value);\n      });\n\n      return args.join('&');\n    },\n  });\n\n  $$1.fn.extend({\n    /**\n     * 遍历对象\n     * @param callback {Function}\n     * @return {JQ}\n     */\n    each: function each$1(callback) {\n      return each(this, callback);\n    },\n\n    /**\n     * 通过遍历集合中的节点对象，通过函数返回一个新的对象，null 或 undefined 将被过滤掉。\n     * @param callback {Function}\n     * @returns {JQ}\n     */\n    map: function map$1(callback) {\n      return new JQ(map(this, function (el, i) { return callback.call(el, i, el); }));\n    },\n\n    /**\n     * 获取指定 DOM 元素，没有 index 参数时，获取所有 DOM 的数组\n     * @param index {Number=}\n     * @returns {Node|Array}\n     */\n    get: function get(index) {\n      return index === undefined\n        ? [].slice.call(this)\n        : this[index >= 0 ? index : index + this.length];\n    },\n\n    /**\n     * array中提取的方法。从start开始，如果end 指出。提取不包含end位置的元素。\n     * @param args {start, end}\n     * @returns {JQ}\n     */\n    slice: function slice() {\n      var args = [], len = arguments.length;\n      while ( len-- ) args[ len ] = arguments[ len ];\n\n      return new JQ([].slice.apply(this, args));\n    },\n\n    /**\n     * 筛选元素集合\n     * @param selector {String|JQ|Node|Function}\n     * @returns {JQ}\n     */\n    filter: function filter(selector) {\n      if (isFunction(selector)) {\n        return this.map(function (index, ele) { return (selector.call(ele, index, ele) ? ele : undefined); });\n      }\n\n      var $selector = $$1(selector);\n\n      return this.map(function (index, ele) { return ($selector.index(ele) > -1 ? ele : undefined); });\n    },\n\n    /**\n     * 从元素集合中删除指定的元素\n     * @param selector {String|Node|JQ|Function}\n     * @return {JQ}\n     */\n    not: function not(selector) {\n      var $excludes = this.filter(selector);\n\n      return this.map(function (index, ele) { return ($excludes.index(ele) > -1 ? undefined : ele); });\n    },\n\n    /**\n     * 获取元素相对于 document 的偏移\n     * @returns {Object}\n     */\n    offset: function offset() {\n      if (this[0]) {\n        var offset = this[0].getBoundingClientRect();\n\n        return {\n          left: offset.left + window.pageXOffset,\n          top: offset.top + window.pageYOffset,\n          width: offset.width,\n          height: offset.height,\n        };\n      }\n\n      return null;\n    },\n\n    /**\n     * 返回最近的用于定位的父元素\n     * @returns {*|JQ}\n     */\n    offsetParent: function offsetParent() {\n      return this.map(function () {\n        var parent = this.offsetParent;\n\n        while (parent && $$1(parent).css('position') === 'static') {\n          parent = parent.offsetParent;\n        }\n\n        return parent || document.documentElement;\n      });\n    },\n\n    /**\n     * 获取元素相对于父元素的偏移\n     * @return {Object}\n     */\n    position: function position() {\n      var self = this;\n\n      if (!self[0]) {\n        return null;\n      }\n\n      var offsetParent;\n      var offset;\n      var parentOffset = {\n        top: 0,\n        left: 0,\n      };\n\n      if (self.css('position') === 'fixed') {\n        offset = self[0].getBoundingClientRect();\n      } else {\n        offsetParent = self.offsetParent();\n        offset = self.offset();\n        if (!isNodeName(offsetParent[0], 'html')) {\n          parentOffset = offsetParent.offset();\n        }\n\n        parentOffset = {\n          top: parentOffset.top + offsetParent.css('borderTopWidth'),\n          left: parentOffset.left + offsetParent.css('borderLeftWidth'),\n        };\n      }\n\n      return {\n        top: offset.top - parentOffset.top - self.css('marginTop'),\n        left: offset.left - parentOffset.left - self.css('marginLeft'),\n        width: offset.width,\n        height: offset.height,\n      };\n    },\n\n    /**\n     * 显示指定元素\n     * @returns {JQ}\n     */\n    show: function show() {\n      return this.each(function () {\n        if (this.style.display === 'none') {\n          this.style.display = '';\n        }\n\n        if (window.getComputedStyle(this, '').getPropertyValue('display') === 'none') {\n          this.style.display = defaultDisplay(this.nodeName);\n        }\n      });\n    },\n\n    /**\n     * 隐藏指定元素\n     * @returns {JQ}\n     */\n    hide: function hide() {\n      return this.each(function () {\n        this.style.display = 'none';\n      });\n    },\n\n    /**\n     * 切换元素的显示状态\n     * @returns {JQ}\n     */\n    toggle: function toggle() {\n      return this.each(function () {\n        this.style.display = this.style.display === 'none' ? '' : 'none';\n      });\n    },\n\n    /**\n     * 是否含有指定的 CSS 类\n     * @param className {String}\n     * @returns {boolean}\n     */\n    hasClass: function hasClass(className) {\n      if (!this[0] || !className) {\n        return false;\n      }\n\n      return this[0].classList.contains(className);\n    },\n\n    /**\n     * 移除指定属性\n     * @param attr {String}\n     * @returns {JQ}\n     */\n    removeAttr: function removeAttr(attr) {\n      return this.each(function () {\n        this.removeAttribute(attr);\n      });\n    },\n\n    /**\n     * 删除属性值\n     * @param name {String}\n     * @returns {JQ}\n     */\n    removeProp: function removeProp(name) {\n      return this.each(function () {\n        try {\n          delete this[name];\n        } catch (e) {\n          // empty\n        }\n      });\n    },\n\n    /**\n     * 获取当前对象中第n个元素\n     * @param index {Number}\n     * @returns {JQ}\n     */\n    eq: function eq(index) {\n      var ret = index === -1\n        ? this.slice(index)\n        : this.slice(index, +index + 1);\n\n      return new JQ(ret);\n    },\n\n    /**\n     * 获取对象中第一个元素\n     * @returns {JQ}\n     */\n    first: function first() {\n      return this.eq(0);\n    },\n\n    /**\n     * 获取对象中最后一个元素\n     * @returns {JQ}\n     */\n    last: function last() {\n      return this.eq(-1);\n    },\n\n    /**\n     * 获取一个元素的位置。\n     * 当 elem 参数没有给出时，返回当前元素在兄弟节点中的位置。\n     * 有给出了 elem 参数时，返回 elem 元素在当前对象中的位置\n     * @param elem {Selector|Node=}\n     * @returns {Number}\n     */\n    index: function index(elem) {\n      if (!elem) {\n        // 获取当前 JQ 对象的第一个元素在同辈元素中的位置\n        return this\n          .eq(0)\n          .parent()\n          .children()\n          .get()\n          .indexOf(this[0]);\n      }\n\n      if (isString(elem)) {\n        // 返回当前 JQ 对象的第一个元素在指定选择器对应的元素中的位置\n        return $$1(elem)\n          .eq(0)\n          .parent()\n          .children()\n          .get()\n          .indexOf(this[0]);\n      }\n\n      // 返回指定元素在当前 JQ 对象中的位置\n      return this\n        .get()\n        .indexOf(elem);\n    },\n\n    /**\n     * 根据选择器、DOM元素或 JQ 对象来检测匹配元素集合，\n     * 如果其中至少有一个元素符合这个给定的表达式就返回true\n     * @param selector {String|Node|NodeList|Array|JQ|Window}\n     * @returns boolean\n     */\n    is: function is(selector) {\n      var self = this[0];\n\n      if (!self || selector === undefined || selector === null) {\n        return false;\n      }\n\n      if (isString(selector)) {\n        if (self === document || self === window) {\n          return false;\n        }\n\n        var matchesSelector = self.matches\n          || self.matchesSelector\n          || self.webkitMatchesSelector\n          || self.mozMatchesSelector\n          || self.oMatchesSelector\n          || self.msMatchesSelector;\n\n        return matchesSelector.call(self, selector);\n      }\n\n      if (selector === document || selector === window) {\n        return self === selector;\n      }\n\n      if (selector.nodeType || isArrayLike(selector)) {\n        var $compareWith = selector.nodeType ? [selector] : selector;\n\n        for (var i = 0; i < $compareWith.length; i += 1) {\n          if ($compareWith[i] === self) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      return false;\n    },\n\n    /**\n     * 根据 CSS 选择器找到后代节点的集合\n     * @param selector {String}\n     * @returns {JQ}\n     */\n    find: function find(selector) {\n      var foundElements = [];\n\n      this.each(function (i, _this) {\n        var nodeType = _this.nodeType;\n\n        if (nodeType !== 1 && nodeType !== 9) {\n          // 不是 element 和 document 则跳过\n          return;\n        }\n\n        merge(foundElements, _this.querySelectorAll(selector));\n      });\n\n      return new JQ(foundElements);\n    },\n\n    /**\n     * 找到直接子元素的元素集合\n     * @param selector {String=}\n     * @returns {JQ}\n     */\n    children: function children(selector) {\n      var children = [];\n\n      this.each(function (_, _this) {\n        each(_this.childNodes, function (__, childNode) {\n          if (childNode.nodeType !== 1) {\n            return;\n          }\n\n          if (!selector || (selector && $$1(childNode).is(selector))) {\n            children.push(childNode);\n          }\n        });\n      });\n\n      return new JQ(unique(children));\n    },\n\n    /**\n     * 保留含有指定子元素的元素，去掉不含有指定子元素的元素\n     * @param selector {String|Node|JQ|NodeList|Array}\n     * @return {JQ}\n     */\n    has: function has(selector) {\n      var $targets = isString(selector) ? this.find(selector) : $$1(selector);\n      var length = $targets.length;\n\n      return this.filter(function () {\n        var this$1 = this;\n\n        for (var i = 0; i < length; i += 1) {\n          if ($$1.contains(this$1, $targets[i])) {\n            return true;\n          }\n        }\n\n        return false;\n      });\n    },\n\n    /**\n     * 取得同辈元素的集合\n     * @param selector {String=}\n     * @returns {JQ}\n     */\n    siblings: function siblings(selector) {\n      return this.prevAll(selector).add(this.nextAll(selector));\n    },\n\n    /**\n     * 返回首先匹配到的父节点，包含父节点\n     * @param selector {String}\n     * @returns {JQ}\n     */\n    closest: function closest(selector) {\n      var self = this;\n\n      if (!self.is(selector)) {\n        self = self.parents(selector).eq(0);\n      }\n\n      return self;\n    },\n\n    /**\n     * 删除所有匹配的元素\n     * @returns {JQ}\n     */\n    remove: function remove() {\n      return this.each(function (i, _this) {\n        if (_this.parentNode) {\n          _this.parentNode.removeChild(_this);\n        }\n      });\n    },\n\n    /**\n     * 添加匹配的元素到当前对象中\n     * @param selector {String|JQ}\n     * @returns {JQ}\n     */\n    add: function add(selector) {\n      return new JQ(unique(merge(this.get(), $$1(selector))));\n    },\n\n    /**\n     * 删除子节点\n     * @returns {JQ}\n     */\n    empty: function empty() {\n      return this.each(function () {\n        this.innerHTML = '';\n      });\n    },\n\n    /**\n     * 通过深度克隆来复制集合中的所有元素。\n     * (通过原生 cloneNode 方法深度克隆来复制集合中的所有元素。此方法不会有数据和事件处理程序复制到新的元素。这点和jquery中利用一个参数来确定是否复制数据和事件处理不相同。)\n     * @returns {JQ}\n     */\n    clone: function clone() {\n      return this.map(function () {\n        return this.cloneNode(true);\n      });\n    },\n\n    /**\n     * 用新元素替换当前元素\n     * @param newContent {String|Node|NodeList|JQ}\n     * @returns {JQ}\n     */\n    replaceWith: function replaceWith(newContent) {\n      return this.before(newContent).remove();\n    },\n\n    /**\n     * 将表单元素的值组合成键值对数组\n     * @returns {Array}\n     */\n    serializeArray: function serializeArray() {\n      var result = [];\n      var elem = this[0];\n\n      if (!elem || !elem.elements) {\n        return result;\n      }\n\n      $$1([].slice.call(elem.elements)).each(function () {\n        var $elem = $$1(this);\n        var type = $elem.attr('type');\n        if (\n          this.nodeName.toLowerCase() !== 'fieldset'\n          && !this.disabled\n          && ['submit', 'reset', 'button'].indexOf(type) === -1\n          && (['radio', 'checkbox'].indexOf(type) === -1 || this.checked)\n        ) {\n          result.push({\n            name: $elem.attr('name'),\n            value: $elem.val(),\n          });\n        }\n      });\n\n      return result;\n    },\n\n    /**\n     * 将表单元素或对象序列化\n     * @returns {String}\n     */\n    serialize: function serialize() {\n      var result = [];\n\n      each(this.serializeArray(), function (i, elem) {\n        result.push(((encodeURIComponent(elem.name)) + \"=\" + (encodeURIComponent(elem.value))));\n      });\n\n      return result.join('&');\n    },\n  });\n\n  /**\n   * val - 获取或设置元素的值\n   * @param value {String=}\n   * @return {*|JQ}\n   */\n  /**\n   * html - 获取或设置元素的 HTML\n   * @param value {String=}\n   * @return {*|JQ}\n   */\n  /**\n   * text - 获取或设置元素的内容\n   * @param value {String=}\n   * @return {*|JQ}\n   */\n  each(['val', 'html', 'text'], function (nameIndex, name) {\n    var props = {\n      0: 'value',\n      1: 'innerHTML',\n      2: 'textContent',\n    };\n\n    var defaults = {\n      0: undefined,\n      1: undefined,\n      2: null,\n    };\n\n    $$1.fn[name] = function (value) {\n      if (value === undefined) {\n        // 获取值\n        return this[0] ? this[0][props[nameIndex]] : defaults[nameIndex];\n      }\n\n      // 设置值\n      return this.each(function (i, elem) {\n        elem[props[nameIndex]] = value;\n      });\n    };\n  });\n\n  /**\n   * attr - 获取或设置元素的属性值\n   * @param {name|props|key,value=}\n   * @return {String|JQ}\n   */\n  /**\n   * prop - 获取或设置元素的属性值\n   * @param {name|props|key,value=}\n   * @return {String|JQ}\n   */\n  /**\n   * css - 获取或设置元素的样式\n   * @param {name|props|key,value=}\n   * @return {String|JQ}\n   */\n  each(['attr', 'prop', 'css'], function (nameIndex, name) {\n    function set(elem, key, value) {\n      if (nameIndex === 0) {\n        elem.setAttribute(key, value);\n      } else if (nameIndex === 1) {\n        elem[key] = value;\n      } else {\n        elem.style[key] = value;\n      }\n    }\n\n    function get(elem, key) {\n      if (!elem) {\n        return undefined;\n      }\n\n      if (nameIndex === 0) {\n        return elem.getAttribute(key);\n      }\n\n      if (nameIndex === 1) {\n        return elem[key];\n      }\n\n      return window.getComputedStyle(elem, null).getPropertyValue(key);\n    }\n\n    $$1.fn[name] = function (key, value) {\n      var argLength = arguments.length;\n\n      if (argLength === 1 && isString(key)) {\n        // 获取值\n        return get(this[0], key);\n      }\n\n      // 设置值\n      return this.each(function (i, elem) {\n        if (argLength === 2) {\n          set(elem, key, value);\n        } else {\n          each(key, function (k, v) {\n            set(elem, k, v);\n          });\n        }\n      });\n    };\n  });\n\n  /**\n   * addClass - 添加 CSS 类，多个类名用空格分割\n   * @param className {String}\n   * @return {JQ}\n   */\n  /**\n   * removeClass - 移除 CSS 类，多个类名用空格分割\n   * @param className {String}\n   * @return {JQ}\n   */\n  /**\n   * toggleClass - 切换 CSS 类名，多个类名用空格分割\n   * @param className {String}\n   * @return {JQ}\n   */\n  each(['add', 'remove', 'toggle'], function (nameIndex, name) {\n    $$1.fn[(name + \"Class\")] = function (className) {\n      if (!className) {\n        return this;\n      }\n\n      var classes = className.split(' ');\n\n      return this.each(function (i, elem) {\n        each(classes, function (j, cls) {\n          elem.classList[name](cls);\n        });\n      });\n    };\n  });\n\n  /**\n   * width - 获取元素的宽度\n   * @return {Number}\n   */\n  /**\n   * height - 获取元素的高度\n   * @return {Number}\n   */\n  each({\n    Width: 'width',\n    Height: 'height',\n  }, function (prop, name) {\n    $$1.fn[name] = function (val) {\n      if (val === undefined) {\n        // 获取\n        var elem = this[0];\n\n        if (isWindow(elem)) {\n          return elem[(\"inner\" + prop)];\n        }\n\n        if (isDocument(elem)) {\n          return elem.documentElement[(\"scroll\" + prop)];\n        }\n\n        var $elem = $$1(elem);\n\n        // IE10、IE11 在 box-sizing:border-box 时，不会包含 padding 和 border，这里进行修复\n        var IEFixValue = 0;\n        var isWidth = name === 'width';\n        if ('ActiveXObject' in window) { // 判断是 IE 浏览器\n          if ($elem.css('box-sizing') === 'border-box') {\n            IEFixValue = parseFloat($elem.css((\"padding-\" + (isWidth ? 'left' : 'top'))))\n              + parseFloat($elem.css((\"padding-\" + ((isWidth ? 'right' : 'bottom')))))\n              + parseFloat($elem.css((\"border-\" + (isWidth ? 'left' : 'top') + \"-width\")))\n              + parseFloat($elem.css((\"border-\" + (isWidth ? 'right' : 'bottom') + \"-width\")));\n          }\n        }\n\n        return parseFloat($$1(elem).css(name)) + IEFixValue;\n      }\n\n      // 设置\n      /* eslint no-restricted-globals: 0 */\n      if (!isNaN(Number(val)) && val !== '') {\n        val += 'px';\n      }\n\n      return this.css(name, val);\n    };\n  });\n\n  /**\n   * innerWidth - 获取元素的宽度，包含内边距\n   * @return {Number}\n   */\n  /**\n   * innerHeight - 获取元素的高度，包含内边距\n   * @return {Number}\n   */\n  each({\n    Width: 'width',\n    Height: 'height',\n  }, function (prop, name) {\n    $$1.fn[(\"inner\" + prop)] = function () {\n      var value = this[name]();\n      var $elem = $$1(this[0]);\n\n      if ($elem.css('box-sizing') !== 'border-box') {\n        value += parseFloat($elem.css((\"padding-\" + (name === 'width' ? 'left' : 'top'))));\n        value += parseFloat($elem.css((\"padding-\" + (name === 'width' ? 'right' : 'bottom'))));\n      }\n\n      return value;\n    };\n  });\n\n  function dir(nodes, selector, nameIndex, node) {\n    var ret = [];\n    var elem;\n\n    nodes.each(function (j, _this) {\n      elem = _this[node];\n      while (elem) {\n        if (nameIndex === 2) {\n          // prevUntil\n          if (!selector || (selector && $$1(elem).is(selector))) {\n            break;\n          }\n\n          ret.push(elem);\n        } else if (nameIndex === 0) {\n          // prev\n          if (!selector || (selector && $$1(elem).is(selector))) {\n            ret.push(elem);\n          }\n\n          break;\n        } else if (!selector || (selector && $$1(elem).is(selector))) {\n          // prevAll\n          ret.push(elem);\n        }\n\n        elem = elem[node];\n      }\n    });\n\n    return new JQ(unique(ret));\n  }\n\n  /**\n   * prev - 取得前一个匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * prevAll - 取得前面所有匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * prevUntil - 取得前面的所有元素，直到遇到匹配的元素，不包含匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  each(['', 'All', 'Until'], function (nameIndex, name) {\n    $$1.fn[(\"prev\" + name)] = function (selector) {\n      // prevAll、prevUntil 需要把元素的顺序倒序处理，以便和 jQuery 的结果一致\n      var $nodes = nameIndex === 0 ? this : $$1(this.get().reverse());\n\n      return dir($nodes, selector, nameIndex, 'previousElementSibling');\n    };\n  });\n\n  /**\n   * next - 取得后一个匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * nextAll - 取得后面所有匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * nextUntil - 取得后面所有匹配的元素，直到遇到匹配的元素，不包含匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  each(['', 'All', 'Until'], function (nameIndex, name) {\n    $$1.fn[(\"next\" + name)] = function (selector) {\n      return dir(this, selector, nameIndex, 'nextElementSibling');\n    };\n  });\n\n  /**\n   * parent - 取得匹配的直接父元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * parents - 取得所有匹配的父元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  /**\n   * parentUntil - 取得所有的父元素，直到遇到匹配的元素，不包含匹配的元素\n   * @param selector {String=}\n   * @return {JQ}\n   */\n  each(['', 's', 'sUntil'], function (nameIndex, name) {\n    $$1.fn[(\"parent\" + name)] = function (selector) {\n      // parents、parentsUntil 需要把元素的顺序反向处理，以便和 jQuery 的结果一致\n      var $nodes = nameIndex === 0 ? this : $$1(this.get().reverse());\n\n      return dir($nodes, selector, nameIndex, 'parentNode');\n    };\n  });\n\n  /**\n   * append - 在元素内部追加内容\n   * @param newChild {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  /**\n   * prepend - 在元素内部前置内容\n   * @param newChild {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  each(['append', 'prepend'], function (nameIndex, name) {\n    $$1.fn[name] = function (newChild) {\n      var newChilds;\n      var copyByClone = this.length > 1;\n\n      if (isString(newChild)) {\n        var tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        newChilds = [].slice.call(tempDiv.childNodes);\n      } else {\n        newChilds = $$1(newChild).get();\n      }\n\n      if (nameIndex === 1) {\n        // prepend\n        newChilds.reverse();\n      }\n\n      return this.each(function (i, _this) {\n        each(newChilds, function (j, child) {\n          // 一个元素要同时追加到多个元素中，需要先复制一份，然后追加\n          if (copyByClone && i > 0) {\n            child = child.cloneNode(true);\n          }\n\n          if (nameIndex === 0) {\n            // append\n            _this.appendChild(child);\n          } else {\n            // prepend\n            _this.insertBefore(child, _this.childNodes[0]);\n          }\n        });\n      });\n    };\n  });\n\n  /**\n   * insertBefore - 插入到指定元素的前面\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  /**\n   * insertAfter - 插入到指定元素的后面\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  each(['insertBefore', 'insertAfter'], function (nameIndex, name) {\n    $$1.fn[name] = function (selector) {\n      var $elem = $$1(selector);\n\n      return this.each(function (i, _this) {\n        $elem.each(function (j, elem) {\n          elem.parentNode.insertBefore(\n            $elem.length === 1 ? _this : _this.cloneNode(true),\n            nameIndex === 0 ? elem : elem.nextSibling\n          );\n        });\n      });\n    };\n  });\n\n  /**\n   * appendTo - 追加到指定元素内容\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  /**\n   * prependTo - 前置到指定元素内部\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  /**\n   * before - 插入到指定元素前面\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  /**\n   * after - 插入到指定元素后面\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  /**\n   * replaceAll - 替换掉指定元素\n   * @param selector {String|Node|NodeList|JQ}\n   * @return {JQ}\n   */\n  each({\n    appendTo: 'append',\n    prependTo: 'prepend',\n    before: 'insertBefore',\n    after: 'insertAfter',\n    replaceAll: 'replaceWith',\n  }, function (name, original) {\n    $$1.fn[name] = function (selector) {\n      $$1(selector)[original](this);\n      return this;\n    };\n  });\n\n  var dataNS = 'mduiElementDataStorage';\n\n  $$1.extend({\n    /**\n     * 在指定元素上存储数据，或从指定元素上读取数据\n     * @param elem 必须， DOM 元素\n     * @param key 必须，键名\n     * @param value 可选，值\n     */\n    data: function data(elem, key, value) {\n      var data = {};\n\n      if (value !== undefined) {\n        // 根据 key、value 设置值\n        data[key] = value;\n      } else if (isObjectLike(key)) {\n        // 根据键值对设置值\n        data = key;\n      } else if (key === undefined) {\n        // 获取所有值\n        var result = {};\n\n        each(elem.attributes, function (i, attribute) {\n          var name = attribute.name;\n\n          if (name.indexOf('data-') === 0) {\n            var prop = name.slice(5).replace(/-./g, function (u) { return u.charAt(1).toUpperCase(); });\n\n            result[prop] = attribute.value;\n          }\n        });\n\n        if (elem[dataNS]) {\n          each(elem[dataNS], function (k, v) {\n            result[k] = v;\n          });\n        }\n\n        return result;\n      } else if (elem[dataNS] && (key in elem[dataNS])) {\n        // 获取指定值\n        return elem[dataNS][key];\n      } else {\n        // 从 data- 中获取指定值\n        var dataKey = elem.getAttribute((\"data-\" + key));\n\n        if (dataKey) {\n          return dataKey;\n        }\n\n        return undefined;\n      }\n\n      // 设置值\n      if (!elem[dataNS]) {\n        elem[dataNS] = {};\n      }\n\n      each(data, function (k, v) {\n        elem[dataNS][k] = v;\n      });\n\n      return undefined;\n    },\n\n    /**\n     * 移除指定元素上存放的数据\n     * @param elem 必须，DOM 元素\n     * @param key 必须，键名\n     */\n    removeData: function removeData(elem, key) {\n      if (elem[dataNS] && elem[dataNS][key]) {\n        elem[dataNS][key] = null;\n        delete elem[dataNS][key];\n      }\n    },\n  });\n\n  $$1.fn.extend({\n    /**\n     * 在元素上读取或设置数据\n     * @param key 必须\n     * @param value\n     * @returns {*}\n     */\n    data: function data(key, value) {\n      if (value === undefined) {\n        if (isObjectLike(key)) {\n          // 同时设置多个值\n          return this.each(function (i, elem) {\n            $$1.data(elem, key);\n          });\n        }\n\n        if (this[0]) {\n          // 获取值\n          return $$1.data(this[0], key);\n        }\n\n        return undefined;\n      }\n\n      // 设置值\n      return this.each(function (i, elem) {\n        $$1.data(elem, key, value);\n      });\n    },\n\n    /**\n     * 移除元素上存储的数据\n     * @param key 必须\n     * @returns {*}\n     */\n    removeData: function removeData(key) {\n      return this.each(function (i, elem) {\n        $$1.removeData(elem, key);\n      });\n    },\n  });\n\n  !function(){!function(){try{return new e(\"test\"),!1}catch(e){}var e=function(e,n){n=n||{bubbles:!1,cancelable:!1};var t=document.createEvent(\"MouseEvent\");return t.initMouseEvent(e,n.bubbles,n.cancelable,window,0,0,0,0,0,!1,!1,!1,!1,0,null),t};e.prototype=Event.prototype,window.MouseEvent=e;}();}();\n\n  !function(){!function(){if(\"function\"==typeof window.CustomEvent){ return!1; }function t(t,n){n=n||{bubbles:!1,cancelable:!1,detail:void 0};var e=document.createEvent(\"CustomEvent\");return e.initCustomEvent(t,n.bubbles,n.cancelable,n.detail),e}t.prototype=window.Event.prototype,window.CustomEvent=t;}();}();\n\n// 存储事件\n  var handlers = {\n    // i: { // 元素ID\n    //   j: { // 事件ID\n    //     e: 事件名\n    //     fn: 事件处理函数\n    //     i: 事件ID\n    //     proxy:\n    //     sel: 选择器\n    //   }\n    // }\n  };\n\n// 元素ID\n  var mduiElementId = 1;\n\n  function fnFalse() {\n    return false;\n  }\n\n  /**\n   * 为元素赋予一个唯一的ID\n   * @param element\n   * @returns {number|*}\n   */\n  function getElementId(element) {\n    if (!element.mduiElementId) {\n      mduiElementId += 1;\n      element.mduiElementId = mduiElementId;\n    }\n\n    return element.mduiElementId;\n  }\n\n  /**\n   * 获取匹配的事件\n   * @param element\n   * @param eventName\n   * @param func\n   * @param selector\n   * @returns {Array}\n   */\n  function getHandlers(element, eventName, func, selector) {\n    return (handlers[getElementId(element)] || []).filter(function (handler) { return handler\n      && (!eventName || handler.e === eventName)\n      && (!func || handler.fn.toString() === func.toString())\n      && (!selector || handler.sel === selector); });\n  }\n\n  /**\n   * 添加事件监听\n   * @param element\n   * @param eventName\n   * @param func\n   * @param data\n   * @param selector\n   */\n  function add(element, eventName, func, data, selector) {\n    var elementId = getElementId(element);\n\n    if (!handlers[elementId]) {\n      handlers[elementId] = [];\n    }\n\n    // 传入 data.useCapture 来设置 useCapture: true\n    var useCapture = false;\n    if (isObjectLike(data) && data.useCapture) {\n      useCapture = true;\n    }\n\n    eventName.split(' ').forEach(function (event) {\n      var handler = {\n        e: event,\n        fn: func,\n        sel: selector,\n        i: handlers[elementId].length,\n      };\n\n      function callFn(e, elem) {\n        // 因为鼠标事件模拟事件的 detail 属性是只读的，因此在 e._detail 中存储参数\n        /* eslint no-underscore-dangle: 0 */\n        var result = func.apply(elem, e._detail === undefined ? [e] : [e].concat(e._detail));\n\n        if (result === false) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      }\n\n      function proxyfn(e) {\n        e._data = data;\n\n        if (selector) {\n          // 事件代理\n          $$1(element)\n            .find(selector)\n            .get()\n            .reverse()\n            .forEach(function (elem) {\n              if (elem === e.target || $$1.contains(elem, e.target)) {\n                callFn(e, elem);\n              }\n            });\n        } else {\n          // 不使用事件代理\n          callFn(e, element);\n        }\n      }\n\n      handler.proxy = proxyfn;\n      handlers[elementId].push(handler);\n      element.addEventListener(handler.e, proxyfn, useCapture);\n    });\n  }\n\n  /**\n   * 移除事件监听\n   * @param element\n   * @param eventName\n   * @param func\n   * @param selector\n   */\n  function remove(element, eventName, func, selector) {\n    (eventName || '').split(' ').forEach(function (event) {\n      getHandlers(element, event, func, selector).forEach(function (handler) {\n        delete handlers[getElementId(element)][handler.i];\n        element.removeEventListener(handler.e, handler.proxy, false);\n      });\n    });\n  }\n\n  $$1.fn.extend({\n    /**\n     * DOM 加载完毕后调用的函数\n     * @param callback\n     * @returns {ready}\n     */\n    ready: function ready(callback) {\n      if (/complete|loaded|interactive/.test(document.readyState) && document.body) {\n        callback($$1);\n      } else {\n        document.addEventListener('DOMContentLoaded', function () {\n          callback($$1);\n        }, false);\n      }\n\n      return this;\n    },\n\n    /**\n     * 绑定事件\n     *\n     * $().on({eventName: fn}, selector, data);\n     * $().on({eventName: fn}, selector)\n     * $().on({eventName: fn})\n     * $().on(eventName, selector, data, fn);\n     * $().on(eventName, selector, fn);\n     * $().on(eventName, data, fn);\n     * $().on(eventName, fn);\n     * $().on(eventName, false);\n     *\n     * @param eventName\n     * @param selector\n     * @param data\n     * @param callback\n     * @param one 是否是 one 方法，只在 JQ 内部使用\n     * @returns\n     */\n    on: function on(eventName, selector, data, callback, one) {\n      var self = this;\n\n      // 默认\n      // $().on(event, selector, data, callback)\n\n      // event 使用 事件:函数 键值对\n      // event = {\n      //   'event1': callback1,\n      //   'event2': callback2\n      // }\n      //\n      // $().on(event, selector, data)\n      if (eventName && !isString(eventName)) {\n        each(eventName, function (type, fn) {\n          self.on(type, selector, data, fn);\n        });\n\n        return self;\n      }\n\n      // selector 不存在\n      // $().on(event, data, callback)\n      if (!isString(selector) && !isFunction(callback) && callback !== false) {\n        callback = data;\n        data = selector;\n        selector = undefined;\n      }\n\n      // data 不存在\n      // $().on(event, callback)\n      if (isFunction(data) || data === false) {\n        callback = data;\n        data = undefined;\n      }\n\n      // callback 为 false\n      // $().on(event, false)\n      if (callback === false) {\n        callback = fnFalse;\n      }\n\n      if (one === 1) {\n        var origCallback = callback;\n        callback = function () {\n          self.off(eventName, selector, callback);\n          /* eslint prefer-rest-params: 0 */\n          return origCallback.apply(this, arguments);\n        };\n      }\n\n      return this.each(function () {\n        add(this, eventName, callback, data, selector);\n      });\n    },\n\n    /**\n     * 绑定事件，只触发一次\n     * @param eventName\n     * @param selector\n     * @param data\n     * @param callback\n     */\n    one: function one(eventName, selector, data, callback) {\n      var self = this;\n\n      if (!isString(eventName)) {\n        each(eventName, function (type, fn) {\n          type.split(' ').forEach(function (eName) {\n            self.on(eName, selector, data, fn, 1);\n          });\n        });\n      } else {\n        eventName.split(' ').forEach(function (eName) {\n          self.on(eName, selector, data, callback, 1);\n        });\n      }\n\n      return this;\n    },\n\n    /**\n     * 取消绑定事件\n     *\n     * $().off(eventName, selector);\n     * $().off(eventName, callback);\n     * $().off(eventName, false);\n     *\n     */\n    off: function off(eventName, selector, callback) {\n      var self = this;\n\n      // event 使用 事件:函数 键值对\n      // event = {\n      //   'event1': callback1,\n      //   'event2': callback2\n      // }\n      //\n      // $().off(event, selector)\n      if (eventName && !isString(eventName)) {\n        each(eventName, function (type, fn) {\n          self.off(type, selector, fn);\n        });\n\n        return self;\n      }\n\n      // selector 不存在\n      // $().off(event, callback)\n      if (!isString(selector) && !isFunction(callback) && callback !== false) {\n        callback = selector;\n        selector = undefined;\n      }\n\n      // callback 为 false\n      // $().off(event, false)\n      if (callback === false) {\n        callback = fnFalse;\n      }\n\n      return self.each(function () {\n        remove(this, eventName, callback, selector);\n      });\n    },\n\n    /**\n     * 触发一个事件\n     * @param eventName\n     * @param data\n     * @returns {*|JQ}\n     */\n    trigger: function trigger(eventName, data) {\n      var isMouseEvent = ['click', 'mousedown', 'mouseup', 'mousemove'].indexOf(eventName) > -1;\n      var evt;\n\n      if (isMouseEvent) {\n        // Note: MouseEvent 无法传入 detail 参数\n        evt = new MouseEvent(eventName, {\n          bubbles: true,\n          cancelable: true,\n        });\n      } else {\n        evt = new CustomEvent(eventName, {\n          detail: data,\n          bubbles: true,\n          cancelable: true,\n        });\n      }\n\n      evt._detail = data;\n\n      return this.each(function () {\n        this.dispatchEvent(evt);\n      });\n    },\n  });\n\n  var globalOptions = {};\n  var jsonpID = 0;\n\n// 全局事件名\n  var ajaxEvent = {\n    ajaxStart: 'start.mdui.ajax',\n    ajaxSuccess: 'success.mdui.ajax',\n    ajaxError: 'error.mdui.ajax',\n    ajaxComplete: 'complete.mdui.ajax',\n  };\n\n  /**\n   * 判断此请求方法是否通过查询字符串提交参数\n   * @param method 请求方法，大写\n   * @returns {boolean}\n   */\n  function isQueryStringData(method) {\n    return ['GET', 'HEAD'].indexOf(method) >= 0;\n  }\n\n  /**\n   * 添加参数到 URL 上，且 URL 中不存在 ? 时，自动把第一个 & 替换为 ?\n   * @param url\n   * @param query 参数 key=value\n   * @returns {string}\n   */\n  function appendQuery(url, query) {\n    return ((url + \"&\" + query)).replace(/[&?]{1,2}/, '?');\n  }\n\n  $$1.extend({\n\n    /**\n     * 为 ajax 请求设置全局配置参数\n     * @param options\n     */\n    ajaxSetup: function ajaxSetup(options) {\n      $$1.extend(globalOptions, options || {});\n    },\n\n    /**\n     * 发送 ajax 请求\n     * @param options\n     */\n    ajax: function ajax(options) {\n      // 配置参数\n      var defaults = {\n        // 请求方式\n        method: 'GET',\n        // 请求的数据，查询字符串或对象\n        data: false,\n        // 是否把数据转换为查询字符串发送，为 false 时不进行自动转换。\n        processData: true,\n        // 是否为异步请求\n        async: true,\n        // 是否从缓存中读取，只对 GET/HEAD 请求有效，dataType 为 jsonp 时为 false\n        cache: true,\n        // HTTP 访问认证的用户名\n        username: '',\n        // HTTP 访问认证的密码\n        password: '',\n        // 一个键值对，随着请求一起发送\n        headers: {},\n        // 设置 XHR 对象\n        xhrFields: {},\n        // 一个 HTTP 代码和函数的对象\n        statusCode: {},\n        // 预期服务器返回的数据类型 text、json、jsonp\n        dataType: 'text',\n        // jsonp 请求的回调函数名称\n        jsonp: 'callback',\n        // （string 或 Function）使用指定的回调函数名代替自动生成的回调函数名\n        jsonpCallback: function () {\n          jsonpID += 1;\n\n          return (\"mduijsonp_\" + (Date.now()) + \"_\" + jsonpID);\n        },\n        // 发送信息至服务器时内容编码类型\n        contentType: 'application/x-www-form-urlencoded',\n        // 设置请求超时时间（毫秒）\n        timeout: 0,\n        // 是否在 document 上触发全局 ajax 事件\n        global: true,\n        // beforeSend:    function (XMLHttpRequest) 请求发送前执行，返回 false 可取消本次 ajax 请求\n        // success:       function (data, textStatus, XMLHttpRequest) 请求成功时调用\n        // error:         function (XMLHttpRequest, textStatus) 请求失败时调用\n        // statusCode:    {404: function ()}\n        //                200-299之间的状态码表示成功，参数和 success 回调一样；其他状态码表示失败，参数和 error 回调一样\n        // complete:      function (XMLHttpRequest, textStatus) 请求完成后回调函数 (请求成功或失败之后均调用)\n      };\n\n      // 回调函数\n      var callbacks = [\n        'beforeSend',\n        'success',\n        'error',\n        'statusCode',\n        'complete' ];\n\n      // 是否已取消请求\n      var isCanceled = false;\n\n      // 保存全局配置\n      var globals = globalOptions;\n\n      // 事件参数\n      var eventParams = {};\n\n      // 合并全局参数到默认参数，全局回调函数不覆盖\n      each(globals, function (key, value) {\n        if (callbacks.indexOf(key) < 0) {\n          defaults[key] = value;\n        }\n      });\n\n      // 参数合并\n      options = $$1.extend({}, defaults, options);\n\n      /**\n       * 触发全局事件\n       * @param event string 事件名\n       * @param xhr XMLHttpRequest 事件参数\n       */\n      function triggerEvent(event, xhr) {\n        if (options.global) {\n          $$1(document).trigger(event, xhr);\n        }\n      }\n\n      /**\n       * 触发 XHR 回调和事件\n       * @param callback string 回调函数名称\n       * @param args\n       */\n      function triggerCallback(callback) {\n        var args = [], len = arguments.length - 1;\n        while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n        var result1;\n        var result2;\n\n        if (callback) {\n          // 全局回调\n          if (callback in globals) {\n            result1 = globals[callback].apply(globals, args);\n          }\n\n          // 自定义回调\n          if (options[callback]) {\n            result2 = options[callback].apply(options, args);\n          }\n\n          // beforeSend 回调返回 false 时取消 ajax 请求\n          if (callback === 'beforeSend' && (result1 === false || result2 === false)) {\n            isCanceled = true;\n          }\n        }\n      }\n\n      // 请求方式转为大写\n      var method = options.method.toUpperCase();\n\n      // 默认使用当前页面 URL\n      if (!options.url) {\n        options.url = window.location.toString();\n      }\n\n      // 需要发送的数据\n      // GET/HEAD 请求和 processData 为 true 时，转换为查询字符串格式，特殊格式不转换\n      var sendData;\n      if (\n        (isQueryStringData(method) || options.processData)\n        && options.data\n        && [ArrayBuffer, Blob, Document, FormData].indexOf(options.data.constructor) < 0\n      ) {\n        sendData = isString(options.data) ? options.data : $$1.param(options.data);\n      } else {\n        sendData = options.data;\n      }\n\n      // 对于 GET、HEAD 类型的请求，把 data 数据添加到 URL 中\n      if (isQueryStringData(method) && sendData) {\n        // 查询字符串拼接到 URL 中\n        options.url = appendQuery(options.url, sendData);\n        sendData = null;\n      }\n\n      // JSONP\n      if (options.dataType === 'jsonp') {\n        // URL 中添加自动生成的回调函数名\n        var callbackName = isFunction(options.jsonpCallback)\n          ? options.jsonpCallback()\n          : options.jsonpCallback;\n        var requestUrl = appendQuery(options.url, ((options.jsonp) + \"=\" + callbackName));\n\n        eventParams.options = options;\n\n        triggerEvent(ajaxEvent.ajaxStart, eventParams);\n        triggerCallback('beforeSend', null);\n\n        if (isCanceled) {\n          return undefined;\n        }\n\n        var abortTimeout;\n\n        // 创建 script\n        var script = document.createElement('script');\n        script.type = 'text/javascript';\n\n        // 创建 script 失败\n        script.onerror = function () {\n          if (abortTimeout) {\n            clearTimeout(abortTimeout);\n          }\n\n          triggerEvent(ajaxEvent.ajaxError, eventParams);\n          triggerCallback('error', null, 'scripterror');\n\n          triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n          triggerCallback('complete', null, 'scripterror');\n        };\n\n        script.src = requestUrl;\n\n        // 处理\n        window[callbackName] = function (data) {\n          if (abortTimeout) {\n            clearTimeout(abortTimeout);\n          }\n\n          eventParams.data = data;\n\n          triggerEvent(ajaxEvent.ajaxSuccess, eventParams);\n          triggerCallback('success', data, 'success', null);\n\n          $$1(script).remove();\n          script = null;\n          delete window[callbackName];\n        };\n\n        $$1('head').append(script);\n\n        if (options.timeout > 0) {\n          abortTimeout = setTimeout(function () {\n            $$1(script).remove();\n            script = null;\n\n            triggerEvent(ajaxEvent.ajaxError, eventParams);\n            triggerCallback('error', null, 'timeout');\n          }, options.timeout);\n        }\n\n        return undefined;\n      }\n\n      // GET/HEAD 请求的缓存处理\n      if (isQueryStringData(method) && !options.cache) {\n        options.url = appendQuery(options.url, (\"_=\" + (Date.now())));\n      }\n\n      // 创建 XHR\n      var xhr = new XMLHttpRequest();\n\n      xhr.open(method, options.url, options.async, options.username, options.password);\n\n      if (\n        options.contentType\n        || (\n          sendData\n          && !isQueryStringData(method)\n          && options.contentType !== false\n        )\n      ) {\n        xhr.setRequestHeader('Content-Type', options.contentType);\n      }\n\n      // 设置 Accept\n      if (options.dataType === 'json') {\n        xhr.setRequestHeader('Accept', 'application/json, text/javascript');\n      }\n\n      // 添加 headers\n      if (options.headers) {\n        each(options.headers, function (key, value) {\n          xhr.setRequestHeader(key, value);\n        });\n      }\n\n      // 检查是否是跨域请求\n      if (options.crossDomain === undefined) {\n        options.crossDomain = /^([\\w-]+:)?\\/\\/([^/]+)/.test(options.url)\n          && RegExp.$2 !== window.location.host;\n      }\n\n      if (!options.crossDomain) {\n        xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n      }\n\n      if (options.xhrFields) {\n        each(options.xhrFields, function (key, value) {\n          xhr[key] = value;\n        });\n      }\n\n      eventParams.xhr = xhr;\n      eventParams.options = options;\n\n      var xhrTimeout;\n\n      xhr.onload = function () {\n        if (xhrTimeout) {\n          clearTimeout(xhrTimeout);\n        }\n\n        // 包含成功或错误代码的字符串\n        var textStatus;\n\n        // AJAX 返回的 HTTP 响应码是否表示成功\n        var isHttpStatusSuccess = (xhr.status >= 200 && xhr.status < 300) || xhr.status === 0;\n\n        var responseData;\n\n        if (isHttpStatusSuccess) {\n          if (xhr.status === 204 || method === 'HEAD') {\n            textStatus = 'nocontent';\n          } else if (xhr.status === 304) {\n            textStatus = 'notmodified';\n          } else {\n            textStatus = 'success';\n          }\n\n          if (options.dataType === 'json') {\n            try {\n              responseData = JSON.parse(xhr.responseText);\n              eventParams.data = responseData;\n            } catch (err) {\n              textStatus = 'parsererror';\n\n              triggerEvent(ajaxEvent.ajaxError, eventParams);\n              triggerCallback('error', xhr, textStatus);\n            }\n\n            if (textStatus !== 'parsererror') {\n              triggerEvent(ajaxEvent.ajaxSuccess, eventParams);\n              triggerCallback('success', responseData, textStatus, xhr);\n            }\n          } else {\n            responseData = xhr.responseType === 'text' || xhr.responseType === ''\n              ? xhr.responseText\n              : xhr.response;\n            eventParams.data = responseData;\n\n            triggerEvent(ajaxEvent.ajaxSuccess, eventParams);\n            triggerCallback('success', responseData, textStatus, xhr);\n          }\n        } else {\n          textStatus = 'error';\n\n          triggerEvent(ajaxEvent.ajaxError, eventParams);\n          triggerCallback('error', xhr, textStatus);\n        }\n\n        // statusCode\n        each([globals.statusCode, options.statusCode], function (i, func) {\n          if (func && func[xhr.status]) {\n            if (isHttpStatusSuccess) {\n              func[xhr.status](responseData, textStatus, xhr);\n            } else {\n              func[xhr.status](xhr, textStatus);\n            }\n          }\n        });\n\n        triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n        triggerCallback('complete', xhr, textStatus);\n      };\n\n      xhr.onerror = function () {\n        if (xhrTimeout) {\n          clearTimeout(xhrTimeout);\n        }\n\n        triggerEvent(ajaxEvent.ajaxError, eventParams);\n        triggerCallback('error', xhr, xhr.statusText);\n\n        triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n        triggerCallback('complete', xhr, 'error');\n      };\n\n      xhr.onabort = function () {\n        var textStatus = 'abort';\n\n        if (xhrTimeout) {\n          textStatus = 'timeout';\n          clearTimeout(xhrTimeout);\n        }\n\n        triggerEvent(ajaxEvent.ajaxError, eventParams);\n        triggerCallback('error', xhr, textStatus);\n\n        triggerEvent(ajaxEvent.ajaxComplete, eventParams);\n        triggerCallback('complete', xhr, textStatus);\n      };\n\n      // ajax start 回调\n      triggerEvent(ajaxEvent.ajaxStart, eventParams);\n      triggerCallback('beforeSend', xhr);\n\n      if (isCanceled) {\n        return xhr;\n      }\n\n      // Timeout\n      if (options.timeout > 0) {\n        xhrTimeout = setTimeout(function () {\n          xhr.abort();\n        }, options.timeout);\n      }\n\n      // 发送 XHR\n      xhr.send(sendData);\n\n      return xhr;\n    },\n  });\n\n// 监听全局事件\n//\n// 通过 $(document).on('success.mdui.ajax', function (event, params) {}) 调用时，包含两个参数\n// event: 事件对象\n// params: {\n//   xhr: XMLHttpRequest 对象\n//   options: ajax 请求的配置参数\n//   data: ajax 请求返回的数据\n// }\n\n// 全局 Ajax 事件快捷方法\n// $(document).ajaxStart(function (event, xhr, options) {})\n// $(document).ajaxSuccess(function (event, xhr, options, data) {})\n// $(document).ajaxError(function (event, xhr, options) {})\n// $(document).ajaxComplete(function (event, xhr, options) {})\n  each(ajaxEvent, function (name, eventName) {\n    $$1.fn[name] = function (fn) {\n      return this.on(eventName, function (e, params) {\n        fn(e, params.xhr, params.options, params.data);\n      });\n    };\n  });\n\n  return $$1;\n\n}());\n","/**\n * =============================================================================\n * ************   定义全局变量   ************\n * =============================================================================\n */\n\nvar $document = $(document);\nvar $window = $(window);\n\n/**\n * 队列 -- 当前队列的 api 和 jquery 不一样，所以不打包进 mdui.JQ 里\n */\nvar queue = {};\n(function () {\n  var queueData = [];\n\n  /**\n   * 写入队列\n   * @param queueName 对列名\n   * @param func 函数名，该参数为空时，返回所有队列\n   */\n  queue.queue = function (queueName, func) {\n    if (queueData[queueName] === undefined) {\n      queueData[queueName] = [];\n    }\n\n    if (func === undefined) {\n      return queueData[queueName];\n    }\n\n    queueData[queueName].push(func);\n  };\n\n  /**\n   * 从队列中移除第一个函数，并执行该函数\n   * @param queueName\n   */\n  queue.dequeue = function (queueName) {\n    if (queueData[queueName] !== undefined && queueData[queueName].length) {\n      (queueData[queueName].shift())();\n    }\n  };\n\n})();\n\n/**\n * touch 事件后的 500ms 内禁用 mousedown 事件\n *\n * 不支持触控的屏幕上事件顺序为 mousedown -> mouseup -> click\n * 支持触控的屏幕上事件顺序为 touchstart -> touchend -> mousedown -> mouseup -> click\n */\nvar TouchHandler = {\n  touches: 0,\n\n  /**\n   * 该事件是否被允许\n   * 在执行事件前调用该方法判断事件是否可以执行\n   * @param e\n   * @returns {boolean}\n   */\n  isAllow: function (e) {\n    var allow = true;\n\n    if (\n      TouchHandler.touches &&\n      [\n        'mousedown',\n        'mouseup',\n        'mousemove',\n        'click',\n        'mouseover',\n        'mouseout',\n        'mouseenter',\n        'mouseleave',\n      ].indexOf(e.type) > -1\n    ) {\n      // 触发了 touch 事件后阻止鼠标事件\n      allow = false;\n    }\n\n    return allow;\n  },\n\n  /**\n   * 在 touchstart 和 touchmove、touchend、touchcancel 事件中调用该方法注册事件\n   * @param e\n   */\n  register: function (e) {\n    if (e.type === 'touchstart') {\n      // 触发了 touch 事件\n      TouchHandler.touches += 1;\n    } else if (['touchmove', 'touchend', 'touchcancel'].indexOf(e.type) > -1) {\n      // touch 事件结束 500ms 后解除对鼠标事件的阻止\n      setTimeout(function () {\n        if (TouchHandler.touches) {\n          TouchHandler.touches -= 1;\n        }\n      }, 500);\n    }\n  },\n\n  start: 'touchstart mousedown',\n  move: 'touchmove mousemove',\n  end: 'touchend mouseup',\n  cancel: 'touchcancel mouseleave',\n  unlock: 'touchend touchmove touchcancel',\n};\n\n// 测试事件\n// 在每一个事件中都使用 TouchHandler.isAllow(e) 判断事件是否可执行\n// 在 touchstart 和 touchmove、touchend、touchcancel\n// (function () {\n//\n//   $document\n//     .on(TouchHandler.start, function (e) {\n//       if (!TouchHandler.isAllow(e)) {\n//         return;\n//       }\n//       TouchHandler.register(e);\n//       console.log(e.type);\n//     })\n//     .on(TouchHandler.move, function (e) {\n//       if (!TouchHandler.isAllow(e)) {\n//         return;\n//       }\n//       console.log(e.type);\n//     })\n//     .on(TouchHandler.end, function (e) {\n//       if (!TouchHandler.isAllow(e)) {\n//         return;\n//       }\n//       console.log(e.type);\n//     })\n//     .on(TouchHandler.unlock, TouchHandler.register);\n// })();\n\n$(function () {\n  // 避免页面加载完后直接执行css动画\n  // https://css-tricks.com/transitions-only-after-page-load/\n\n  setTimeout(function () {\n    $('body').addClass('mdui-loaded');\n  }, 0);\n});\n","/**\n * =============================================================================\n * ************   MDUI 内部使用的函数   ************\n * =============================================================================\n */\n\n/**\n * 解析 DATA API 的参数\n * @param str\n * @returns {*}\n */\nvar parseOptions = function (str) {\n  var options = {};\n\n  if (str === null || !str) {\n    return options;\n  }\n\n  if (typeof str === 'object') {\n    return str;\n  }\n\n  /* jshint ignore:start */\n  var start = str.indexOf('{');\n  try {\n    options = (new Function('',\n      'var json = ' + str.substr(start) +\n      '; return JSON.parse(JSON.stringify(json));'))();\n  } catch (e) {\n  }\n  /* jshint ignore:end */\n\n  return options;\n};\n\n/**\n * 绑定组件的事件\n * @param eventName 事件名\n * @param pluginName 插件名\n * @param inst 插件实例\n * @param trigger 在该元素上触发\n * @param obj 事件参数\n */\nvar componentEvent = function (eventName, pluginName, inst, trigger, obj) {\n  if (!obj) {\n    obj = {};\n  }\n\n  obj.inst = inst;\n\n  var fullEventName = eventName + '.mdui.' + pluginName;\n\n  // jQuery 事件\n  if (typeof jQuery !== 'undefined') {\n    jQuery(trigger).trigger(fullEventName, obj);\n  }\n\n  // JQ 事件\n  $(trigger).trigger(fullEventName, obj);\n};\n","/**\n * =============================================================================\n * ************   开放的常用方法   ************\n * =============================================================================\n */\n\n$.fn.extend({\n\n  /**\n   * 执行强制重绘\n   */\n  reflow: function () {\n    return this.each(function () {\n      return this.clientLeft;\n    });\n  },\n\n  /**\n   * 设置 transition 时间\n   * @param duration\n   */\n  transition: function (duration) {\n    if (typeof duration !== 'string') {\n      duration = duration + 'ms';\n    }\n\n    return this.each(function () {\n      this.style.webkitTransitionDuration = duration;\n      this.style.transitionDuration = duration;\n    });\n  },\n\n  /**\n   * transition 动画结束回调\n   * @param callback\n   * @returns {transitionEnd}\n   */\n  transitionEnd: function (callback) {\n    var events = [\n        'webkitTransitionEnd',\n        'transitionend',\n      ];\n    var i;\n    var _this = this;\n\n    function fireCallBack(e) {\n      if (e.target !== this) {\n        return;\n      }\n\n      callback.call(this, e);\n\n      for (i = 0; i < events.length; i++) {\n        _this.off(events[i], fireCallBack);\n      }\n    }\n\n    if (callback) {\n      for (i = 0; i < events.length; i++) {\n        _this.on(events[i], fireCallBack);\n      }\n    }\n\n    return this;\n  },\n\n  /**\n   * 设置 transform-origin 属性\n   * @param transformOrigin\n   */\n  transformOrigin: function (transformOrigin) {\n    return this.each(function () {\n      this.style.webkitTransformOrigin = transformOrigin;\n      this.style.transformOrigin = transformOrigin;\n    });\n  },\n\n  /**\n   * 设置 transform 属性\n   * @param transform\n   */\n  transform: function (transform) {\n    return this.each(function () {\n      this.style.webkitTransform = transform;\n      this.style.transform = transform;\n    });\n  },\n\n});\n\n$.extend({\n  /**\n   * 创建并显示遮罩\n   * @param zIndex 遮罩层的 z-index\n   */\n  showOverlay: function (zIndex) {\n    var $overlay = $('.mdui-overlay');\n\n    if ($overlay.length) {\n      $overlay.data('isDeleted', 0);\n\n      if (zIndex !== undefined) {\n        $overlay.css('z-index', zIndex);\n      }\n    } else {\n      if (zIndex === undefined) {\n        zIndex = 2000;\n      }\n\n      $overlay = $('<div class=\"mdui-overlay\">')\n        .appendTo(document.body)\n        .reflow()\n        .css('z-index', zIndex);\n    }\n\n    var level = $overlay.data('overlay-level') || 0;\n    return $overlay\n      .data('overlay-level', ++level)\n      .addClass('mdui-overlay-show');\n  },\n\n  /**\n   * 隐藏遮罩层\n   * @param force 是否强制隐藏遮罩\n   */\n  hideOverlay: function (force) {\n    var $overlay = $('.mdui-overlay');\n\n    if (!$overlay.length) {\n      return;\n    }\n\n    var level = force ? 1 : $overlay.data('overlay-level');\n    if (level > 1) {\n      $overlay.data('overlay-level', --level);\n      return;\n    }\n\n    $overlay\n      .data('overlay-level', 0)\n      .removeClass('mdui-overlay-show')\n      .data('isDeleted', 1)\n      .transitionEnd(function () {\n        if ($overlay.data('isDeleted')) {\n          $overlay.remove();\n        }\n      });\n  },\n\n  /**\n   * 锁定屏幕\n   */\n  lockScreen: function () {\n    var $body = $('body');\n\n    // 不直接把 body 设为 box-sizing: border-box，避免污染全局样式\n    var newBodyWidth = $body.width();\n\n    $body\n      .addClass('mdui-locked')\n      .width(newBodyWidth);\n\n    var level = $body.data('lockscreen-level') || 0;\n    $body.data('lockscreen-level', ++level);\n  },\n\n  /**\n   * 解除屏幕锁定\n   * @param force 是否强制解锁屏幕\n   */\n  unlockScreen: function (force) {\n    var $body = $('body');\n\n    var level = force ? 1 : $body.data('lockscreen-level');\n    if (level > 1) {\n      $body.data('lockscreen-level', --level);\n      return;\n    }\n\n    $body\n      .data('lockscreen-level', 0)\n      .removeClass('mdui-locked')\n      .width('');\n  },\n\n  /**\n   * 函数节流\n   * @param fn\n   * @param delay\n   * @returns {Function}\n   */\n  throttle: function (fn, delay) {\n    var timer = null;\n    if (!delay || delay < 16) {\n      delay = 16;\n    }\n\n    return function () {\n      var _this = this;\n      var args = arguments;\n\n      if (timer === null) {\n        timer = setTimeout(function () {\n          fn.apply(_this, args);\n          timer = null;\n        }, delay);\n      }\n    };\n  },\n});\n\n/**\n * 生成唯一 id\n * @param string name id的名称，若该名称对于的guid不存在，则生成新的guid并返回；若已存在，则返回原有guid\n * @returns {string}\n */\n(function () {\n  var GUID = {};\n\n  $.extend({\n    guid: function (name) {\n      if (typeof name !== 'undefined' && typeof GUID[name] !== 'undefined') {\n        return GUID[name];\n      }\n\n      function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000)\n          .toString(16)\n          .substring(1);\n      }\n\n      var guid = s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n\n      if (typeof name !== 'undefined') {\n        GUID[name] = guid;\n      }\n\n      return guid;\n    },\n  });\n})();\n","/**\n * =============================================================================\n * ************   Mutation   ************\n * =============================================================================\n */\n\n(function () {\n  /**\n   * API 初始化代理, 当 DOM 突变再次执行代理的初始化函数. 使用方法:\n   *\n   * 1. 代理组件 API 执行初始化函数, selector 必须为字符串.\n   *    mdui.mutation(selector, apiInit);\n   *    mutation 会执行 $(selector).each(apiInit)\n   *\n   * 2. 突变时, 再次执行代理的初始化函数\n   *    mdui.mutation()        等价 $(document).mutation()\n   *    $(selector).mutation() 在 selector 节点内进行 API 初始化\n   *\n   * 原理:\n   *\n   *    mutation 执行了 $().data('mdui.mutation', [selector]).\n   *    当元素被重构时, 该数据会丢失, 由此判断是否突变.\n   *\n   * 提示:\n   *\n   *    类似 Drawer 可以使用委托事件完成.\n   *    类似 Collapse 需要知道 DOM 发生突变, 并再次进行初始化.\n   */\n  var entries = { };\n\n  function mutation(selector, apiInit, that, i, item) {\n    var $this = $(that);\n    var m = $this.data('mdui.mutation');\n\n    if (!m) {\n      m = [];\n      $this.data('mdui.mutation', m);\n    }\n\n    if (m.indexOf(selector) === -1) {\n      m.push(selector);\n      apiInit.call(that, i, item);\n    }\n  }\n\n  $.fn.extend({\n    mutation: function () {\n      return this.each(function (i, item) {\n        var $this = $(this);\n        $.each(entries, function (selector, apiInit) {\n          if ($this.is(selector)) {\n            mutation(selector, apiInit, $this[0], i, item);\n          }\n\n          $this.find(selector).each(function (i, item) {\n            mutation(selector, apiInit, this, i, item);\n          });\n        });\n      });\n    },\n  });\n\n  mdui.mutation = function (selector, apiInit) {\n    if (typeof selector !== 'string' || typeof apiInit !== 'function') {\n      $(document).mutation();\n      return;\n    }\n\n    entries[selector] = apiInit;\n    $(selector).each(function (i, item) {\n      mutation(selector, apiInit, this, i, item);\n    });\n  };\n\n})();\n","/**\n * =============================================================================\n * ************   Headroom.js   ************\n * =============================================================================\n */\n\nmdui.Headroom = (function () {\n\n  /**\n   * 默认参数\n   * @type {{}}\n   */\n  var DEFAULT = {\n    tolerance: 5,                                 // 滚动条滚动多少距离开始隐藏或显示元素，{down: num, up: num}，或数字\n    offset: 0,                                    // 在页面顶部多少距离内滚动不会隐藏元素\n    initialClass: 'mdui-headroom',                // 初始化时添加的类\n    pinnedClass: 'mdui-headroom-pinned-top',      // 元素固定时添加的类\n    unpinnedClass: 'mdui-headroom-unpinned-top',  // 元素隐藏时添加的类\n  };\n\n  /**\n   * Headroom\n   * @param selector\n   * @param opts\n   * @constructor\n   */\n  function Headroom(selector, opts) {\n    var _this = this;\n\n    _this.$headroom = $(selector).eq(0);\n    if (!_this.$headroom.length) {\n      return;\n    }\n\n    // 已通过自定义属性实例化过，不再重复实例化\n    var oldInst = _this.$headroom.data('mdui.headroom');\n    if (oldInst) {\n      return oldInst;\n    }\n\n    _this.options = $.extend({}, DEFAULT, (opts || {}));\n\n    // 数值转为 {down: bum, up: num}\n    var tolerance = _this.options.tolerance;\n    if (tolerance !== Object(tolerance)) {\n      _this.options.tolerance = {\n        down: tolerance,\n        up: tolerance,\n      };\n    }\n\n    _this._init();\n  }\n\n  /**\n   * 初始化\n   * @private\n   */\n  Headroom.prototype._init = function () {\n    var _this = this;\n\n    _this.state = 'pinned';\n    _this.$headroom\n      .addClass(_this.options.initialClass)\n      .removeClass(_this.options.pinnedClass + ' ' + _this.options.unpinnedClass);\n\n    _this.inited = false;\n    _this.lastScrollY = 0;\n\n    _this._attachEvent();\n  };\n\n  /**\n   * 监听滚动事件\n   * @private\n   */\n  Headroom.prototype._attachEvent = function () {\n    var _this = this;\n\n    if (!_this.inited) {\n      _this.lastScrollY = window.pageYOffset;\n      _this.inited = true;\n\n      $window.on('scroll', function () {\n        _this._scroll();\n      });\n    }\n  };\n\n  /**\n   * 滚动时的处理\n   * @private\n   */\n  Headroom.prototype._scroll = function () {\n    var _this = this;\n    _this.rafId = window.requestAnimationFrame(function () {\n      var currentScrollY = window.pageYOffset;\n      var direction = currentScrollY > _this.lastScrollY ? 'down' : 'up';\n      var toleranceExceeded =\n        Math.abs(currentScrollY - _this.lastScrollY) >=\n        _this.options.tolerance[direction];\n\n      if (\n        currentScrollY > _this.lastScrollY &&\n        currentScrollY >= _this.options.offset &&\n        toleranceExceeded) {\n        _this.unpin();\n      } else if (\n        (currentScrollY < _this.lastScrollY && toleranceExceeded) ||\n        currentScrollY <= _this.options.offset\n      ) {\n        _this.pin();\n      }\n\n      _this.lastScrollY = currentScrollY;\n    });\n  };\n\n  /**\n   * 动画结束回调\n   * @param inst\n   */\n  var transitionEnd = function (inst) {\n    if (inst.state === 'pinning') {\n      inst.state = 'pinned';\n      componentEvent('pinned', 'headroom', inst, inst.$headroom);\n    }\n\n    if (inst.state === 'unpinning') {\n      inst.state = 'unpinned';\n      componentEvent('unpinned', 'headroom', inst, inst.$headroom);\n    }\n  };\n\n  /**\n   * 固定住\n   */\n  Headroom.prototype.pin = function () {\n    var _this = this;\n\n    if (\n      _this.state === 'pinning' ||\n      _this.state === 'pinned' ||\n      !_this.$headroom.hasClass(_this.options.initialClass)\n    ) {\n      return;\n    }\n\n    componentEvent('pin', 'headroom', _this, _this.$headroom);\n\n    _this.state = 'pinning';\n\n    _this.$headroom\n      .removeClass(_this.options.unpinnedClass)\n      .addClass(_this.options.pinnedClass)\n      .transitionEnd(function () {\n        transitionEnd(_this);\n      });\n  };\n\n  /**\n   * 不固定住\n   */\n  Headroom.prototype.unpin = function () {\n    var _this = this;\n\n    if (\n      _this.state === 'unpinning' ||\n      _this.state === 'unpinned' ||\n      !_this.$headroom.hasClass(_this.options.initialClass)\n    ) {\n      return;\n    }\n\n    componentEvent('unpin', 'headroom', _this, _this.$headroom);\n\n    _this.state = 'unpinning';\n\n    _this.$headroom\n      .removeClass(_this.options.pinnedClass)\n      .addClass(_this.options.unpinnedClass)\n      .transitionEnd(function () {\n        transitionEnd(_this);\n      });\n  };\n\n  /**\n   * 启用\n   */\n  Headroom.prototype.enable = function () {\n    var _this = this;\n\n    if (!_this.inited) {\n      _this._init();\n    }\n  };\n\n  /**\n   * 禁用\n   */\n  Headroom.prototype.disable = function () {\n    var _this = this;\n\n    if (_this.inited) {\n      _this.inited = false;\n      _this.$headroom\n        .removeClass([\n          _this.options.initialClass,\n          _this.options.pinnedClass,\n          _this.options.unpinnedClass,\n        ].join(' '));\n\n      $window.off('scroll', function () {\n        _this._scroll();\n      });\n\n      window.cancelAnimationFrame(_this.rafId);\n    }\n  };\n\n  /**\n   * 获取当前状态 pinning | pinned | unpinning | unpinned\n   */\n  Headroom.prototype.getState = function () {\n    return this.state;\n  };\n\n  return Headroom;\n\n})();\n","/**\n * =============================================================================\n * ************   Headroom 自定义属性 API   ************\n * =============================================================================\n */\n\n$(function () {\n  mdui.mutation('[mdui-headroom]', function () {\n    var $this = $(this);\n    var options = parseOptions($this.attr('mdui-headroom'));\n\n    var inst = $this.data('mdui.headroom');\n    if (!inst) {\n      inst = new mdui.Headroom($this, options);\n      $this.data('mdui.headroom', inst);\n    }\n  });\n});\n","/**\n * =============================================================================\n * ************   供 Collapse、 Panel 调用的折叠内容块插件   ************\n * =============================================================================\n */\nvar CollapsePrivate = (function () {\n\n  /**\n   * 默认参数\n   */\n  var DEFAULT = {\n    accordion: false,                             // 是否使用手风琴效果\n  };\n\n  /**\n   * 折叠内容块\n   * @param selector\n   * @param opts\n   * @param namespace\n   * @constructor\n   */\n  function Collapse(selector, opts, namespace) {\n    var _this = this;\n\n    // 命名空间\n    _this.ns = namespace;\n\n    // 类名\n    var classpPefix = 'mdui-' + _this.ns + '-item';\n    _this.class_item = classpPefix;\n    _this.class_item_open = classpPefix + '-open';\n    _this.class_header = classpPefix + '-header';\n    _this.class_body = classpPefix + '-body';\n\n    // 折叠面板元素\n    _this.$collapse = $(selector).eq(0);\n    if (!_this.$collapse.length) {\n      return;\n    }\n\n    // 已通过自定义属性实例化过，不再重复实例化\n    var oldInst = _this.$collapse.data('mdui.' + _this.ns);\n    if (oldInst) {\n      return oldInst;\n    }\n\n    _this.options = $.extend({}, DEFAULT, (opts || {}));\n\n    _this.$collapse.on('click', '.' + _this.class_header, function () {\n      var $item = $(this).parent('.' + _this.class_item);\n      if (_this.$collapse.children($item).length) {\n        _this.toggle($item);\n      }\n    });\n\n    // 绑定关闭按钮\n    _this.$collapse.on('click', '[mdui-' + _this.ns + '-item-close]', function () {\n      var $item = $(this).parents('.' + _this.class_item).eq(0);\n      if (_this._isOpen($item)) {\n        _this.close($item);\n      }\n    });\n  }\n\n  /**\n   * 指定 item 是否处于打开状态\n   * @param $item\n   * @returns {boolean}\n   * @private\n   */\n  Collapse.prototype._isOpen = function ($item) {\n    return $item.hasClass(this.class_item_open);\n  };\n\n  /**\n   * 获取指定 item\n   * @param item\n   * @returns {*}\n   * @private\n   */\n  Collapse.prototype._getItem = function (item) {\n    var _this = this;\n\n    if (parseInt(item) === item) {\n      // item 是索引号\n      return _this.$collapse.children('.' + _this.class_item).eq(item);\n    }\n\n    return $(item).eq(0);\n  };\n\n  /**\n   * 动画结束回调\n   * @param inst\n   * @param $content\n   * @param $item\n   */\n  var transitionEnd = function (inst, $content, $item) {\n    if (inst._isOpen($item)) {\n      $content\n        .transition(0)\n        .height('auto')\n        .reflow()\n        .transition('');\n\n      componentEvent('opened', inst.ns, inst, $item[0]);\n    } else {\n      $content.height('');\n\n      componentEvent('closed', inst.ns, inst, $item[0]);\n    }\n  };\n\n  /**\n   * 打开指定面板项\n   * @param item 面板项的索引号或 DOM 元素或 CSS 选择器\n   */\n  Collapse.prototype.open = function (item) {\n    var _this = this;\n    var $item = _this._getItem(item);\n\n    if (_this._isOpen($item)) {\n      return;\n    }\n\n    // 关闭其他项\n    if (_this.options.accordion) {\n      _this.$collapse.children('.' + _this.class_item_open).each(function () {\n        var $tmpItem = $(this);\n\n        if ($tmpItem !== $item) {\n          _this.close($tmpItem);\n        }\n      });\n    }\n\n    var $content = $item.children('.' + _this.class_body);\n\n    $content\n      .height($content[0].scrollHeight)\n      .transitionEnd(function () {\n        transitionEnd(_this, $content, $item);\n      });\n\n    componentEvent('open', _this.ns, _this, $item[0]);\n\n    $item.addClass(_this.class_item_open);\n  };\n\n  /**\n   * 关闭指定项\n   * @param item 面板项的索引号或 DOM 元素或 CSS 选择器\n   */\n  Collapse.prototype.close = function (item) {\n    var _this = this;\n    var $item = _this._getItem(item);\n\n    if (!_this._isOpen($item)) {\n      return;\n    }\n\n    var $content = $item.children('.' + _this.class_body);\n\n    componentEvent('close', _this.ns, _this, $item[0]);\n\n    $item.removeClass(_this.class_item_open);\n\n    $content\n      .transition(0)\n      .height($content[0].scrollHeight)\n      .reflow()\n      .transition('')\n      .height('')\n      .transitionEnd(function () {\n        transitionEnd(_this, $content, $item);\n      });\n  };\n\n  /**\n   * 切换指定项的状态\n   * @param item 面板项的索引号或 DOM 元素或 CSS 选择器或 JQ 对象\n   */\n  Collapse.prototype.toggle = function (item) {\n    var _this = this;\n    var $item = _this._getItem(item);\n\n    if (_this._isOpen($item)) {\n      _this.close($item);\n    } else {\n      _this.open($item);\n    }\n  };\n\n  /**\n   * 打开所有项\n   */\n  Collapse.prototype.openAll = function () {\n    var _this = this;\n\n    _this.$collapse.children('.' + _this.class_item).each(function () {\n      var $tmpItem = $(this);\n\n      if (!_this._isOpen($tmpItem)) {\n        _this.open($tmpItem);\n      }\n    });\n  };\n\n  /**\n   * 关闭所有项\n   */\n  Collapse.prototype.closeAll = function () {\n    var _this = this;\n\n    _this.$collapse.children('.' + _this.class_item).each(function () {\n      var $tmpItem = $(this);\n\n      if (_this._isOpen($tmpItem)) {\n        _this.close($tmpItem);\n      }\n    });\n  };\n\n  return Collapse;\n})();\n\n/**\n * =============================================================================\n * ************   Collapse 折叠内容块插件   ************\n * =============================================================================\n */\nmdui.Collapse = (function () {\n\n  function Collapse(selector, opts) {\n    return new CollapsePrivate(selector, opts, 'collapse');\n  }\n\n  return Collapse;\n})();\n","/**\n * =============================================================================\n * ************   涟漪   ************\n * =============================================================================\n *\n * Inspired by https://github.com/nolimits4web/Framework7/blob/master/src/js/fast-clicks.js\n * https://github.com/nolimits4web/Framework7/blob/master/LICENSE\n *\n * Inspired by https://github.com/fians/Waves\n */\n\n(function () {\n\n  var Ripple = {\n\n    /**\n     * 延时，避免手指滑动时也触发涟漪（单位：毫秒）\n     */\n    delay: 200,\n\n    /**\n     * 显示涟漪动画\n     * @param e\n     * @param $ripple\n     */\n    show: function (e, $ripple) {\n\n      // 鼠标右键不产生涟漪\n      if (e.button === 2) {\n        return;\n      }\n\n      // 点击位置坐标\n      var tmp;\n      if ('touches' in e && e.touches.length) {\n        tmp = e.touches[0];\n      } else {\n        tmp = e;\n      }\n\n      var touchStartX = tmp.pageX;\n      var touchStartY = tmp.pageY;\n\n      // 涟漪位置\n      var offset = $ripple.offset();\n      var center = {\n        x: touchStartX - offset.left,\n        y: touchStartY - offset.top,\n      };\n\n      var height = $ripple.innerHeight();\n      var width = $ripple.innerWidth();\n      var diameter = Math.max(\n        Math.pow((Math.pow(height, 2) + Math.pow(width, 2)), 0.5), 48\n      );\n\n      // 涟漪扩散动画\n      var translate =\n        'translate3d(' + (-center.x + width / 2) + 'px, ' + (-center.y + height / 2) + 'px, 0) ' +\n        'scale(1)';\n\n      // 涟漪的 DOM 结构\n      $('<div class=\"mdui-ripple-wave\" style=\"' +\n        'width: ' + diameter + 'px; ' +\n        'height: ' + diameter + 'px; ' +\n        'margin-top:-' + diameter / 2 + 'px; ' +\n        'margin-left:-' + diameter / 2 + 'px; ' +\n        'left:' + center.x + 'px; ' +\n        'top:' + center.y + 'px;\">' +\n        '</div>')\n\n        // 缓存动画效果\n        .data('translate', translate)\n\n        .prependTo($ripple)\n        .reflow()\n        .transform(translate);\n    },\n\n    /**\n     * 隐藏涟漪动画\n     */\n    hide: function (e, element) {\n      var $ripple = $(element || this);\n\n      $ripple.children('.mdui-ripple-wave').each(function () {\n        removeRipple($(this));\n      });\n\n      $ripple.off('touchmove touchend touchcancel mousemove mouseup mouseleave', Ripple.hide);\n    },\n  };\n\n  /**\n   * 隐藏并移除涟漪\n   * @param $wave\n   */\n  function removeRipple($wave) {\n    if (!$wave.length || $wave.data('isRemoved')) {\n      return;\n    }\n\n    $wave.data('isRemoved', true);\n\n    var removeTimeout = setTimeout(function () {\n      $wave.remove();\n    }, 400);\n\n    var translate = $wave.data('translate');\n\n    $wave\n      .addClass('mdui-ripple-wave-fill')\n      .transform(translate.replace('scale(1)', 'scale(1.01)'))\n      .transitionEnd(function () {\n        clearTimeout(removeTimeout);\n\n        $wave\n          .addClass('mdui-ripple-wave-out')\n          .transform(translate.replace('scale(1)', 'scale(1.01)'));\n\n        removeTimeout = setTimeout(function () {\n          $wave.remove();\n        }, 700);\n\n        setTimeout(function () {\n          $wave.transitionEnd(function () {\n            clearTimeout(removeTimeout);\n            $wave.remove();\n          });\n        }, 0);\n      });\n  }\n\n  /**\n   * 显示涟漪，并绑定 touchend 等事件\n   * @param e\n   */\n  function showRipple(e) {\n    if (!TouchHandler.isAllow(e)) {\n      return;\n    }\n\n    TouchHandler.register(e);\n\n    // Chrome 59 点击滚动条时，会在 document 上触发事件\n    if (e.target === document) {\n      return;\n    }\n\n    var $ripple;\n    var $target = $(e.target);\n\n    // 获取含 .mdui-ripple 类的元素\n    if ($target.hasClass('mdui-ripple')) {\n      $ripple = $target;\n    } else {\n      $ripple = $target.parents('.mdui-ripple').eq(0);\n    }\n\n    if ($ripple.length) {\n\n      // 禁用状态的元素上不产生涟漪效果\n      if ($ripple[0].disabled || $ripple.attr('disabled') !== null) {\n        return;\n      }\n\n      if (e.type === 'touchstart') {\n        var hidden = false;\n\n        // toucstart 触发指定时间后开始涟漪动画\n        var timer = setTimeout(function () {\n          timer = null;\n          Ripple.show(e, $ripple);\n        }, Ripple.delay);\n\n        var hideRipple = function (hideEvent) {\n          // 如果手指没有移动，且涟漪动画还没有开始，则开始涟漪动画\n          if (timer) {\n            clearTimeout(timer);\n            timer = null;\n            Ripple.show(e, $ripple);\n          }\n\n          if (!hidden) {\n            hidden = true;\n            Ripple.hide(hideEvent, $ripple);\n          }\n        };\n\n        // 手指移动后，移除涟漪动画\n        var touchMove = function (moveEvent) {\n          if (timer) {\n            clearTimeout(timer);\n            timer = null;\n          }\n\n          hideRipple(moveEvent);\n        };\n\n        $ripple\n          .on('touchmove', touchMove)\n          .on('touchend touchcancel', hideRipple);\n\n      } else {\n        Ripple.show(e, $ripple);\n        $ripple.on('touchmove touchend touchcancel mousemove mouseup mouseleave', Ripple.hide);\n      }\n    }\n  }\n\n  // 初始化绑定的事件\n  $document\n    .on(TouchHandler.start, showRipple)\n    .on(TouchHandler.unlock, TouchHandler.register);\n})();\n","/**\n * =============================================================================\n * ************   Text Field 文本框   ************\n * =============================================================================\n */\n\n(function () {\n\n  var getProp = function (obj, prop) {\n    return (\n      typeof obj === 'object' &&\n      obj !== null &&\n      obj[prop] !== undefined &&\n      obj[prop]\n    ) ? obj[prop] : false;\n  };\n\n  /**\n   * 输入框事件\n   * @param e\n   */\n  var inputEvent = function (e) {\n    var input = e.target;\n    var $input = $(input);\n    var event = e.type;\n    var value = $input.val();\n\n    // reInit 为 true 时，需要重新初始化文本框\n    var reInit = getProp(e.detail, 'reInit');\n\n    // domLoadedEvent 为 true 时，为 DOM 加载完毕后自动触发的事件\n    var domLoadedEvent = getProp(e.detail, 'domLoadedEvent');\n\n    // 文本框类型\n    var type = $input.attr('type') || '';\n    if (['checkbox', 'button', 'submit', 'range', 'radio', 'image'].indexOf(type) >= 0) {\n      return;\n    }\n\n    var $textField = $input.parent('.mdui-textfield');\n\n    // 输入框是否聚焦\n    if (event === 'focus') {\n      $textField.addClass('mdui-textfield-focus');\n    }\n\n    if (event === 'blur') {\n      $textField.removeClass('mdui-textfield-focus');\n    }\n\n    // 输入框是否为空\n    if (event === 'blur' || event === 'input') {\n      $textField[(value && value !== '') ? 'addClass' : 'removeClass']('mdui-textfield-not-empty');\n    }\n\n    // 输入框是否禁用\n    $textField[input.disabled ? 'addClass' : 'removeClass']('mdui-textfield-disabled');\n\n    // 表单验证\n    if ((event === 'input' || event === 'blur') && !domLoadedEvent) {\n      if (input.validity) {\n        var method = input.validity.valid ? 'removeClass' : 'addClass';\n        $textField[method]('mdui-textfield-invalid-html5');\n      }\n    }\n\n    // textarea 高度自动调整\n    if (e.target.nodeName.toLowerCase() === 'textarea') {\n\n      // IE bug：textarea 的值仅为多个换行，不含其他内容时，textarea 的高度不准确\n      //         此时，在计算高度前，在值的开头加入一个空格，计算完后，移除空格\n      var inputValue = $input.val();\n      var hasExtraSpace = false;\n      if (inputValue.replace(/[\\r\\n]/g, '') === '') {\n        $input.val(' ' + inputValue);\n        hasExtraSpace = true;\n      }\n\n      // 设置 textarea 高度\n      $input.height('');\n      var height = $input.height();\n      var scrollHeight = input.scrollHeight;\n\n      if (scrollHeight > height) {\n        $input.height(scrollHeight);\n      }\n\n      // 计算完，还原 textarea 的值\n      if (hasExtraSpace) {\n        $input.val(inputValue);\n      }\n    }\n\n    // 实时字数统计\n    if (reInit) {\n      $textField\n        .find('.mdui-textfield-counter')\n        .remove();\n    }\n\n    var maxlength = $input.attr('maxlength');\n    if (maxlength) {\n      if (reInit || domLoadedEvent) {\n        $('<div class=\"mdui-textfield-counter\">' +\n            '<span class=\"mdui-textfield-counter-inputed\"></span> / ' + maxlength +\n          '</div>').appendTo($textField);\n      }\n\n      $textField.find('.mdui-textfield-counter-inputed').text(value.length.toString());\n    }\n\n    // 含 帮助文本、错误提示、字数统计 时，增加文本框底部内边距\n    if (\n      $textField.find('.mdui-textfield-helper').length ||\n      $textField.find('.mdui-textfield-error').length ||\n      maxlength\n    ) {\n      $textField.addClass('mdui-textfield-has-bottom');\n    }\n  };\n\n  // 绑定事件\n  $document.on('input focus blur', '.mdui-textfield-input', { useCapture: true }, inputEvent);\n\n  // 可展开文本框展开\n  $document.on('click', '.mdui-textfield-expandable .mdui-textfield-icon', function () {\n    $(this)\n\n      // 展开文本框\n      .parents('.mdui-textfield')\n      .addClass('mdui-textfield-expanded')\n\n      // 聚焦到输入框\n      .find('.mdui-textfield-input')[0].focus();\n  });\n\n  // 可展开文本框关闭\n  $document.on('click', '.mdui-textfield-expanded .mdui-textfield-close', function () {\n    $(this)\n\n      // 关闭文本框\n      .parents('.mdui-textfield')\n      .removeClass('mdui-textfield-expanded')\n\n      // 清空输入框\n      .find('.mdui-textfield-input')\n      .val('');\n  });\n\n  /**\n   * 通过 JS 更新了表单内容，需要重新进行表单处理\n   * @param- 如果传入了 .mdui-textfield 所在的 DOM 元素，则更新该文本框；否则，更新所有文本框\n   */\n  mdui.updateTextFields = function () {\n    $(arguments.length ? arguments[0] : '.mdui-textfield').each(function () {\n      $(this)\n        .find('.mdui-textfield-input')\n        .trigger('input', {\n          reInit: true,\n        });\n    });\n  };\n})();\n\n$(function () {\n  /**\n   * 初始化文本框\n   */\n  mdui.mutation('.mdui-textfield', function () {\n    $(this)\n      .find('.mdui-textfield-input')\n      .trigger('input', {\n        domLoadedEvent: true,\n      });\n  });\n});\n","/**\n * =============================================================================\n * ************   Slider 滑块   ************\n * =============================================================================\n */\n\n(function () {\n\n  /**\n   * 滑块的值变更后修改滑块样式\n   * @param $slider\n   */\n  var updateValueStyle = function ($slider) {\n    var data = $slider.data();\n\n    var $track = data.$track;\n    var $fill = data.$fill;\n    var $thumb = data.$thumb;\n    var $input = data.$input;\n    var min = data.min;\n    var max = data.max;\n    var isDisabled = data.disabled;\n    var isDiscrete = data.discrete;\n    var $thumbText = data.$thumbText;\n    var value = $input.val();\n    var percent = (value - min) / (max - min) * 100;\n\n    $fill.width(percent + '%');\n    $track.width((100 - percent) + '%');\n\n    if (isDisabled) {\n      $fill.css('padding-right', '6px');\n      $track.css('padding-left', '6px');\n    }\n\n    $thumb.css('left', percent + '%');\n\n    if (isDiscrete) {\n      $thumbText.text(value);\n    }\n\n    $slider[parseFloat(percent) === 0 ? 'addClass' : 'removeClass']('mdui-slider-zero');\n  };\n\n  /**\n   * 重新初始化\n   * @param $slider\n   */\n  var reInit = function ($slider) {\n    var $track = $('<div class=\"mdui-slider-track\"></div>');\n    var $fill = $('<div class=\"mdui-slider-fill\"></div>');\n    var $thumb = $('<div class=\"mdui-slider-thumb\"></div>');\n    var $input = $slider.find('input[type=\"range\"]');\n\n    // 禁用状态\n    var isDisabled = $input[0].disabled;\n    $slider[isDisabled ? 'addClass' : 'removeClass']('mdui-slider-disabled');\n\n    // 重新填充 HTML\n    $slider.find('.mdui-slider-track').remove();\n    $slider.find('.mdui-slider-fill').remove();\n    $slider.find('.mdui-slider-thumb').remove();\n    $slider.append($track).append($fill).append($thumb);\n\n    // 间续型滑块\n    var isDiscrete = $slider.hasClass('mdui-slider-discrete');\n\n    var $thumbText;\n    if (isDiscrete) {\n      $thumbText = $('<span></span>');\n      $thumb.empty().append($thumbText);\n    }\n\n    $slider.data({\n      $track: $track,\n      $fill: $fill,\n      $thumb: $thumb,\n      $input: $input,\n      min: $input.attr('min'),    // 滑块最小值\n      max: $input.attr('max'),    // 滑块最大值\n      disabled: isDisabled,       // 是否禁用状态\n      discrete: isDiscrete,       // 是否是间续型滑块\n      $thumbText: $thumbText,      // 间续型滑块的数值\n    });\n\n    // 设置默认值\n    updateValueStyle($slider);\n  };\n\n  var rangeSelector = '.mdui-slider input[type=\"range\"]';\n\n  $document\n\n    // 滑动滑块事件\n    .on('input change', rangeSelector, function () {\n      var $slider = $(this).parent();\n      updateValueStyle($slider);\n    })\n\n    // 开始触摸滑块事件\n    .on(TouchHandler.start, rangeSelector, function (e) {\n      if (!TouchHandler.isAllow(e)) {\n        return;\n      }\n\n      TouchHandler.register(e);\n\n      if (!this.disabled) {\n        var $slider = $(this).parent();\n        $slider.addClass('mdui-slider-focus');\n      }\n    })\n\n    // 结束触摸滑块事件\n    .on(TouchHandler.end, rangeSelector, function (e) {\n      if (!TouchHandler.isAllow(e)) {\n        return;\n      }\n\n      if (!this.disabled) {\n        var $slider = $(this).parent();\n        $slider.removeClass('mdui-slider-focus');\n      }\n    })\n\n    .on(TouchHandler.unlock, rangeSelector, TouchHandler.register);\n\n  /**\n   * 重新初始化滑块（强制重新初始化）\n   */\n  mdui.updateSliders = function () {\n    $(arguments.length ? arguments[0] : '.mdui-slider').each(function () {\n      reInit($(this));\n    });\n  };\n\n  $(function () {\n    /**\n     * 页面加载完后自动初始化（未初始化时，可以调用该方法初始化）\n     */\n    mdui.mutation('.mdui-slider', function () {\n      reInit($(this));\n    });\n  });\n})();\n","/**\n * =============================================================================\n * ************   Spinner 圆形进度条   ************\n * =============================================================================\n */\n\n(function () {\n  /**\n   * layer 的 HTML 结构\n   */\n  var layerHTML = function () {\n    var i = arguments.length ? arguments[0] : false;\n\n    return '<div class=\"mdui-spinner-layer ' + (i ? 'mdui-spinner-layer-' + i : '') + '\">' +\n               '<div class=\"mdui-spinner-circle-clipper mdui-spinner-left\">' +\n             '<div class=\"mdui-spinner-circle\"></div>' +\n             '</div>' +\n             '<div class=\"mdui-spinner-gap-patch\">' +\n               '<div class=\"mdui-spinner-circle\"></div>' +\n             '</div>' +\n             '<div class=\"mdui-spinner-circle-clipper mdui-spinner-right\">' +\n               '<div class=\"mdui-spinner-circle\"></div>' +\n             '</div>' +\n           '</div>';\n  };\n\n  /**\n   * 填充 HTML\n   * @param spinner\n   */\n  var fillHTML = function (spinner) {\n    var $spinner = $(spinner);\n    var layer;\n    if ($spinner.hasClass('mdui-spinner-colorful')) {\n      layer = layerHTML('1') + layerHTML('2') + layerHTML('3') + layerHTML('4');\n    } else {\n      layer = layerHTML();\n    }\n\n    $spinner.html(layer);\n  };\n\n  /**\n   * 页面加载完后自动填充 HTML 结构\n   */\n  mdui.mutation('.mdui-spinner', function () {\n    fillHTML(this);\n  });\n\n  /**\n   * 更新圆形进度条\n   */\n  mdui.updateSpinners = function () {\n    $(arguments.length ? arguments[0] : '.mdui-spinner').each(function () {\n      fillHTML(this);\n    });\n  };\n\n})();\n\n","  /* jshint ignore:start */\n  mdui.JQ = $;\n  return mdui;\n})));\n/* jshint ignore:end */\n","/**\n * =============================================================================\n * ************   Collapse 自定义属性   ************\n * =============================================================================\n */\n\n$(function () {\n  mdui.mutation('[mdui-collapse]', function () {\n    var $target = $(this);\n\n    var inst = $target.data('mdui.collapse');\n    if (!inst) {\n      var options = parseOptions($target.attr('mdui-collapse'));\n      inst = new mdui.Collapse($target, options);\n      $target.data('mdui.collapse', inst);\n    }\n  });\n});\n","/**\n * =============================================================================\n * ************   Table 表格   ************\n * =============================================================================\n */\n\n(function () {\n\n  /**\n   * 生成 checkbox 的 HTML 结构\n   * @param tag\n   * @returns {string}\n   */\n  var checkboxHTML = function (tag) {\n    return '<' + tag + ' class=\"mdui-table-cell-checkbox\">' +\n             '<label class=\"mdui-checkbox\">' +\n               '<input type=\"checkbox\"/>' +\n               '<i class=\"mdui-checkbox-icon\"></i>' +\n             '</label>' +\n           '</' + tag + '>';\n  };\n\n  /**\n   * Table 表格\n   * @param selector\n   * @constructor\n   */\n  function Table(selector) {\n    var _this = this;\n\n    _this.$table = $(selector).eq(0);\n\n    if (!_this.$table.length) {\n      return;\n    }\n\n    _this.init();\n  }\n\n  /**\n   * 初始化\n   */\n  Table.prototype.init = function () {\n    var _this = this;\n\n    _this.$thRow = _this.$table.find('thead tr');\n    _this.$tdRows = _this.$table.find('tbody tr');\n    _this.$tdCheckboxs = $();\n    _this.selectable = _this.$table.hasClass('mdui-table-selectable');\n    _this.selectedRow = 0;\n\n    _this._updateThCheckbox();\n    _this._updateTdCheckbox();\n    _this._updateNumericCol();\n  };\n\n  /**\n   * 更新表格行的 checkbox\n   */\n  Table.prototype._updateTdCheckbox = function () {\n    var _this = this;\n\n    _this.$tdRows.each(function () {\n      var $tdRow = $(this);\n\n      // 移除旧的 checkbox\n      $tdRow.find('.mdui-table-cell-checkbox').remove();\n\n      if (!_this.selectable) {\n        return;\n      }\n\n      // 创建 DOM\n      var $checkbox = $(checkboxHTML('td'))\n        .prependTo($tdRow)\n        .find('input[type=\"checkbox\"]');\n\n      // 默认选中的行\n      if ($tdRow.hasClass('mdui-table-row-selected')) {\n        $checkbox[0].checked = true;\n        _this.selectedRow++;\n      }\n\n      // 所有行都选中后，选中表头；否则，不选中表头\n      _this.$thCheckbox[0].checked = _this.selectedRow === _this.$tdRows.length;\n\n      // 绑定事件\n      $checkbox.on('change', function () {\n        if ($checkbox[0].checked) {\n          $tdRow.addClass('mdui-table-row-selected');\n          _this.selectedRow++;\n        } else {\n          $tdRow.removeClass('mdui-table-row-selected');\n          _this.selectedRow--;\n        }\n\n        // 所有行都选中后，选中表头；否则，不选中表头\n        _this.$thCheckbox[0].checked = _this.selectedRow === _this.$tdRows.length;\n      });\n\n      _this.$tdCheckboxs = _this.$tdCheckboxs.add($checkbox);\n    });\n  };\n\n  /**\n   * 更新表头的 checkbox\n   */\n  Table.prototype._updateThCheckbox = function () {\n    var _this = this;\n\n    // 移除旧的 checkbox\n    _this.$thRow.find('.mdui-table-cell-checkbox').remove();\n\n    if (!_this.selectable) {\n      return;\n    }\n\n    _this.$thCheckbox = $(checkboxHTML('th'))\n      .prependTo(_this.$thRow)\n      .find('input[type=\"checkbox\"]')\n      .on('change', function () {\n\n        var isCheckedAll = _this.$thCheckbox[0].checked;\n        _this.selectedRow = isCheckedAll ? _this.$tdRows.length : 0;\n\n        _this.$tdCheckboxs.each(function (i, checkbox) {\n          checkbox.checked = isCheckedAll;\n        });\n\n        _this.$tdRows.each(function (i, row) {\n          $(row)[isCheckedAll ? 'addClass' : 'removeClass']('mdui-table-row-selected');\n        });\n\n      });\n  };\n\n  /**\n   * 更新数值列\n   */\n  Table.prototype._updateNumericCol = function () {\n    var _this = this;\n    var $th;\n    var $tdRow;\n\n    _this.$thRow.find('th').each(function (i, th) {\n      $th = $(th);\n\n      _this.$tdRows.each(function () {\n        $tdRow = $(this);\n        var method = $th.hasClass('mdui-table-col-numeric') ? 'addClass' : 'removeClass';\n        $tdRow.find('td').eq(i)[method]('mdui-table-col-numeric');\n      });\n    });\n  };\n\n  /**\n   * 初始化表格\n   */\n  mdui.mutation('.mdui-table', function () {\n    var $table = $(this);\n    if (!$table.data('mdui.table')) {\n      $table.data('mdui.table', new Table($table));\n    }\n  });\n\n  /**\n   * 更新表格\n   */\n  mdui.updateTables = function () {\n    $(arguments.length ? arguments[0] : '.mdui-table').each(function () {\n      var $table = $(this);\n      var inst = $table.data('mdui.table');\n\n      if (inst) {\n        inst.init();\n      } else {\n        $table.data('mdui.table', new Table($table));\n      }\n    });\n  };\n\n})();\n","/**\n * =============================================================================\n * ************   Fab 浮动操作按钮   ************\n * =============================================================================\n */\n\nmdui.Fab = (function () {\n\n  /**\n   * 默认参数\n   * @type {{}}\n   */\n  var DEFAULT = {\n    trigger: 'hover',      // 触发方式 ['hover', 'click']\n  };\n\n  /**\n   * 浮动操作按钮实例\n   * @param selector 选择器或 HTML 字符串或 DOM 元素或 JQ 对象\n   * @param opts\n   * @constructor\n   */\n  function Fab(selector, opts) {\n    var _this = this;\n\n    _this.$fab = $(selector).eq(0);\n    if (!_this.$fab.length) {\n      return;\n    }\n\n    // 已通过 data 属性实例化过，不再重复实例化\n    var oldInst = _this.$fab.data('mdui.fab');\n    if (oldInst) {\n      return oldInst;\n    }\n\n    _this.options = $.extend({}, DEFAULT, (opts || {}));\n    _this.state = 'closed';\n\n    _this.$btn = _this.$fab.find('.mdui-fab');\n    _this.$dial = _this.$fab.find('.mdui-fab-dial');\n    _this.$dialBtns = _this.$dial.find('.mdui-fab');\n\n    if (_this.options.trigger === 'hover') {\n      _this.$btn\n        .on('touchstart mouseenter', function () {\n          _this.open();\n        });\n\n      _this.$fab\n        .on('mouseleave', function () {\n          _this.close();\n        });\n    }\n\n    if (_this.options.trigger === 'click') {\n      _this.$btn\n        .on(TouchHandler.start, function () {\n          _this.open();\n        });\n    }\n\n    // 触摸屏幕其他地方关闭快速拨号\n    $document.on(TouchHandler.start, function (e) {\n      if (!$(e.target).parents('.mdui-fab-wrapper').length) {\n        _this.close();\n      }\n    });\n  }\n\n  /**\n   * 打开菜单\n   */\n  Fab.prototype.open = function () {\n    var _this = this;\n\n    if (_this.state === 'opening' || _this.state === 'opened') {\n      return;\n    }\n\n    // 为菜单中的按钮添加不同的 transition-delay\n    _this.$dialBtns.each(function (index, btn) {\n      btn.style['transition-delay'] = btn.style['-webkit-transition-delay'] =\n        15 * (_this.$dialBtns.length - index) + 'ms';\n    });\n\n    _this.$dial\n      .css('height', 'auto')\n      .addClass('mdui-fab-dial-show');\n\n    // 如果按钮中存在 .mdui-fab-opened 的图标，则进行图标切换\n    if (_this.$btn.find('.mdui-fab-opened').length) {\n      _this.$btn.addClass('mdui-fab-opened');\n    }\n\n    _this.state = 'opening';\n    componentEvent('open', 'fab', _this, _this.$fab);\n\n    // 打开顺序为从下到上逐个打开，最上面的打开后才表示动画完成\n    _this.$dialBtns.eq(0).transitionEnd(function () {\n      if (_this.$btn.hasClass('mdui-fab-opened')) {\n        _this.state = 'opened';\n        componentEvent('opened', 'fab', _this, _this.$fab);\n      }\n    });\n  };\n\n  /**\n   * 关闭菜单\n   */\n  Fab.prototype.close = function () {\n    var _this = this;\n\n    if (_this.state === 'closing' || _this.state === 'closed') {\n      return;\n    }\n\n    // 为菜单中的按钮添加不同的 transition-delay\n    _this.$dialBtns.each(function (index, btn) {\n      btn.style['transition-delay'] = btn.style['-webkit-transition-delay'] = 15 * index + 'ms';\n    });\n\n    _this.$dial.removeClass('mdui-fab-dial-show');\n    _this.$btn.removeClass('mdui-fab-opened');\n    _this.state = 'closing';\n    componentEvent('close', 'fab', _this, _this.$fab);\n\n    // 从上往下依次关闭，最后一个关闭后才表示动画完成\n    _this.$dialBtns.eq(-1).transitionEnd(function () {\n      if (!_this.$btn.hasClass('mdui-fab-opened')) {\n        _this.state = 'closed';\n        componentEvent('closed', 'fab', _this, _this.$fab);\n        _this.$dial.css('height', 0);\n      }\n    });\n  };\n\n  /**\n   * 切换菜单的打开状态\n   */\n  Fab.prototype.toggle = function () {\n    var _this = this;\n\n    if (_this.state === 'opening' || _this.state === 'opened') {\n      _this.close();\n    } else if (_this.state === 'closing' || _this.state === 'closed') {\n      _this.open();\n    }\n  };\n\n  /**\n   * 获取当前菜单状态\n   * @returns {'opening'|'opened'|'closing'|'closed'}\n   */\n  Fab.prototype.getState = function () {\n    return this.state;\n  };\n\n  /**\n   * 以动画的形式显示浮动操作按钮\n   */\n  Fab.prototype.show = function () {\n    this.$fab.removeClass('mdui-fab-hide');\n  };\n\n  /**\n   * 以动画的形式隐藏浮动操作按钮\n   */\n  Fab.prototype.hide = function () {\n    this.$fab.addClass('mdui-fab-hide');\n  };\n\n  return Fab;\n})();\n","/**\n * =============================================================================\n * ************   Fab DATA API   ************\n * =============================================================================\n */\n\n$(function () {\n  // mouseenter 不冒泡，无法进行事件委托，这里用 mouseover 代替。\n  // 不管是 click 、 mouseover 还是 touchstart ，都先初始化。\n\n  $document.on('touchstart mousedown mouseover', '[mdui-fab]', function (e) {\n    var $this = $(this);\n\n    var inst = $this.data('mdui.fab');\n    if (!inst) {\n      var options = parseOptions($this.attr('mdui-fab'));\n      inst = new mdui.Fab($this, options);\n      $this.data('mdui.fab', inst);\n    }\n  });\n});\n","/**\n * =============================================================================\n * ************   Select 下拉选择   ************\n * =============================================================================\n */\n\nmdui.Select = (function () {\n\n  /**\n   * 默认参数\n   */\n  var DEFAULT = {\n    position: 'auto',                // 下拉框位置，auto、bottom、top\n    gutter: 16,                      // 菜单与窗口上下边框至少保持多少间距\n  };\n\n  /**\n   * 调整菜单位置\n   * @param _this Select 实例\n   */\n  var readjustMenu = function (_this) {\n    // 窗口高度\n    var windowHeight = $window.height();\n\n    // 配置参数\n    var gutter = _this.options.gutter;\n    var position = _this.options.position;\n\n    // mdui-select 高度\n    var selectHeight = parseInt(_this.$select.height());\n\n    // 菜单项高度\n    var $menuItemFirst = _this.$items.eq(0);\n    var menuItemHeight = parseInt($menuItemFirst.height());\n    var menuItemMargin = parseInt($menuItemFirst.css('margin-top'));\n\n    // 菜单高度\n    var menuWidth = parseFloat(_this.$select.width() + 0.01); // 必须比真实宽度多一点，不然会出现省略号\n    var menuHeight = menuItemHeight * _this.size + menuItemMargin * 2;\n\n    // var menuRealHeight = menuItemHeight * _this.$items.length + menuItemMargin * 2;\n\n    // 菜单是否出现了滚动条\n    //var isMenuScrollable = menuRealHeight > menuHeight;\n\n    // select 在窗口中的位置\n    var selectTop = _this.$select[0].getBoundingClientRect().top;\n\n    var transformOriginY;\n    var menuMarginTop;\n\n    // position 为 auto 时\n    if (position === 'auto') {\n\n      // 菜单高度不能超过窗口高度\n      var heightTemp = windowHeight - gutter * 2;\n      if (menuHeight > heightTemp) {\n        menuHeight = heightTemp;\n      }\n\n      // 菜单的 margin-top\n      menuMarginTop = -(\n        menuItemMargin + _this.selectedIndex * menuItemHeight +\n        (menuItemHeight - selectHeight) / 2\n      );\n      var menuMarginTopMax = -(\n        menuItemMargin + (_this.size - 1) * menuItemHeight +\n        (menuItemHeight - selectHeight) / 2\n      );\n      if (menuMarginTop < menuMarginTopMax) {\n        menuMarginTop = menuMarginTopMax;\n      }\n\n      // 菜单不能超出窗口\n      var menuTop = selectTop + menuMarginTop;\n\n      if (menuTop < gutter) {\n        // 不能超出窗口上方\n        menuMarginTop = -(selectTop - gutter);\n      } else if (menuTop + menuHeight + gutter > windowHeight) {\n        // 不能超出窗口下方\n        menuMarginTop = -(selectTop + menuHeight + gutter - windowHeight);\n      }\n\n      // transform 的 Y 轴坐标\n      transformOriginY = (_this.selectedIndex * menuItemHeight + menuItemHeight / 2 + menuItemMargin) + 'px';\n    } else if (position === 'bottom') {\n      menuMarginTop = selectHeight;\n      transformOriginY = '0px';\n    } else if (position === 'top') {\n      menuMarginTop = -menuHeight - 1;\n      transformOriginY = '100%';\n    }\n\n    // 设置样式\n    _this.$select.width(menuWidth);\n    _this.$menu\n      .width(menuWidth)\n      .height(menuHeight)\n      .css({\n        'margin-top': menuMarginTop + 'px',\n        'transform-origin':\n        'center ' + transformOriginY + ' 0',\n      });\n  };\n\n  /**\n   * 下拉选择\n   * @param selector\n   * @param opts\n   * @constructor\n   */\n  function Select(selector, opts) {\n    var _this = this;\n\n    var $selectNative =  _this.$selectNative = $(selector).eq(0);\n    if (!$selectNative.length) {\n      return;\n    }\n\n    // 已通过自定义属性实例化过，不再重复实例化\n    var oldInst = $selectNative.data('mdui.select');\n    if (oldInst) {\n      return oldInst;\n    }\n\n    $selectNative.hide();\n\n    _this.options = $.extend({}, DEFAULT, (opts || {}));\n\n    // 为当前 select 生成唯一 ID\n    _this.uniqueID = $.guid();\n\n    _this.state = 'closed';\n\n    // 生成 select\n    _this.handleUpdate();\n\n    // 点击 select 外面区域关闭\n    $document.on('click touchstart', function (e) {\n      var $target = $(e.target);\n      if (\n        (_this.state === 'opening' || _this.state === 'opened') &&\n        !$target.is(_this.$select) &&\n        !$.contains(_this.$select[0], $target[0])\n      ) {\n        _this.close();\n      }\n    });\n  }\n\n  /**\n   * 对原生 select 组件进行了修改后，需要调用该方法\n   */\n  Select.prototype.handleUpdate = function () {\n    var _this = this;\n\n    if (_this.state === 'opening' || _this.state === 'opened') {\n      _this.close();\n    }\n\n    var $selectNative = _this.$selectNative;\n\n    // 当前的值和文本\n    _this.value = $selectNative.val();\n    _this.text = '';\n\n    // 生成 HTML\n    // 菜单项\n    _this.$items = $();\n    $selectNative.find('option').each(function (index, option) {\n      var data = {\n        value: option.value,\n        text: option.textContent,\n        disabled: option.disabled,\n        selected: _this.value === option.value,\n        index: index,\n      };\n\n      if (_this.value === data.value) {\n        _this.text = data.text;\n        _this.selectedIndex = index;\n      }\n\n      _this.$items = _this.$items.add(\n        $('<div class=\"mdui-select-menu-item mdui-ripple\"' +\n          (data.disabled ? ' disabled' : '') +\n          (data.selected ? ' selected' : '') + '>' + data.text + '</div>')\n          .data(data)\n      );\n    });\n\n    // selected\n    _this.$selected = $('<span class=\"mdui-select-selected\">' + _this.text + '</span>');\n\n    // select\n    _this.$select =\n      $(\n        '<div class=\"mdui-select mdui-select-position-' + _this.options.position + '\" ' +\n        'style=\"' + _this.$selectNative.attr('style') + '\" ' +\n        'id=\"' + _this.uniqueID + '\"></div>'\n      )\n        .show()\n        .append(_this.$selected);\n\n    // menu\n    _this.$menu =\n      $('<div class=\"mdui-select-menu\"></div>')\n        .appendTo(_this.$select)\n        .append(_this.$items);\n\n    $('#' + _this.uniqueID).remove();\n    $selectNative.after(_this.$select);\n\n    // 根据 select 的 size 属性设置高度，默认为 6\n    _this.size = _this.$selectNative.attr('size');\n\n    if (!_this.size) {\n      _this.size = _this.$items.length;\n      if (_this.size > 8) {\n        _this.size = 8;\n      }\n    }\n\n    if (_this.size < 2) {\n      _this.size = 2;\n    }\n\n    // 点击选项时关闭下拉菜单\n    _this.$items.on('click', function () {\n      if (_this.state === 'closing') {\n        return;\n      }\n\n      var $item = $(this);\n\n      if ($item.data('disabled')) {\n        return;\n      }\n\n      var itemData = $item.data();\n\n      _this.$selected.text(itemData.text);\n      $selectNative.val(itemData.value);\n      _this.$items.removeAttr('selected');\n      $item.attr('selected', '');\n      _this.selectedIndex = itemData.index;\n      _this.value = itemData.value;\n      _this.text = itemData.text;\n      $selectNative.trigger('change');\n\n      _this.close();\n    });\n\n    // 点击 select 时打开下拉菜单\n    _this.$select.on('click', function (e) {\n      var $target = $(e.target);\n\n      // 在菜单上点击时不打开\n      if ($target.is('.mdui-select-menu') || $target.is('.mdui-select-menu-item')) {\n        return;\n      }\n\n      _this.toggle();\n    });\n  };\n\n  /**\n   * 动画结束回调\n   * @param inst\n   */\n  var transitionEnd = function (inst) {\n    inst.$select.removeClass('mdui-select-closing');\n\n    if (inst.state === 'opening') {\n      inst.state = 'opened';\n      componentEvent('opened', 'select', inst, inst.$selectNative);\n\n      inst.$menu.css('overflow-y', 'auto');\n    }\n\n    if (inst.state === 'closing') {\n      inst.state = 'closed';\n      componentEvent('closed', 'select', inst, inst.$selectNative);\n\n      // 恢复样式\n      inst.$select.width('');\n      inst.$menu.css({\n        'margin-top': '',\n        height: '',\n        width: '',\n      });\n    }\n  };\n\n  /**\n   * 打开 Select\n   */\n  Select.prototype.open = function () {\n    var _this = this;\n\n    if (_this.state === 'opening' || _this.state === 'opened') {\n      return;\n    }\n\n    _this.state = 'opening';\n    componentEvent('open', 'select', _this, _this.$selectNative);\n\n    readjustMenu(_this);\n\n    _this.$select.addClass('mdui-select-open');\n\n    _this.$menu.transitionEnd(function () {\n      transitionEnd(_this);\n    });\n  };\n\n  /**\n   * 关闭 Select\n   */\n  Select.prototype.close = function () {\n    var _this = this;\n\n    if (_this.state === 'closing' || _this.state === 'closed') {\n      return;\n    }\n\n    _this.state = 'closing';\n    componentEvent('close', 'select', _this, _this.$selectNative);\n\n    _this.$menu.css('overflow-y', '');\n\n    _this.$select\n      .removeClass('mdui-select-open')\n      .addClass('mdui-select-closing');\n    _this.$menu.transitionEnd(function () {\n      transitionEnd(_this);\n    });\n  };\n\n  /**\n   * 切换 Select 显示状态\n   */\n  Select.prototype.toggle = function () {\n    var _this = this;\n\n    if (_this.state === 'opening' || _this.state === 'opened') {\n      _this.close();\n    } else if (_this.state === 'closing' || _this.state === 'closed') {\n      _this.open();\n    }\n  };\n\n  return Select;\n})();\n","/**\n * =============================================================================\n * ************   Select 下拉选择   ************\n * =============================================================================\n */\n\n$(function () {\n  mdui.mutation('[mdui-select]', function () {\n    var $this = $(this);\n    var inst = $this.data('mdui.select');\n    if (!inst) {\n      inst = new mdui.Select($this, parseOptions($this.attr('mdui-select')));\n      $this.data('mdui.select', inst);\n    }\n  });\n});\n","/**\n * =============================================================================\n * ************   Appbar   ************\n * =============================================================================\n * 滚动时自动隐藏应用栏\n * mdui-appbar-scroll-hide\n * mdui-appbar-scroll-toolbar-hide\n */\n\n$(function () {\n  // 滚动时隐藏应用栏\n  mdui.mutation('.mdui-appbar-scroll-hide', function () {\n    var $this = $(this);\n    $this.data('mdui.headroom', new mdui.Headroom($this));\n  });\n\n  // 滚动时只隐藏应用栏中的工具栏\n  mdui.mutation('.mdui-appbar-scroll-toolbar-hide', function () {\n    var $this = $(this);\n    var inst = new mdui.Headroom($this, {\n      pinnedClass: 'mdui-headroom-pinned-toolbar',\n      unpinnedClass: 'mdui-headroom-unpinned-toolbar',\n    });\n    $this.data('mdui.headroom', inst);\n  });\n});\n","/**\n * =============================================================================\n * ************   Tab   ************\n * =============================================================================\n */\n\nmdui.Tab = (function () {\n\n  var DEFAULT = {\n    trigger: 'click',       // 触发方式 click: 鼠标点击切换 hover: 鼠标悬浮切换\n    //animation: false,       // 切换时是否显示动画\n    loop: false,            // 为true时，在最后一个选项卡时调用 next() 方法会回到第一个选项卡\n  };\n\n  // 元素是否已禁用\n  var isDisabled = function ($ele) {\n    return $ele[0].disabled || $ele.attr('disabled') !== null;\n  };\n\n  /**\n   * 选项卡\n   * @param selector\n   * @param opts\n   * @returns {*}\n   * @constructor\n   */\n  function Tab(selector, opts) {\n    var _this = this;\n\n    _this.$tab = $(selector).eq(0);\n    if (!_this.$tab.length) {\n      return;\n    }\n\n    // 已通过自定义属性实例化过，不再重复实例化\n    var oldInst = _this.$tab.data('mdui.tab');\n    if (oldInst) {\n      return oldInst;\n    }\n\n    _this.options = $.extend({}, DEFAULT, (opts || {}));\n    _this.$tabs = _this.$tab.children('a');\n    _this.$indicator = $('<div class=\"mdui-tab-indicator\"></div>').appendTo(_this.$tab);\n    _this.activeIndex = false; // 为 false 时表示没有激活的选项卡，或不存在选项卡\n\n    // 根据 url hash 获取默认激活的选项卡\n    var hash = location.hash;\n    if (hash) {\n      _this.$tabs.each(function (i, tab) {\n        if ($(tab).attr('href') === hash) {\n          _this.activeIndex = i;\n          return false;\n        }\n      });\n    }\n\n    // 含 mdui-tab-active 的元素默认激活\n    if (_this.activeIndex === false) {\n      _this.$tabs.each(function (i, tab) {\n        if ($(tab).hasClass('mdui-tab-active')) {\n          _this.activeIndex = i;\n          return false;\n        }\n      });\n    }\n\n    // 存在选项卡时，默认激活第一个选项卡\n    if (_this.$tabs.length && _this.activeIndex === false) {\n      _this.activeIndex = 0;\n    }\n\n    // 设置激活状态选项卡\n    _this._setActive();\n\n    // 监听窗口大小变化事件，调整指示器位置\n    $window.on('resize', $.throttle(function () {\n      _this._setIndicatorPosition();\n    }, 100));\n\n    // 监听点击选项卡事件\n    _this.$tabs.each(function (i, tab) {\n      _this._bindTabEvent(tab);\n    });\n  }\n\n  /**\n   * 绑定在 Tab 上点击或悬浮的事件\n   * @private\n   */\n  Tab.prototype._bindTabEvent = function (tab) {\n    var _this = this;\n    var $tab = $(tab);\n\n    // 点击或鼠标移入触发的事件\n    var clickEvent = function (e) {\n      // 禁用状态的选项无法选中\n      if (isDisabled($tab)) {\n        e.preventDefault();\n        return;\n      }\n\n      _this.activeIndex = _this.$tabs.index(tab);\n      _this._setActive();\n    };\n\n    // 无论 trigger 是 click 还是 hover，都会响应 click 事件\n    $tab.on('click', clickEvent);\n\n    // trigger 为 hover 时，额外响应 mouseenter 事件\n    if (_this.options.trigger === 'hover') {\n      $tab.on('mouseenter', clickEvent);\n    }\n\n    $tab.on('click', function (e) {\n      // 阻止链接的默认点击动作\n      if ($tab.attr('href').indexOf('#') === 0) {\n        e.preventDefault();\n      }\n    });\n  };\n\n  /**\n   * 设置激活状态的选项卡\n   * @private\n   */\n  Tab.prototype._setActive = function () {\n    var _this = this;\n\n    _this.$tabs.each(function (i, tab) {\n      var $tab = $(tab);\n      var targetId = $tab.attr('href');\n\n      // 设置选项卡激活状态\n      if (i === _this.activeIndex && !isDisabled($tab)) {\n        if (!$tab.hasClass('mdui-tab-active')) {\n          componentEvent('change', 'tab', _this, _this.$tab, {\n            index: _this.activeIndex,\n            id: targetId.substr(1),\n          });\n          componentEvent('show', 'tab', _this, $tab);\n\n          $tab.addClass('mdui-tab-active');\n        }\n\n        $(targetId).show();\n        _this._setIndicatorPosition();\n      } else {\n        $tab.removeClass('mdui-tab-active');\n        $(targetId).hide();\n      }\n    });\n  };\n\n  /**\n   * 设置选项卡指示器的位置\n   */\n  Tab.prototype._setIndicatorPosition = function () {\n    var _this = this;\n    var $activeTab;\n    var activeTabOffset;\n\n    // 选项卡数量为 0 时，不显示指示器\n    if (_this.activeIndex === false) {\n      _this.$indicator.css({\n        left: 0,\n        width: 0,\n      });\n\n      return;\n    }\n\n    $activeTab = _this.$tabs.eq(_this.activeIndex);\n    if (isDisabled($activeTab)) {\n      return;\n    }\n\n    activeTabOffset = $activeTab.offset();\n    _this.$indicator.css({\n      left: activeTabOffset.left + _this.$tab[0].scrollLeft -\n            _this.$tab[0].getBoundingClientRect().left + 'px',\n      width: $activeTab.width() + 'px',\n    });\n  };\n\n  /**\n   * 切换到下一个选项卡\n   */\n  Tab.prototype.next = function () {\n    var _this = this;\n\n    if (_this.activeIndex === false) {\n      return;\n    }\n\n    if (_this.$tabs.length > _this.activeIndex + 1) {\n      _this.activeIndex++;\n    } else if (_this.options.loop) {\n      _this.activeIndex = 0;\n    }\n\n    _this._setActive();\n  };\n\n  /**\n   * 切换到上一个选项卡\n   */\n  Tab.prototype.prev = function () {\n    var _this = this;\n\n    if (_this.activeIndex === false) {\n      return;\n    }\n\n    if (_this.activeIndex > 0) {\n      _this.activeIndex--;\n    } else if (_this.options.loop) {\n      _this.activeIndex = _this.$tabs.length - 1;\n    }\n\n    _this._setActive();\n  };\n\n  /**\n   * 显示指定序号或指定id的选项卡\n   * @param index 从0开始的序号，或以#开头的id\n   */\n  Tab.prototype.show = function (index) {\n    var _this = this;\n\n    if (_this.activeIndex === false) {\n      return;\n    }\n\n    if (parseInt(index) === index) {\n      _this.activeIndex = index;\n    } else {\n      _this.$tabs.each(function (i, tab) {\n        if (tab.id === index) {\n          _this.activeIndex = i;\n          return false;\n        }\n      });\n    }\n\n    _this._setActive();\n  };\n\n  /**\n   * 在父元素的宽度变化时，需要调用该方法重新调整指示器位置\n   * 在添加或删除选项卡时，需要调用该方法\n   */\n  Tab.prototype.handleUpdate = function () {\n    var _this = this;\n\n    var $oldTabs = _this.$tabs;               // 旧的 tabs JQ对象\n    var $newTabs = _this.$tab.children('a');  // 新的 tabs JQ对象\n    var oldTabsEle = $oldTabs.get();          // 旧 tabs 的元素数组\n    var newTabsEle = $newTabs.get();          // 新的 tabs 元素数组\n\n    if (!$newTabs.length) {\n      _this.activeIndex = false;\n      _this.$tabs = $newTabs;\n      _this._setIndicatorPosition();\n\n      return;\n    }\n\n    // 重新遍历选项卡，找出新增的选项卡\n    $newTabs.each(function (i, tab) {\n      // 有新增的选项卡\n      if (oldTabsEle.indexOf(tab) < 0) {\n        _this._bindTabEvent(tab);\n\n        if (_this.activeIndex === false) {\n          _this.activeIndex = 0;\n        } else if (i <= _this.activeIndex) {\n          _this.activeIndex++;\n        }\n      }\n    });\n\n    // 找出被移除的选项卡\n    $oldTabs.each(function (i, tab) {\n      // 有被移除的选项卡\n      if (newTabsEle.indexOf(tab) < 0) {\n\n        if (i < _this.activeIndex) {\n          _this.activeIndex--;\n        } else if (i === _this.activeIndex) {\n          _this.activeIndex = 0;\n        }\n      }\n    });\n\n    _this.$tabs = $newTabs;\n\n    _this._setActive();\n  };\n\n  return Tab;\n})();\n","/**\n * =============================================================================\n * ************   Tab 自定义属性 API   ************\n * =============================================================================\n */\n\n$(function () {\n  mdui.mutation('[mdui-tab]', function () {\n    var $this = $(this);\n    var inst = $this.data('mdui.tab');\n    if (!inst) {\n      inst = new mdui.Tab($this, parseOptions($this.attr('mdui-tab')));\n      $this.data('mdui.tab', inst);\n    }\n  });\n});\n","/**\n * =============================================================================\n * ************   Drawer 抽屉栏   ************\n * =============================================================================\n *\n * 在桌面设备上默认显示抽屉栏，不显示遮罩层\n * 在手机和平板设备上默认不显示抽屉栏，始终显示遮罩层，且覆盖导航栏\n */\n\nmdui.Drawer = (function () {\n\n  /**\n   * 默认参数\n   * @type {{}}\n   */\n  var DEFAULT = {\n    // 在桌面设备上是否显示遮罩层。手机和平板不受这个参数影响，始终会显示遮罩层\n    overlay: false,\n\n    // 是否开启手势\n    swipe: false,\n  };\n\n  var isDesktop = function () {\n    return $window.width() >= 1024;\n  };\n\n  /**\n   * 抽屉栏实例\n   * @param selector 选择器或 HTML 字符串或 DOM 元素\n   * @param opts\n   * @constructor\n   */\n  function Drawer(selector, opts) {\n    var _this = this;\n\n    _this.$drawer = $(selector).eq(0);\n    if (!_this.$drawer.length) {\n      return;\n    }\n\n    var oldInst = _this.$drawer.data('mdui.drawer');\n    if (oldInst) {\n      return oldInst;\n    }\n\n    _this.options = $.extend({}, DEFAULT, (opts || {}));\n\n    _this.overlay = false; // 是否显示着遮罩层\n    _this.position = _this.$drawer.hasClass('mdui-drawer-right') ? 'right' : 'left';\n\n    if (_this.$drawer.hasClass('mdui-drawer-close')) {\n      _this.state = 'closed';\n    } else if (_this.$drawer.hasClass('mdui-drawer-open')) {\n      _this.state = 'opened';\n    } else if (isDesktop()) {\n      _this.state = 'opened';\n    } else {\n      _this.state = 'closed';\n    }\n\n    // 浏览器窗口大小调整时\n    $window.on('resize', $.throttle(function () {\n      // 由手机平板切换到桌面时\n      if (isDesktop()) {\n        // 如果显示着遮罩，则隐藏遮罩\n        if (_this.overlay && !_this.options.overlay) {\n          $.hideOverlay();\n          _this.overlay = false;\n          $.unlockScreen();\n        }\n\n        // 没有强制关闭，则状态为打开状态\n        if (!_this.$drawer.hasClass('mdui-drawer-close')) {\n          _this.state = 'opened';\n        }\n      }\n\n      // 由桌面切换到手机平板时。如果抽屉栏是打开着的且没有遮罩层，则关闭抽屉栏\n      else {\n        if (!_this.overlay && _this.state === 'opened') {\n          // 抽屉栏处于强制打开状态，添加遮罩\n          if (_this.$drawer.hasClass('mdui-drawer-open')) {\n            $.showOverlay();\n            _this.overlay = true;\n            $.lockScreen();\n\n            $('.mdui-overlay').one('click', function () {\n              _this.close();\n            });\n          } else {\n            _this.state = 'closed';\n          }\n        }\n      }\n    }, 100));\n\n    // 绑定关闭按钮事件\n    _this.$drawer.find('[mdui-drawer-close]').each(function () {\n      $(this).on('click', function () {\n        _this.close();\n      });\n    });\n\n    swipeSupport(_this);\n  }\n\n  /**\n   * 滑动手势支持\n   * @param _this\n   */\n  var swipeSupport = function (_this) {\n    // 抽屉栏滑动手势控制\n    var openNavEventHandler;\n    var touchStartX;\n    var touchStartY;\n    var swipeStartX;\n    var swiping = false;\n    var maybeSwiping = false;\n    var $body = $('body');\n\n    // 手势触发的范围\n    var swipeAreaWidth = 24;\n\n    function enableSwipeHandling() {\n      if (!openNavEventHandler) {\n        $body.on('touchstart', onBodyTouchStart);\n        openNavEventHandler = onBodyTouchStart;\n      }\n    }\n\n    function setPosition(translateX, closeTransform) {\n      var rtlTranslateMultiplier = _this.position === 'right' ? -1 : 1;\n      var transformCSS = 'translate(' + (-1 * rtlTranslateMultiplier * translateX) + 'px, 0) !important;';\n      _this.$drawer.css(\n        'cssText',\n        'transform:' + transformCSS + (closeTransform ? 'transition: initial !important;' : '')\n      );\n    }\n\n    function cleanPosition() {\n      _this.$drawer.css({\n        transform: '',\n        transition: '',\n      });\n    }\n\n    function getMaxTranslateX() {\n      return _this.$drawer.width() + 10;\n    }\n\n    function getTranslateX(currentX) {\n      return Math.min(\n        Math.max(\n          swiping === 'closing' ? (swipeStartX - currentX) : (getMaxTranslateX() + swipeStartX - currentX),\n          0\n        ),\n        getMaxTranslateX()\n      );\n    }\n\n    function onBodyTouchStart(event) {\n      touchStartX = event.touches[0].pageX;\n      if (_this.position === 'right') {\n        touchStartX = $body.width() - touchStartX;\n      }\n\n      touchStartY = event.touches[0].pageY;\n\n      if (_this.state !== 'opened') {\n        if (touchStartX > swipeAreaWidth || openNavEventHandler !== onBodyTouchStart) {\n          return;\n        }\n      }\n\n      maybeSwiping = true;\n\n      $body.on({\n        touchmove: onBodyTouchMove,\n        touchend: onBodyTouchEnd,\n        touchcancel: onBodyTouchMove,\n      });\n    }\n\n    function onBodyTouchMove(event) {\n      var touchX = event.touches[0].pageX;\n      if (_this.position === 'right') {\n        touchX = $body.width() - touchX;\n      }\n\n      var touchY = event.touches[0].pageY;\n\n      if (swiping) {\n        setPosition(getTranslateX(touchX), true);\n      } else if (maybeSwiping) {\n        var dXAbs = Math.abs(touchX - touchStartX);\n        var dYAbs = Math.abs(touchY - touchStartY);\n        var threshold = 8;\n\n        if (dXAbs > threshold && dYAbs <= threshold) {\n          swipeStartX = touchX;\n          swiping = _this.state === 'opened' ? 'closing' : 'opening';\n          $.lockScreen();\n          setPosition(getTranslateX(touchX), true);\n        } else if (dXAbs <= threshold && dYAbs > threshold) {\n          onBodyTouchEnd();\n        }\n      }\n    }\n\n    function onBodyTouchEnd(event) {\n      if (swiping) {\n        var touchX = event.changedTouches[0].pageX;\n        if (_this.position === 'right') {\n          touchX = $body.width() - touchX;\n        }\n\n        var translateRatio = getTranslateX(touchX) / getMaxTranslateX();\n\n        maybeSwiping = false;\n        var swipingState = swiping;\n        swiping = null;\n\n        if (swipingState === 'opening') {\n          if (translateRatio < 0.92) {\n            cleanPosition();\n            _this.open();\n          } else {\n            cleanPosition();\n          }\n        } else {\n          if (translateRatio > 0.08) {\n            cleanPosition();\n            _this.close();\n          } else {\n            cleanPosition();\n          }\n        }\n\n        $.unlockScreen();\n      } else {\n        maybeSwiping = false;\n      }\n\n      $body.off({\n        touchmove: onBodyTouchMove,\n        touchend: onBodyTouchEnd,\n        touchcancel: onBodyTouchMove,\n      });\n    }\n\n    if (_this.options.swipe) {\n      enableSwipeHandling();\n    }\n  };\n\n  /**\n   * 动画结束回调\n   * @param inst\n   */\n  var transitionEnd = function (inst) {\n    if (inst.$drawer.hasClass('mdui-drawer-open')) {\n      inst.state = 'opened';\n      componentEvent('opened', 'drawer', inst, inst.$drawer);\n    } else {\n      inst.state = 'closed';\n      componentEvent('closed', 'drawer', inst, inst.$drawer);\n    }\n  };\n\n  /**\n   * 打开抽屉栏\n   */\n  Drawer.prototype.open = function () {\n    var _this = this;\n\n    if (_this.state === 'opening' || _this.state === 'opened') {\n      return;\n    }\n\n    _this.state = 'opening';\n    componentEvent('open', 'drawer', _this, _this.$drawer);\n\n    if (!_this.options.overlay) {\n      $('body').addClass('mdui-drawer-body-' + _this.position);\n    }\n\n    _this.$drawer\n      .removeClass('mdui-drawer-close')\n      .addClass('mdui-drawer-open')\n      .transitionEnd(function () {\n        transitionEnd(_this);\n      });\n\n    if (!isDesktop() || _this.options.overlay) {\n      _this.overlay = true;\n      $.showOverlay().one('click', function () {\n        _this.close();\n      });\n\n      $.lockScreen();\n    }\n  };\n\n  /**\n   * 关闭抽屉栏\n   */\n  Drawer.prototype.close = function () {\n    var _this = this;\n\n    if (_this.state === 'closing' || _this.state === 'closed') {\n      return;\n    }\n\n    _this.state = 'closing';\n    componentEvent('close', 'drawer', _this, _this.$drawer);\n\n    if (!_this.options.overlay) {\n      $('body').removeClass('mdui-drawer-body-' + _this.position);\n    }\n\n    _this.$drawer\n      .addClass('mdui-drawer-close')\n      .removeClass('mdui-drawer-open')\n      .transitionEnd(function () {\n        transitionEnd(_this);\n      });\n\n    if (_this.overlay) {\n      $.hideOverlay();\n      _this.overlay = false;\n      $.unlockScreen();\n    }\n  };\n\n  /**\n   * 切换抽屉栏打开/关闭状态\n   */\n  Drawer.prototype.toggle = function () {\n    var _this = this;\n\n    if (_this.state === 'opening' || _this.state === 'opened') {\n      _this.close();\n    } else if (_this.state === 'closing' || _this.state === 'closed') {\n      _this.open();\n    }\n  };\n\n  /**\n   * 获取抽屉栏状态\n   * @returns {'opening'|'opened'|'closing'|'closed'}\n   */\n  Drawer.prototype.getState = function () {\n    return this.state;\n  };\n\n  return Drawer;\n\n})();\n","/**\n * =============================================================================\n * ************   Drawer 自定义属性 API   ************\n * =============================================================================\n */\n\n$(function () {\n  mdui.mutation('[mdui-drawer]', function () {\n    var $this = $(this);\n    var options = parseOptions($this.attr('mdui-drawer'));\n    var selector = options.target;\n    delete options.target;\n\n    var $drawer = $(selector).eq(0);\n\n    var inst = $drawer.data('mdui.drawer');\n    if (!inst) {\n      inst = new mdui.Drawer($drawer, options);\n      $drawer.data('mdui.drawer', inst);\n    }\n\n    $this.on('click', function () {\n      inst.toggle();\n    });\n\n  });\n});\n","/**\n * =============================================================================\n * ************   Dialog 对话框   ************\n * =============================================================================\n */\n\nmdui.Dialog = (function () {\n\n  /**\n   * 默认参数\n   */\n  var DEFAULT = {\n    history: true,                // 监听 hashchange 事件\n    overlay: true,                // 打开对话框时是否显示遮罩\n    modal: false,                 // 是否模态化对话框，为 false 时点击对话框外面区域关闭对话框，为 true 时不关闭\n    closeOnEsc: true,             // 按下 esc 关闭对话框\n    closeOnCancel: true,          // 按下取消按钮时关闭对话框\n    closeOnConfirm: true,         // 按下确认按钮时关闭对话框\n    destroyOnClosed: false,        // 关闭后销毁\n  };\n\n  /**\n   * 遮罩层元素\n   */\n  var $overlay;\n\n  /**\n   * 窗口是否已锁定\n   */\n  var isLockScreen;\n\n  /**\n   * 当前对话框实例\n   */\n  var currentInst;\n\n  /**\n   * 队列名\n   */\n  var queueName = '__md_dialog';\n\n  /**\n   * 窗口宽度变化，或对话框内容变化时，调整对话框位置和对话框内的滚动条\n   */\n  var readjust = function () {\n    if (!currentInst) {\n      return;\n    }\n\n    var $dialog = currentInst.$dialog;\n\n    var $dialogTitle = $dialog.children('.mdui-dialog-title');\n    var $dialogContent = $dialog.children('.mdui-dialog-content');\n    var $dialogActions = $dialog.children('.mdui-dialog-actions');\n\n    // 调整 dialog 的 top 和 height 值\n    $dialog.height('');\n    $dialogContent.height('');\n\n    var dialogHeight = $dialog.height();\n    $dialog.css({\n      top: (($window.height() - dialogHeight) / 2) + 'px',\n      height: dialogHeight + 'px',\n    });\n\n    // 调整 mdui-dialog-content 的高度\n    $dialogContent.height(dialogHeight - ($dialogTitle.height() || 0) - ($dialogActions.height() || 0));\n  };\n\n  /**\n   * hashchange 事件触发时关闭对话框\n   */\n  var hashchangeEvent = function () {\n    if (location.hash.substring(1).indexOf('mdui-dialog') < 0) {\n      currentInst.close(true);\n    }\n  };\n\n  /**\n   * 点击遮罩层关闭对话框\n   * @param e\n   */\n  var overlayClick = function (e) {\n    if ($(e.target).hasClass('mdui-overlay') && currentInst) {\n      currentInst.close();\n    }\n  };\n\n  /**\n   * 对话框实例\n   * @param selector 选择器或 HTML 字符串或 DOM 元素\n   * @param opts\n   * @constructor\n   */\n  function Dialog(selector, opts) {\n    var _this = this;\n\n    // 对话框元素\n    _this.$dialog = $(selector).eq(0);\n    if (!_this.$dialog.length) {\n      return;\n    }\n\n    // 已通过 data 属性实例化过，不再重复实例化\n    var oldInst = _this.$dialog.data('mdui.dialog');\n    if (oldInst) {\n      return oldInst;\n    }\n\n    // 如果对话框元素没有在当前文档中，则需要添加\n    if (!$.contains(document.body, _this.$dialog[0])) {\n      _this.append = true;\n      $('body').append(_this.$dialog);\n    }\n\n    _this.options = $.extend({}, DEFAULT, (opts || {}));\n    _this.state = 'closed';\n\n    // 绑定取消按钮事件\n    _this.$dialog.find('[mdui-dialog-cancel]').each(function () {\n      $(this).on('click', function () {\n        componentEvent('cancel', 'dialog', _this, _this.$dialog);\n        if (_this.options.closeOnCancel) {\n          _this.close();\n        }\n      });\n    });\n\n    // 绑定确认按钮事件\n    _this.$dialog.find('[mdui-dialog-confirm]').each(function () {\n      $(this).on('click', function () {\n        componentEvent('confirm', 'dialog', _this, _this.$dialog);\n        if (_this.options.closeOnConfirm) {\n          _this.close();\n        }\n      });\n    });\n\n    // 绑定关闭按钮事件\n    _this.$dialog.find('[mdui-dialog-close]').each(function () {\n      $(this).on('click', function () {\n        _this.close();\n      });\n    });\n  }\n\n  /**\n   * 动画结束回调\n   * @param inst\n   */\n  var transitionEnd = function (inst) {\n    if (inst.$dialog.hasClass('mdui-dialog-open')) {\n      inst.state = 'opened';\n      componentEvent('opened', 'dialog', inst, inst.$dialog);\n    } else {\n      inst.state = 'closed';\n      componentEvent('closed', 'dialog', inst, inst.$dialog);\n\n      inst.$dialog.hide();\n\n      // 所有对话框都关闭，且当前没有打开的对话框时，解锁屏幕\n      if (queue.queue(queueName).length === 0 && !currentInst && isLockScreen) {\n        $.unlockScreen();\n        isLockScreen = false;\n      }\n\n      $window.off('resize', $.throttle(function () {\n        readjust();\n      }, 100));\n\n      if (inst.options.destroyOnClosed) {\n        inst.destroy();\n      }\n    }\n  };\n\n  /**\n   * 打开指定对话框\n   * @private\n   */\n  Dialog.prototype._doOpen = function () {\n    var _this = this;\n\n    currentInst = _this;\n\n    if (!isLockScreen) {\n      $.lockScreen();\n      isLockScreen = true;\n    }\n\n    _this.$dialog.show();\n\n    readjust();\n    $window.on('resize', $.throttle(function () {\n      readjust();\n    }, 100));\n\n    // 打开消息框\n    _this.state = 'opening';\n    componentEvent('open', 'dialog', _this, _this.$dialog);\n\n    _this.$dialog\n      .addClass('mdui-dialog-open')\n      .transitionEnd(function () {\n        transitionEnd(_this);\n      });\n\n    // 不存在遮罩层元素时，添加遮罩层\n    if (!$overlay) {\n      $overlay = $.showOverlay(5100);\n    }\n\n    $overlay\n\n      // 点击遮罩层时是否关闭对话框\n      [_this.options.modal ? 'off' : 'on']('click', overlayClick)\n\n      // 是否显示遮罩层，不显示时，把遮罩层背景透明\n      .css('opacity', _this.options.overlay ? '' : 0);\n\n    if (_this.options.history) {\n      // 如果 hash 中原来就有 mdui-dialog，先删除，避免后退历史纪录后仍然有 mdui-dialog 导致无法关闭\n      // 包括 mdui-dialog 和 &mdui-dialog 和 ?mdui-dialog\n      var hash = location.hash.substring(1);\n      if (hash.indexOf('mdui-dialog') > -1) {\n        hash = hash.replace(/[&?]?mdui-dialog/g, '');\n      }\n\n      // 后退按钮关闭对话框\n      if (hash) {\n        location.hash = hash + (hash.indexOf('?') > -1 ? '&' : '?') + 'mdui-dialog';\n      } else {\n        location.hash = 'mdui-dialog';\n      }\n\n      $window.on('hashchange', hashchangeEvent);\n    }\n  };\n\n  /**\n   * 打开对话框\n   */\n  Dialog.prototype.open = function () {\n    var _this = this;\n\n    if (_this.state === 'opening' || _this.state === 'opened') {\n      return;\n    }\n\n    // 如果当前有正在打开或已经打开的对话框,或队列不为空，则先加入队列，等旧对话框开始关闭时再打开\n    if (\n      (currentInst && (currentInst.state === 'opening' || currentInst.state === 'opened')) ||\n      queue.queue(queueName).length\n    ) {\n      queue.queue(queueName, function () {\n        _this._doOpen();\n      });\n\n      return;\n    }\n\n    _this._doOpen();\n  };\n\n  /**\n   * 关闭对话框\n   */\n  Dialog.prototype.close = function () {\n    var _this = this;\n    var _arguments = arguments;\n\n    // setTimeout 的作用是：\n    // 当同时关闭一个对话框，并打开另一个对话框时，使打开对话框的操作先执行，以使需要打开的对话框先加入队列\n    setTimeout(function () {\n      if (_this.state === 'closing' || _this.state === 'closed') {\n        return;\n      }\n\n      currentInst = null;\n\n      _this.state = 'closing';\n      componentEvent('close', 'dialog', _this, _this.$dialog);\n\n      // 所有对话框都关闭，且当前没有打开的对话框时，隐藏遮罩\n      if (queue.queue(queueName).length === 0 && $overlay) {\n        $.hideOverlay();\n        $overlay = null;\n      }\n\n      _this.$dialog\n        .removeClass('mdui-dialog-open')\n        .transitionEnd(function () {\n          transitionEnd(_this);\n        });\n\n      if (_this.options.history && queue.queue(queueName).length === 0) {\n        // 是否需要后退历史纪录，默认为 false。\n        // 为 false 时是通过 js 关闭，需要后退一个历史记录\n        // 为 true 时是通过后退按钮关闭，不需要后退历史记录\n        if (!_arguments[0]) {\n          window.history.back();\n        }\n\n        $window.off('hashchange', hashchangeEvent);\n      }\n\n      // 关闭旧对话框，打开新对话框。\n      // 加一点延迟，仅仅为了视觉效果更好。不加延时也不影响功能\n      setTimeout(function () {\n        queue.dequeue(queueName);\n      }, 100);\n    }, 0);\n  };\n\n  /**\n   * 切换对话框打开/关闭状态\n   */\n  Dialog.prototype.toggle = function () {\n    var _this = this;\n\n    if (_this.state === 'opening' || _this.state === 'opened') {\n      _this.close();\n    } else if (_this.state === 'closing' || _this.state === 'closed') {\n      _this.open();\n    }\n  };\n\n  /**\n   * 获取对话框状态\n   * @returns {'opening'|'opened'|'closing'|'closed'}\n   */\n  Dialog.prototype.getState = function () {\n    return this.state;\n  };\n\n  /**\n   * 销毁对话框\n   */\n  Dialog.prototype.destroy = function () {\n    var _this = this;\n\n    if (_this.append) {\n      _this.$dialog.remove();\n    }\n\n    _this.$dialog.removeData('mdui.dialog');\n\n    if (queue.queue(queueName).length === 0 && !currentInst) {\n      if ($overlay) {\n        $.hideOverlay();\n        $overlay = null;\n      }\n\n      if (isLockScreen) {\n        $.unlockScreen();\n        isLockScreen = false;\n      }\n    }\n  };\n\n  /**\n   * 对话框内容变化时，需要调用该方法来调整对话框位置和滚动条高度\n   */\n  Dialog.prototype.handleUpdate = function () {\n    readjust();\n  };\n\n  // esc 按下时关闭对话框\n  $document.on('keydown', function (e) {\n    if (\n      currentInst &&\n      currentInst.options.closeOnEsc &&\n      currentInst.state === 'opened' &&\n      e.keyCode === 27\n    ) {\n      currentInst.close();\n    }\n  });\n\n  return Dialog;\n\n})();\n","/**\n * =============================================================================\n * ************   Dialog DATA API   ************\n * =============================================================================\n */\n\n$(function () {\n  $document.on('click', '[mdui-dialog]', function () {\n    var $this = $(this);\n    var options = parseOptions($this.attr('mdui-dialog'));\n    var selector = options.target;\n    delete options.target;\n\n    var $dialog = $(selector).eq(0);\n\n    var inst = $dialog.data('mdui.dialog');\n    if (!inst) {\n      inst = new mdui.Dialog($dialog, options);\n      $dialog.data('mdui.dialog', inst);\n    }\n\n    inst.open();\n  });\n});\n","/**\r\n * =============================================================================\r\n * ************   mdui.dialog(options)   ************\r\n * =============================================================================\r\n */\r\n\r\nmdui.dialog = function (options) {\r\n\r\n  /**\r\n   * 默认参数\r\n   */\r\n  var DEFAULT = {\r\n    title: '',                // 标题\r\n    content: '',              // 文本\r\n    buttons: [],              // 按钮\r\n    stackedButtons: false,    // 垂直排列按钮\r\n    cssClass: '',             // 在 Dialog 上添加的 CSS 类\r\n    history: true,            // 监听 hashchange 事件\r\n    overlay: true,            // 是否显示遮罩\r\n    modal: false,             // 是否模态化对话框\r\n    closeOnEsc: true,         // 按下 esc 时关闭对话框\r\n    destroyOnClosed: true,    // 关闭后销毁\r\n    onOpen: function () {     // 打开动画开始时的回调\r\n    },\r\n\r\n    onOpened: function () {   // 打开动画结束后的回调\r\n    },\r\n\r\n    onClose: function () {    // 关闭动画开始时的回调\r\n    },\r\n\r\n    onClosed: function () {   // 关闭动画结束时的回调\r\n    },\r\n  };\r\n\r\n  /**\r\n   * 按钮的默认参数\r\n   */\r\n  var DEFAULT_BUTTON = {\r\n    text: '',                   // 按钮文本\r\n    bold: false,                // 按钮文本是否加粗\r\n    close: true,                // 点击按钮后关闭对话框\r\n    onClick: function (inst) {  // 点击按钮的回调\r\n    },\r\n  };\r\n\r\n  // 合并参数\r\n  options = $.extend({}, DEFAULT, (options || {}));\r\n  $.each(options.buttons, function (i, button) {\r\n    options.buttons[i] = $.extend({}, DEFAULT_BUTTON, button);\r\n  });\r\n\r\n  // 按钮的 HTML\r\n  var buttonsHTML = '';\r\n  if (options.buttons.length) {\r\n    buttonsHTML =\r\n      '<div class=\"mdui-dialog-actions ' +\r\n        (options.stackedButtons ? 'mdui-dialog-actions-stacked' : '') +\r\n      '\">';\r\n    $.each(options.buttons, function (i, button) {\r\n      buttonsHTML +=\r\n        '<a href=\"javascript:void(0)\" ' +\r\n          'class=\"mdui-btn mdui-ripple mdui-text-color-primary ' +\r\n          (button.bold ? 'mdui-btn-bold' : '') + '\">' +\r\n          button.text +\r\n        '</a>';\r\n    });\r\n\r\n    buttonsHTML += '</div>';\r\n  }\r\n\r\n  // Dialog 的 HTML\r\n  var HTML =\r\n    '<div class=\"mdui-dialog ' + options.cssClass + '\">' +\r\n      (options.title ? '<div class=\"mdui-dialog-title\">' + options.title + '</div>' : '') +\r\n      (options.content ? '<div class=\"mdui-dialog-content\">' + options.content + '</div>' : '') +\r\n      buttonsHTML +\r\n    '</div>';\r\n\r\n  // 实例化 Dialog\r\n  var inst = new mdui.Dialog(HTML, {\r\n    history: options.history,\r\n    overlay: options.overlay,\r\n    modal: options.modal,\r\n    closeOnEsc: options.closeOnEsc,\r\n    destroyOnClosed: options.destroyOnClosed,\r\n  });\r\n\r\n  // 绑定按钮事件\r\n  if (options.buttons.length) {\r\n    inst.$dialog.find('.mdui-dialog-actions .mdui-btn').each(function (i, button) {\r\n      $(button).on('click', function () {\r\n        if (typeof options.buttons[i].onClick === 'function') {\r\n          options.buttons[i].onClick(inst);\r\n        }\r\n\r\n        if (options.buttons[i].close) {\r\n          inst.close();\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // 绑定打开关闭事件\r\n  if (typeof options.onOpen === 'function') {\r\n    inst.$dialog\r\n      .on('open.mdui.dialog', function () {\r\n        options.onOpen(inst);\r\n      })\r\n      .on('opened.mdui.dialog', function () {\r\n        options.onOpened(inst);\r\n      })\r\n      .on('close.mdui.dialog', function () {\r\n        options.onClose(inst);\r\n      })\r\n      .on('closed.mdui.dialog', function () {\r\n        options.onClosed(inst);\r\n      });\r\n  }\r\n\r\n  inst.open();\r\n\r\n  return inst;\r\n};\r\n","/**\n * =============================================================================\n * ************   mdui.alert(text, title, onConfirm, options)   ************\n * ************   mdui.alert(text, onConfirm, options)   ************\n * =============================================================================\n */\n\nmdui.alert = function (text, title, onConfirm, options) {\n\n  // title 参数可选\n  if (typeof title === 'function') {\n    title = '';\n    onConfirm = arguments[1];\n    options = arguments[2];\n  }\n\n  if (onConfirm === undefined) {\n    onConfirm = function () {};\n  }\n\n  if (options === undefined) {\n    options = {};\n  }\n\n  /**\n   * 默认参数\n   */\n  var DEFAULT = {\n    confirmText: 'ok',             // 按钮上的文本\n    history: true,                 // 监听 hashchange 事件\n    modal: false,                  // 是否模态化对话框，为 false 时点击对话框外面区域关闭对话框，为 true 时不关闭\n    closeOnEsc: true,              // 按下 esc 关闭对话框\n  };\n\n  options = $.extend({}, DEFAULT, options);\n\n  return mdui.dialog({\n    title: title,\n    content: text,\n    buttons: [\n      {\n        text: options.confirmText,\n        bold: false,\n        close: true,\n        onClick: onConfirm,\n      },\n    ],\n    cssClass: 'mdui-dialog-alert',\n    history: options.history,\n    modal: options.modal,\n    closeOnEsc: options.closeOnEsc,\n  });\n};\n","/**\n * =============================================================================\n * ************   mdui.confirm(text, title, onConfirm, onCancel, options)   ************\n * ************   mdui.confirm(text, onConfirm, onCancel, options)          ************\n * =============================================================================\n */\n\nmdui.confirm = function (text, title, onConfirm, onCancel, options) {\n\n  // title 参数可选\n  if (typeof title === 'function') {\n    title = '';\n    onConfirm = arguments[1];\n    onCancel = arguments[2];\n    options = arguments[3];\n  }\n\n  if (onConfirm === undefined) {\n    onConfirm = function () {};\n  }\n\n  if (onCancel === undefined) {\n    onCancel = function () {};\n  }\n\n  if (options === undefined) {\n    options = {};\n  }\n\n  /**\n   * 默认参数\n   */\n  var DEFAULT = {\n    confirmText: 'ok',            // 确认按钮的文本\n    cancelText: 'cancel',         // 取消按钮的文本\n    history: true,                // 监听 hashchange 事件\n    modal: false,                 // 是否模态化对话框，为 false 时点击对话框外面区域关闭对话框，为 true 时不关闭\n    closeOnEsc: true,             // 按下 esc 关闭对话框\n  };\n\n  options = $.extend({}, DEFAULT, options);\n\n  return mdui.dialog({\n    title: title,\n    content: text,\n    buttons: [\n      {\n        text: options.cancelText,\n        bold: false,\n        close: true,\n        onClick: onCancel,\n      },\n      {\n        text: options.confirmText,\n        bold: false,\n        close: true,\n        onClick: onConfirm,\n      },\n    ],\n    cssClass: 'mdui-dialog-confirm',\n    history: options.history,\n    modal: options.modal,\n    closeOnEsc: options.closeOnEsc,\n  });\n};\n","/**\n * =============================================================================\n * ************   mdui.prompt(label, title, onConfirm, onCancel, options)   ************\n * ************   mdui.prompt(label, onConfirm, onCancel, options)          ************\n * =============================================================================\n */\n\nmdui.prompt = function (label, title, onConfirm, onCancel, options) {\n\n  // title 参数可选\n  if (typeof title === 'function') {\n    title = '';\n    onConfirm = arguments[1];\n    onCancel = arguments[2];\n    options = arguments[3];\n  }\n\n  if (onConfirm === undefined) {\n    onConfirm = function () {};\n  }\n\n  if (onCancel === undefined) {\n    onCancel = function () {};\n  }\n\n  if (options === undefined) {\n    options = {};\n  }\n\n  /**\n   * 默认参数\n   */\n  var DEFAULT = {\n    confirmText: 'ok',        // 确认按钮的文本\n    cancelText: 'cancel',     // 取消按钮的文本\n    history: true,            // 监听 hashchange 事件\n    modal: false,             // 是否模态化对话框，为 false 时点击对话框外面区域关闭对话框，为 true 时不关闭\n    closeOnEsc: true,         // 按下 esc 关闭对话框\n    type: 'text',             // 输入框类型，text: 单行文本框 textarea: 多行文本框\n    maxlength: '',            // 最大输入字符数\n    defaultValue: '',         // 输入框中的默认文本\n    confirmOnEnter: false,    // 按下 enter 确认输入内容\n  };\n\n  options = $.extend({}, DEFAULT, options);\n\n  var content =\n    '<div class=\"mdui-textfield\">' +\n      (label ? '<label class=\"mdui-textfield-label\">' + label + '</label>' : '') +\n      (options.type === 'text' ?\n        '<input class=\"mdui-textfield-input\" type=\"text\" ' +\n          'value=\"' + options.defaultValue + '\" ' +\n          (options.maxlength ? ('maxlength=\"' + options.maxlength + '\"') : '') + '/>' :\n        '') +\n      (options.type === 'textarea' ?\n        '<textarea class=\"mdui-textfield-input\" ' +\n          (options.maxlength ? ('maxlength=\"' + options.maxlength + '\"') : '') + '>' +\n            options.defaultValue +\n        '</textarea>' :\n        '') +\n    '</div>';\n\n  return mdui.dialog({\n    title: title,\n    content: content,\n    buttons: [\n      {\n        text: options.cancelText,\n        bold: false,\n        close: true,\n        onClick: function (inst) {\n          var value = inst.$dialog.find('.mdui-textfield-input').val();\n          onCancel(value, inst);\n        },\n      },\n      {\n        text: options.confirmText,\n        bold: false,\n        close: true,\n        onClick: function (inst) {\n          var value = inst.$dialog.find('.mdui-textfield-input').val();\n          onConfirm(value, inst);\n        },\n      },\n    ],\n    cssClass: 'mdui-dialog-prompt',\n    history: options.history,\n    modal: options.modal,\n    closeOnEsc: options.closeOnEsc,\n    onOpen: function (inst) {\n\n      // 初始化输入框\n      var $input = inst.$dialog.find('.mdui-textfield-input');\n      mdui.updateTextFields($input);\n\n      // 聚焦到输入框\n      $input[0].focus();\n\n      // 捕捉文本框回车键，在单行文本框的情况下触发回调\n      if (options.type === 'text' && options.confirmOnEnter === true) {\n        $input.on('keydown', function (event) {\n          if (event.keyCode === 13) {\n            var value = inst.$dialog.find('.mdui-textfield-input').val();\n            onConfirm(value, inst);\n            inst.close();\n          }\n        });\n      }\n\n      // 如果是多行输入框，监听输入框的 input 事件，更新对话框高度\n      if (options.type === 'textarea') {\n        $input.on('input', function () {\n          inst.handleUpdate();\n        });\n      }\n\n      // 有字符数限制时，加载完文本框后 DOM 会变化，需要更新对话框高度\n      if (options.maxlength) {\n        inst.handleUpdate();\n      }\n    },\n  });\n\n};\n","/**\n * =============================================================================\n * ************   ToolTip 工具提示   ************\n * =============================================================================\n */\n\nmdui.Tooltip = (function () {\n\n  /**\n   * 默认参数\n   */\n  var DEFAULT = {\n    position: 'auto',     // 提示所在位置\n    delay: 0,             // 延迟，单位毫秒\n    content: '',          // 提示文本，允许包含 HTML\n  };\n\n  /**\n   * 是否是桌面设备\n   * @returns {boolean}\n   */\n  var isDesktop = function () {\n    return $window.width() > 1024;\n  };\n\n  /**\n   * 设置 Tooltip 的位置\n   * @param inst\n   */\n  function setPosition(inst) {\n    var marginLeft;\n    var marginTop;\n    var position;\n\n    // 触发的元素\n    var targetProps = inst.$target[0].getBoundingClientRect();\n\n    // 触发的元素和 Tooltip 之间的距离\n    var targetMargin = (isDesktop() ? 14 : 24);\n\n    // Tooltip 的宽度和高度\n    var tooltipWidth = inst.$tooltip[0].offsetWidth;\n    var tooltipHeight = inst.$tooltip[0].offsetHeight;\n\n    // Tooltip 的方向\n    position = inst.options.position;\n\n    // 自动判断位置，加 2px，使 Tooltip 距离窗口边框至少有 2px 的间距\n    if (['bottom', 'top', 'left', 'right'].indexOf(position) === -1) {\n      if (\n        targetProps.top + targetProps.height + targetMargin + tooltipHeight + 2 <\n        $window.height()\n      ) {\n        position = 'bottom';\n      } else if (targetMargin + tooltipHeight + 2 < targetProps.top) {\n        position = 'top';\n      } else if (targetMargin + tooltipWidth + 2 < targetProps.left) {\n        position = 'left';\n      } else if (\n        targetProps.width + targetMargin + tooltipWidth + 2 <\n        $window.width() - targetProps.left\n      ) {\n        position = 'right';\n      } else {\n        position = 'bottom';\n      }\n    }\n\n    // 设置位置\n    switch (position) {\n      case 'bottom':\n        marginLeft = -1 * (tooltipWidth / 2);\n        marginTop = (targetProps.height / 2) + targetMargin;\n        inst.$tooltip.transformOrigin('top center');\n        break;\n      case 'top':\n        marginLeft = -1 * (tooltipWidth / 2);\n        marginTop = -1 * (tooltipHeight + (targetProps.height / 2) + targetMargin);\n        inst.$tooltip.transformOrigin('bottom center');\n        break;\n      case 'left':\n        marginLeft = -1 * (tooltipWidth + (targetProps.width / 2) + targetMargin);\n        marginTop = -1 * (tooltipHeight / 2);\n        inst.$tooltip.transformOrigin('center right');\n        break;\n      case 'right':\n        marginLeft = (targetProps.width / 2) + targetMargin;\n        marginTop = -1 * (tooltipHeight / 2);\n        inst.$tooltip.transformOrigin('center left');\n        break;\n    }\n\n    var targetOffset = inst.$target.offset();\n    inst.$tooltip.css({\n      top: targetOffset.top + (targetProps.height / 2) + 'px',\n      left: targetOffset.left + (targetProps.width / 2) + 'px',\n      'margin-left': marginLeft + 'px',\n      'margin-top': marginTop + 'px',\n    });\n  }\n\n  /**\n   * Tooltip 实例\n   * @param selector\n   * @param opts\n   * @constructor\n   */\n  function Tooltip(selector, opts) {\n    var _this = this;\n\n    _this.$target = $(selector).eq(0);\n    if (!_this.$target.length) {\n      return;\n    }\n\n    // 已通过 data 属性实例化过，不再重复实例化\n    var oldInst = _this.$target.data('mdui.tooltip');\n    if (oldInst) {\n      return oldInst;\n    }\n\n    _this.options = $.extend({}, DEFAULT, (opts || {}));\n    _this.state = 'closed';\n\n    // 创建 Tooltip HTML\n    _this.$tooltip = $(\n      '<div class=\"mdui-tooltip\" id=\"' + $.guid() + '\">' +\n        _this.options.content +\n      '</div>'\n    ).appendTo(document.body);\n\n    // 绑定事件。元素处于 disabled 状态时无法触发鼠标事件，为了统一，把 touch 事件也禁用\n    _this.$target\n      .on('touchstart mouseenter', function (e) {\n        if (this.disabled) {\n          return;\n        }\n\n        if (!TouchHandler.isAllow(e)) {\n          return;\n        }\n\n        TouchHandler.register(e);\n\n        _this.open();\n      })\n      .on('touchend mouseleave', function (e) {\n        if (this.disabled) {\n          return;\n        }\n\n        if (!TouchHandler.isAllow(e)) {\n          return;\n        }\n\n        _this.close();\n      })\n      .on(TouchHandler.unlock, function (e) {\n        if (this.disabled) {\n          return;\n        }\n\n        TouchHandler.register(e);\n      });\n  }\n\n  /**\n   * 动画结束回调\n   * @private\n   */\n  var transitionEnd = function (inst) {\n    if (inst.$tooltip.hasClass('mdui-tooltip-open')) {\n      inst.state = 'opened';\n      componentEvent('opened', 'tooltip', inst, inst.$target);\n    } else {\n      inst.state = 'closed';\n      componentEvent('closed', 'tooltip', inst, inst.$target);\n    }\n  };\n\n  /**\n   * 执行打开 Tooltip\n   * @private\n   */\n  Tooltip.prototype._doOpen = function () {\n    var _this = this;\n\n    _this.state = 'opening';\n    componentEvent('open', 'tooltip', _this, _this.$target);\n\n    _this.$tooltip\n      .addClass('mdui-tooltip-open')\n      .transitionEnd(function () {\n        transitionEnd(_this);\n      });\n  };\n\n  /**\n   * 打开 Tooltip\n   * @param opts 允许每次打开时设置不同的参数\n   */\n  Tooltip.prototype.open = function (opts) {\n    var _this = this;\n\n    if (_this.state === 'opening' || _this.state === 'opened') {\n      return;\n    }\n\n    var oldOpts = $.extend({}, _this.options);\n\n    // 合并 data 属性参数\n    $.extend(_this.options, parseOptions(_this.$target.attr('mdui-tooltip')));\n    if (opts) {\n      $.extend(_this.options, opts);\n    }\n\n    // tooltip 的内容有更新\n    if (oldOpts.content !== _this.options.content) {\n      _this.$tooltip.html(_this.options.content);\n    }\n\n    setPosition(_this);\n\n    if (_this.options.delay) {\n      _this.timeoutId = setTimeout(function () {\n        _this._doOpen();\n      }, _this.options.delay);\n    } else {\n      _this.timeoutId = false;\n      _this._doOpen();\n    }\n  };\n\n  /**\n   * 关闭 Tooltip\n   */\n  Tooltip.prototype.close = function () {\n    var _this = this;\n\n    if (_this.timeoutId) {\n      clearTimeout(_this.timeoutId);\n      _this.timeoutId = false;\n    }\n\n    if (_this.state === 'closing' || _this.state === 'closed') {\n      return;\n    }\n\n    _this.state = 'closing';\n    componentEvent('close', 'tooltip', _this, _this.$target);\n\n    _this.$tooltip\n      .removeClass('mdui-tooltip-open')\n      .transitionEnd(function () {\n        transitionEnd(_this);\n      });\n  };\n\n  /**\n   * 切换 Tooltip 状态\n   */\n  Tooltip.prototype.toggle = function () {\n    var _this = this;\n\n    if (_this.state === 'opening' || _this.state === 'opened') {\n      _this.close();\n    } else if (_this.state === 'closing' || _this.state === 'closed') {\n      _this.open();\n    }\n  };\n\n  /**\n   * 获取 Tooltip 状态\n   * @returns {'opening'|'opened'|'closing'|'closed'}\n   */\n  Tooltip.prototype.getState = function () {\n    return this.state;\n  };\n\n  /**\n   * 销毁 Tooltip\n   */\n  /*Tooltip.prototype.destroy = function () {\n    var _this = this;\n    clearTimeout(_this.timeoutId);\n    $.data(_this.target, 'mdui.tooltip', null);\n    $.remove(_this.tooltip);\n  };*/\n\n  return Tooltip;\n\n})();\n","/**\n * =============================================================================\n * ************   Tooltip DATA API   ************\n * =============================================================================\n */\n\n$(function () {\n  // mouseenter 不能冒泡，所以这里用 mouseover 代替\n  $document.on('touchstart mouseover', '[mdui-tooltip]', function () {\n    var $this = $(this);\n\n    var inst = $this.data('mdui.tooltip');\n    if (!inst) {\n      var options = parseOptions($this.attr('mdui-tooltip'));\n      inst = new mdui.Tooltip($this, options);\n      $this.data('mdui.tooltip', inst);\n    }\n  });\n});\n","/**\n * =============================================================================\n * ************   Snackbar   ************\n * =============================================================================\n */\n\n(function () {\n\n  /**\n   * 当前打开着的 Snackbar\n   */\n  var currentInst;\n\n  /**\n   * 对列名\n   * @type {string}\n   */\n  var queueName = '__md_snackbar';\n\n  var DEFAULT = {\n    timeout: 4000,                  // 在用户没有操作时多长时间自动隐藏\n    buttonText: '',                 // 按钮的文本\n    buttonColor: '',                // 按钮的颜色，支持 blue #90caf9 rgba(...)\n    position: 'bottom',             // 位置 bottom、top、left-top、left-bottom、right-top、right-bottom\n    closeOnButtonClick: true,       // 点击按钮时关闭\n    closeOnOutsideClick: true,      // 触摸或点击屏幕其他地方时关闭\n    onClick: function () {          // 在 Snackbar 上点击的回调\n    },\n\n    onButtonClick: function () {    // 点击按钮的回调\n    },\n\n    onOpen: function () {           // 打开动画开始时的回调\n    },\n\n    onOpened: function () {         // 打开动画结束时的回调\n    },\n\n    onClose: function () {          // 关闭动画开始时的回调\n    },\n\n    onClosed: function () {         // 打开动画结束时的回调\n    },\n  };\n\n  /**\n   * 点击 Snackbar 外面的区域关闭\n   * @param e\n   */\n  var closeOnOutsideClick = function (e) {\n    var $target = $(e.target);\n    if (!$target.hasClass('mdui-snackbar') && !$target.parents('.mdui-snackbar').length) {\n      currentInst.close();\n    }\n  };\n\n  /**\n   * Snackbar 实例\n   * @param message\n   * @param opts\n   * @constructor\n   */\n  function Snackbar(message, opts) {\n    var _this = this;\n\n    _this.message = message;\n    _this.options = $.extend({}, DEFAULT, (opts || {}));\n\n    // message 参数必须\n    if (!_this.message) {\n      return;\n    }\n\n    _this.state = 'closed';\n\n    _this.timeoutId = false;\n\n    // 按钮颜色\n    var buttonColorStyle = '';\n    var buttonColorClass = '';\n\n    if (\n      _this.options.buttonColor.indexOf('#') === 0 ||\n      _this.options.buttonColor.indexOf('rgb') === 0\n    ) {\n      buttonColorStyle = 'style=\"color:' + _this.options.buttonColor + '\"';\n    } else if (_this.options.buttonColor !== '') {\n      buttonColorClass = 'mdui-text-color-' + _this.options.buttonColor;\n    }\n\n    // 添加 HTML\n    _this.$snackbar = $(\n      '<div class=\"mdui-snackbar\">' +\n        '<div class=\"mdui-snackbar-text\">' +\n          _this.message +\n        '</div>' +\n        (_this.options.buttonText ?\n          ('<a href=\"javascript:void(0)\" ' +\n          'class=\"mdui-snackbar-action mdui-btn mdui-ripple mdui-ripple-white ' +\n            buttonColorClass + '\" ' +\n            buttonColorStyle + '>' +\n            _this.options.buttonText +\n          '</a>') :\n          ''\n        ) +\n      '</div>')\n      .appendTo(document.body);\n\n    // 设置位置\n    _this._setPosition('close');\n\n    _this.$snackbar\n      .reflow()\n      .addClass('mdui-snackbar-' + _this.options.position);\n  }\n\n  /**\n   * 设置 Snackbar 的位置\n   * @param state\n   * @private\n   */\n  Snackbar.prototype._setPosition = function (state) {\n    var _this = this;\n\n    var snackbarHeight = _this.$snackbar[0].clientHeight;\n    var position = _this.options.position;\n\n    var translateX;\n    var translateY;\n\n    // translateX\n    if (position === 'bottom' || position === 'top') {\n      translateX = '-50%';\n    } else {\n      translateX = '0';\n    }\n\n    // translateY\n    if (state === 'open') {\n      translateY = '0';\n    } else {\n      if (position === 'bottom') {\n        translateY = snackbarHeight;\n      }\n\n      if (position === 'top') {\n        translateY = -snackbarHeight;\n      }\n\n      if (position === 'left-top' || position === 'right-top') {\n        translateY = -snackbarHeight - 24;\n      }\n\n      if (position === 'left-bottom' || position === 'right-bottom') {\n        translateY = snackbarHeight + 24;\n      }\n    }\n\n    _this.$snackbar.transform('translate(' + translateX + ',' + translateY + 'px)');\n  };\n\n  /**\n   * 打开 Snackbar\n   */\n  Snackbar.prototype.open = function () {\n    var _this = this;\n\n    if (!_this.message) {\n      return;\n    }\n\n    if (_this.state === 'opening' || _this.state === 'opened') {\n      return;\n    }\n\n    // 如果当前有正在显示的 Snackbar，则先加入队列，等旧 Snackbar 关闭后再打开\n    if (currentInst) {\n      queue.queue(queueName, function () {\n        _this.open();\n      });\n\n      return;\n    }\n\n    currentInst = _this;\n\n    // 开始打开\n    _this.state = 'opening';\n    _this.options.onOpen();\n\n    _this._setPosition('open');\n\n    _this.$snackbar\n      .transitionEnd(function () {\n        if (_this.state !== 'opening') {\n          return;\n        }\n\n        _this.state = 'opened';\n        _this.options.onOpened();\n\n        // 有按钮时绑定事件\n        if (_this.options.buttonText) {\n          _this.$snackbar\n            .find('.mdui-snackbar-action')\n            .on('click', function () {\n              _this.options.onButtonClick();\n              if (_this.options.closeOnButtonClick) {\n                _this.close();\n              }\n            });\n        }\n\n        // 点击 snackbar 的事件\n        _this.$snackbar.on('click', function (e) {\n          if (!$(e.target).hasClass('mdui-snackbar-action')) {\n            _this.options.onClick();\n          }\n        });\n\n        // 点击 Snackbar 外面的区域关闭\n        if (_this.options.closeOnOutsideClick) {\n          $document.on(TouchHandler.start, closeOnOutsideClick);\n        }\n\n        // 超时后自动关闭\n        if (_this.options.timeout) {\n          _this.timeoutId = setTimeout(function () {\n            _this.close();\n          }, _this.options.timeout);\n        }\n      });\n  };\n\n  /**\n   * 关闭 Snackbar\n   */\n  Snackbar.prototype.close = function () {\n    var _this = this;\n\n    if (!_this.message) {\n      return;\n    }\n\n    if (_this.state === 'closing' || _this.state === 'closed') {\n      return;\n    }\n\n    if (_this.timeoutId) {\n      clearTimeout(_this.timeoutId);\n    }\n\n    if (_this.options.closeOnOutsideClick) {\n      $document.off(TouchHandler.start, closeOnOutsideClick);\n    }\n\n    _this.state = 'closing';\n    _this.options.onClose();\n\n    _this._setPosition('close');\n\n    _this.$snackbar\n      .transitionEnd(function () {\n        if (_this.state !== 'closing') {\n          return;\n        }\n\n        currentInst = null;\n        _this.state = 'closed';\n        _this.options.onClosed();\n        _this.$snackbar.remove();\n        queue.dequeue(queueName);\n      });\n  };\n\n  /**\n   * 打开 Snackbar\n   * @param message\n   * @param opts\n   */\n  mdui.snackbar = function (message, opts) {\n    if (typeof message !== 'string') {\n      opts = message;\n      message = opts.message;\n    }\n\n    var inst = new Snackbar(message, opts);\n\n    inst.open();\n    return inst;\n  };\n\n})();\n","/**\n * =============================================================================\n * ************   Bottom navigation 底部导航栏   ************\n * =============================================================================\n */\n\n(function () {\n\n  // 切换导航项\n  $document.on('click', '.mdui-bottom-nav>a', function () {\n    var $this = $(this);\n    var $bottomNav = $this.parent();\n    var isThis;\n    $bottomNav.children('a').each(function (i, item) {\n      isThis = $this.is(item);\n      if (isThis) {\n        componentEvent('change', 'bottomNav', null, $bottomNav, {\n          index: i,\n        });\n      }\n\n      $(item)[isThis ? 'addClass' : 'removeClass']('mdui-bottom-nav-active');\n    });\n  });\n\n  // 滚动时隐藏 mdui-bottom-nav-scroll-hide\n  mdui.mutation('.mdui-bottom-nav-scroll-hide', function () {\n    var $this = $(this);\n    var inst = new mdui.Headroom($this, {\n      pinnedClass: 'mdui-headroom-pinned-down',\n      unpinnedClass: 'mdui-headroom-unpinned-down',\n    });\n    $this.data('mdui.headroom', inst);\n  });\n\n})();\n","/**\n * =============================================================================\n * ************   Expansion panel 可扩展面板   ************\n * =============================================================================\n */\n\nmdui.Panel = (function () {\n\n  function Panel(selector, opts) {\n    return new CollapsePrivate(selector, opts, 'panel');\n  }\n\n  return Panel;\n\n})();\n","/**\n * =============================================================================\n * ************   Expansion panel 自定义属性   ************\n * =============================================================================\n */\n\n$(function () {\n  mdui.mutation('[mdui-panel]', function () {\n    var $target = $(this);\n\n    var inst = $target.data('mdui.panel');\n    if (!inst) {\n      var options = parseOptions($target.attr('mdui-panel'));\n      inst = new mdui.Panel($target, options);\n      $target.data('mdui.panel', inst);\n    }\n  });\n});\n","/**\n * =============================================================================\n * ************   Menu 菜单   ************\n * =============================================================================\n */\n\nmdui.Menu = (function () {\n\n  /**\n   * 默认参数\n   */\n  var DEFAULT = {\n    position: 'auto',         // 菜单位置 top、bottom、center、auto\n    align: 'auto',            // 菜单和触发它的元素的对齐方式 left、right、center、auto\n    gutter: 16,               // 菜单距离窗口边缘的最小距离，单位 px\n    fixed: false,             // 是否使菜单固定在窗口，不随滚动条滚动\n    covered: 'auto',          // 菜单是否覆盖在触发它的元素上，true、false。auto 时简单菜单覆盖，级联菜单不覆盖\n    subMenuTrigger: 'hover',  // 子菜单的触发方式 hover、click\n    subMenuDelay: 200,        // 子菜单的触发延时，仅在 submenuTrigger 为 hover 有效\n  };\n\n  /**\n   * 调整主菜单位置\n   * @param _this 实例\n   */\n  var readjust = function (_this) {\n    var menuLeft;\n    var menuTop;\n\n    // 菜单位置和方向\n    var position;\n    var align;\n\n    // window 窗口的宽度和高度\n    var windowHeight = $window.height();\n    var windowWidth = $window.width();\n\n    // 配置参数\n    var gutter = _this.options.gutter;\n    var isCovered = _this.isCovered;\n    var isFixed = _this.options.fixed;\n\n    // 动画方向参数\n    var transformOriginX;\n    var transformOriginY;\n\n    // 菜单的原始宽度和高度\n    var menuWidth = _this.$menu.width();\n    var menuHeight = _this.$menu.height();\n\n    var $anchor = _this.$anchor;\n\n    // 触发菜单的元素在窗口中的位置\n    var anchorTmp = $anchor[0].getBoundingClientRect();\n    var anchorTop = anchorTmp.top;\n    var anchorLeft = anchorTmp.left;\n    var anchorHeight = anchorTmp.height;\n    var anchorWidth = anchorTmp.width;\n    var anchorBottom = windowHeight - anchorTop - anchorHeight;\n    var anchorRight = windowWidth - anchorLeft - anchorWidth;\n\n    // 触发元素相对其拥有定位属性的父元素的位置\n    var anchorOffsetTop = $anchor[0].offsetTop;\n    var anchorOffsetLeft = $anchor[0].offsetLeft;\n\n    // ===============================\n    // ================= 自动判断菜单位置\n    // ===============================\n    if (_this.options.position === 'auto') {\n\n      // 判断下方是否放得下菜单\n      if (anchorBottom + (isCovered ? anchorHeight : 0) > menuHeight + gutter) {\n        position = 'bottom';\n      }\n\n      // 判断上方是否放得下菜单\n      else if (anchorTop + (isCovered ? anchorHeight : 0) > menuHeight + gutter) {\n        position = 'top';\n      }\n\n      // 上下都放不下，居中显示\n      else {\n        position = 'center';\n      }\n    } else {\n      position = _this.options.position;\n    }\n\n    // ===============================\n    // ============== 自动判断菜单对齐方式\n    // ===============================\n    if (_this.options.align === 'auto') {\n\n      // 判断右侧是否放得下菜单\n      if (anchorRight + anchorWidth > menuWidth + gutter) {\n        align = 'left';\n      }\n\n      // 判断左侧是否放得下菜单\n      else if (anchorLeft + anchorWidth > menuWidth + gutter) {\n        align = 'right';\n      }\n\n      // 左右都放不下，居中显示\n      else {\n        align = 'center';\n      }\n    } else {\n      align = _this.options.align;\n    }\n\n    // ===============================\n    // ==================== 设置菜单位置\n    // ===============================\n    if (position === 'bottom') {\n      transformOriginY = '0';\n\n      menuTop =\n        (isCovered ? 0 : anchorHeight) +\n        (isFixed ? anchorTop : anchorOffsetTop);\n\n    } else if (position === 'top') {\n      transformOriginY = '100%';\n\n      menuTop =\n        (isCovered ? anchorHeight : 0) +\n        (isFixed ? (anchorTop - menuHeight) : (anchorOffsetTop - menuHeight));\n\n    } else {\n      transformOriginY = '50%';\n\n      // =====================在窗口中居中\n      // 显示的菜单的高度，简单菜单高度不超过窗口高度，若超过了则在菜单内部显示滚动条\n      // 级联菜单内部不允许出现滚动条\n      var menuHeightTemp = menuHeight;\n\n      // 简单菜单比窗口高时，限制菜单高度\n      if (!_this.isCascade) {\n        if (menuHeight + gutter * 2 > windowHeight) {\n          menuHeightTemp = windowHeight - gutter * 2;\n          _this.$menu.height(menuHeightTemp);\n        }\n      }\n\n      menuTop =\n        (windowHeight - menuHeightTemp) / 2 +\n        (isFixed ? 0 : (anchorOffsetTop - anchorTop));\n    }\n\n    _this.$menu.css('top', menuTop + 'px');\n\n    // ===============================\n    // ================= 设置菜单对齐方式\n    // ===============================\n    if (align === 'left') {\n      transformOriginX = '0';\n\n      menuLeft = isFixed ? anchorLeft : anchorOffsetLeft;\n\n    } else if (align === 'right') {\n      transformOriginX = '100%';\n\n      menuLeft = isFixed ?\n        (anchorLeft + anchorWidth - menuWidth) :\n        (anchorOffsetLeft + anchorWidth - menuWidth);\n    } else {\n      transformOriginX = '50%';\n\n      //=======================在窗口中居中\n      // 显示的菜单的宽度，菜单宽度不能超过窗口宽度\n      var menuWidthTemp = menuWidth;\n\n      // 菜单比窗口宽，限制菜单宽度\n      if (menuWidth + gutter * 2 > windowWidth) {\n        menuWidthTemp = windowWidth - gutter * 2;\n        _this.$menu.width(menuWidthTemp);\n      }\n\n      menuLeft =\n        (windowWidth - menuWidthTemp) / 2 +\n        (isFixed ? 0 : anchorOffsetLeft - anchorLeft);\n    }\n\n    _this.$menu.css('left', menuLeft + 'px');\n\n    // 设置菜单动画方向\n    _this.$menu.transformOrigin(transformOriginX + ' ' + transformOriginY);\n  };\n\n  /**\n   * 调整子菜单的位置\n   * @param $submenu\n   */\n  var readjustSubmenu = function ($submenu) {\n    var $item = $submenu.parent('.mdui-menu-item');\n\n    var submenuTop;\n    var submenuLeft;\n\n    // 子菜单位置和方向\n    var position; // top、bottom\n    var align; // left、right\n\n    // window 窗口的宽度和高度\n    var windowHeight = $window.height();\n    var windowWidth = $window.width();\n\n    // 动画方向参数\n    var transformOriginX;\n    var transformOriginY;\n\n    // 子菜单的原始宽度和高度\n    var submenuWidth = $submenu.width();\n    var submenuHeight = $submenu.height();\n\n    // 触发子菜单的菜单项的宽度高度\n    var itemTmp = $item[0].getBoundingClientRect();\n    var itemWidth = itemTmp.width;\n    var itemHeight = itemTmp.height;\n    var itemLeft = itemTmp.left;\n    var itemTop = itemTmp.top;\n\n    // ===================================\n    // ===================== 判断菜单上下位置\n    // ===================================\n\n    // 判断下方是否放得下菜单\n    if (windowHeight - itemTop > submenuHeight) {\n      position = 'bottom';\n    }\n\n    // 判断上方是否放得下菜单\n    else if (itemTop + itemHeight > submenuHeight) {\n      position = 'top';\n    }\n\n    // 默认放在下方\n    else {\n      position = 'bottom';\n    }\n\n    // ====================================\n    // ====================== 判断菜单左右位置\n    // ====================================\n\n    // 判断右侧是否放得下菜单\n    if (windowWidth - itemLeft - itemWidth > submenuWidth) {\n      align = 'left';\n    }\n\n    // 判断左侧是否放得下菜单\n    else if (itemLeft > submenuWidth) {\n      align = 'right';\n    }\n\n    // 默认放在右侧\n    else {\n      align = 'left';\n    }\n\n    // ===================================\n    // ======================== 设置菜单位置\n    // ===================================\n    if (position === 'bottom') {\n      transformOriginY = '0';\n      submenuTop = '0';\n    } else if (position === 'top') {\n      transformOriginY = '100%';\n      submenuTop = -submenuHeight + itemHeight;\n    }\n\n    $submenu.css('top', submenuTop + 'px');\n\n    // ===================================\n    // ===================== 设置菜单对齐方式\n    // ===================================\n    if (align === 'left') {\n      transformOriginX = '0';\n      submenuLeft = itemWidth;\n    } else if (align === 'right') {\n      transformOriginX = '100%';\n      submenuLeft = -submenuWidth;\n    }\n\n    $submenu.css('left', submenuLeft + 'px');\n\n    // 设置菜单动画方向\n    $submenu.transformOrigin(transformOriginX + ' ' + transformOriginY);\n  };\n\n  /**\n   * 打开子菜单\n   * @param $submenu\n   */\n  var openSubMenu = function ($submenu) {\n    readjustSubmenu($submenu);\n\n    $submenu\n      .addClass('mdui-menu-open')\n      .parent('.mdui-menu-item')\n      .addClass('mdui-menu-item-active');\n  };\n\n  /**\n   * 关闭子菜单，及其嵌套的子菜单\n   * @param $submenu\n   */\n  var closeSubMenu = function ($submenu) {\n    // 关闭子菜单\n    $submenu\n      .removeClass('mdui-menu-open')\n      .addClass('mdui-menu-closing')\n      .transitionEnd(function () {\n        $submenu.removeClass('mdui-menu-closing');\n      })\n\n      // 移除激活状态的样式\n      .parent('.mdui-menu-item')\n      .removeClass('mdui-menu-item-active');\n\n    // 循环关闭嵌套的子菜单\n    $submenu.find('.mdui-menu').each(function () {\n      var $subSubmenu = $(this);\n      $subSubmenu\n        .removeClass('mdui-menu-open')\n        .addClass('mdui-menu-closing')\n        .transitionEnd(function () {\n          $subSubmenu.removeClass('mdui-menu-closing');\n        })\n        .parent('.mdui-menu-item')\n        .removeClass('mdui-menu-item-active');\n    });\n  };\n\n  /**\n   * 切换子菜单状态\n   * @param $submenu\n   */\n  var toggleSubMenu = function ($submenu) {\n    if ($submenu.hasClass('mdui-menu-open')) {\n      closeSubMenu($submenu);\n    } else {\n      openSubMenu($submenu);\n    }\n  };\n\n  /**\n   * 绑定子菜单事件\n   * @param inst 实例\n   */\n  var bindSubMenuEvent = function (inst) {\n    // 点击打开子菜单\n    inst.$menu.on('click', '.mdui-menu-item', function (e) {\n      var $this = $(this);\n      var $target = $(e.target);\n\n      // 禁用状态菜单不操作\n      if ($this.attr('disabled') !== null) {\n        return;\n      }\n\n      // 没有点击在子菜单的菜单项上时，不操作（点在了子菜单的空白区域、或分隔线上）\n      if ($target.is('.mdui-menu') || $target.is('.mdui-divider')) {\n        return;\n      }\n\n      // 阻止冒泡，点击菜单项时只在最后一级的 mdui-menu-item 上生效，不向上冒泡\n      if (!$target.parents('.mdui-menu-item').eq(0).is($this)) {\n        return;\n      }\n\n      // 当前菜单的子菜单\n      var $submenu = $this.children('.mdui-menu');\n\n      // 先关闭除当前子菜单外的所有同级子菜单\n      $this.parent('.mdui-menu').children('.mdui-menu-item').each(function () {\n        var $tmpSubmenu = $(this).children('.mdui-menu');\n        if (\n          $tmpSubmenu.length &&\n          (!$submenu.length || !$tmpSubmenu.is($submenu))\n        ) {\n          closeSubMenu($tmpSubmenu);\n        }\n      });\n\n      // 切换当前子菜单\n      if ($submenu.length) {\n        toggleSubMenu($submenu);\n      }\n    });\n\n    if (inst.options.subMenuTrigger === 'hover') {\n      // 临时存储 setTimeout 对象\n      var timeout;\n\n      var timeoutOpen;\n      var timeoutClose;\n\n      inst.$menu.on('mouseover mouseout', '.mdui-menu-item', function (e) {\n        var $this = $(this);\n        var eventType = e.type;\n        var $relatedTarget = $(e.relatedTarget);\n\n        // 禁用状态的菜单不操作\n        if ($this.attr('disabled') !== null) {\n          return;\n        }\n\n        // 用 mouseover 模拟 mouseenter\n        if (eventType === 'mouseover') {\n          if (!$this.is($relatedTarget) && $.contains($this[0], $relatedTarget[0])) {\n            return;\n          }\n        }\n\n        // 用 mouseout 模拟 mouseleave\n        else if (eventType === 'mouseout') {\n          if ($this.is($relatedTarget) || $.contains($this[0], $relatedTarget[0])) {\n            return;\n          }\n        }\n\n        // 当前菜单项下的子菜单，未必存在\n        var $submenu = $this.children('.mdui-menu');\n\n        // 鼠标移入菜单项时，显示菜单项下的子菜单\n        if (eventType === 'mouseover') {\n          if ($submenu.length) {\n\n            // 当前子菜单准备打开时，如果当前子菜单正准备着关闭，不用再关闭了\n            var tmpClose = $submenu.data('timeoutClose.mdui.menu');\n            if (tmpClose) {\n              clearTimeout(tmpClose);\n            }\n\n            // 如果当前子菜单已经打开，不操作\n            if ($submenu.hasClass('mdui-menu-open')) {\n              return;\n            }\n\n            // 当前子菜单准备打开时，其他准备打开的子菜单不用再打开了\n            clearTimeout(timeoutOpen);\n\n            // 准备打开当前子菜单\n            timeout = timeoutOpen = setTimeout(function () {\n              openSubMenu($submenu);\n            }, inst.options.subMenuDelay);\n\n            $submenu.data('timeoutOpen.mdui.menu', timeout);\n          }\n        }\n\n        // 鼠标移出菜单项时，关闭菜单项下的子菜单\n        else if (eventType === 'mouseout') {\n          if ($submenu.length) {\n\n            // 鼠标移出菜单项时，如果当前菜单项下的子菜单正准备打开，不用再打开了\n            var tmpOpen = $submenu.data('timeoutOpen.mdui.menu');\n            if (tmpOpen) {\n              clearTimeout(tmpOpen);\n            }\n\n            // 准备关闭当前子菜单\n            timeout = timeoutClose = setTimeout(function () {\n              closeSubMenu($submenu);\n            }, inst.options.subMenuDelay);\n\n            $submenu.data('timeoutClose.mdui.menu', timeout);\n          }\n        }\n      });\n    }\n  };\n\n  /**\n   * 菜单\n   * @param anchorSelector 点击该元素触发菜单\n   * @param menuSelector 菜单\n   * @param opts 配置项\n   * @constructor\n   */\n  function Menu(anchorSelector, menuSelector, opts) {\n    var _this = this;\n\n    // 触发菜单的元素\n    _this.$anchor = $(anchorSelector).eq(0);\n    if (!_this.$anchor.length) {\n      return;\n    }\n\n    // 已通过自定义属性实例化过，不再重复实例化\n    var oldInst = _this.$anchor.data('mdui.menu');\n    if (oldInst) {\n      return oldInst;\n    }\n\n    _this.$menu = $(menuSelector).eq(0);\n\n    // 触发菜单的元素 和 菜单必须是同级的元素，否则菜单可能不能定位\n    if (!_this.$anchor.siblings(_this.$menu).length) {\n      return;\n    }\n\n    _this.options = $.extend({}, DEFAULT, (opts || {}));\n    _this.state = 'closed';\n\n    // 是否是级联菜单\n    _this.isCascade = _this.$menu.hasClass('mdui-menu-cascade');\n\n    // covered 参数处理\n    if (_this.options.covered === 'auto') {\n      _this.isCovered = !_this.isCascade;\n    } else {\n      _this.isCovered = _this.options.covered;\n    }\n\n    // 点击触发菜单切换\n    _this.$anchor.on('click', function () {\n      _this.toggle();\n    });\n\n    // 点击菜单外面区域关闭菜单\n    $document.on('click touchstart', function (e) {\n      var $target = $(e.target);\n      if (\n        (_this.state === 'opening' || _this.state === 'opened') &&\n          !$target.is(_this.$menu) &&\n          !$.contains(_this.$menu[0], $target[0]) &&\n          !$target.is(_this.$anchor) &&\n          !$.contains(_this.$anchor[0], $target[0])\n      ) {\n        _this.close();\n      }\n    });\n\n    // 点击不含子菜单的菜单条目关闭菜单\n    $document.on('click', '.mdui-menu-item', function (e) {\n      var $this = $(this);\n      if (!$this.find('.mdui-menu').length && $this.attr('disabled') === null) {\n        _this.close();\n      }\n    });\n\n    // 绑定点击或鼠标移入含子菜单的条目的事件\n    bindSubMenuEvent(_this);\n\n    // 窗口大小变化时，重新调整菜单位置\n    $window.on('resize', $.throttle(function () {\n      readjust(_this);\n    }, 100));\n  }\n\n  /**\n   * 切换菜单状态\n   */\n  Menu.prototype.toggle = function () {\n    var _this = this;\n\n    if (_this.state === 'opening' || _this.state === 'opened') {\n      _this.close();\n    } else if (_this.state === 'closing' || _this.state === 'closed') {\n      _this.open();\n    }\n  };\n\n  /**\n   * 动画结束回调\n   * @param inst\n   */\n  var transitionEnd = function (inst) {\n    inst.$menu.removeClass('mdui-menu-closing');\n\n    if (inst.state === 'opening') {\n      inst.state = 'opened';\n      componentEvent('opened', 'menu', inst, inst.$menu);\n    }\n\n    if (inst.state === 'closing') {\n      inst.state = 'closed';\n      componentEvent('closed', 'menu', inst, inst.$menu);\n\n      // 关闭后，恢复菜单样式到默认状态，并恢复 fixed 定位\n      inst.$menu.css({\n        top: '',\n        left: '',\n        width: '',\n        position: 'fixed',\n      });\n    }\n  };\n\n  /**\n   * 打开菜单\n   */\n  Menu.prototype.open = function () {\n    var _this = this;\n\n    if (_this.state === 'opening' || _this.state === 'opened') {\n      return;\n    }\n\n    _this.state = 'opening';\n    componentEvent('open', 'menu', _this, _this.$menu);\n\n    // 调整菜单位置\n    readjust(_this);\n\n    _this.$menu\n\n      // 菜单隐藏状态使用使用 fixed 定位。\n      .css('position', _this.options.fixed ? 'fixed' : 'absolute')\n\n      // 打开菜单\n      .addClass('mdui-menu-open')\n\n      // 打开动画完成后\n      .transitionEnd(function () {\n        transitionEnd(_this);\n      });\n  };\n\n  /**\n   * 关闭菜单\n   */\n  Menu.prototype.close = function () {\n    var _this = this;\n    if (_this.state === 'closing' || _this.state === 'closed') {\n      return;\n    }\n\n    _this.state = 'closing';\n    componentEvent('close', 'menu', _this, _this.$menu);\n\n    // 菜单开始关闭时，关闭所有子菜单\n    _this.$menu.find('.mdui-menu').each(function () {\n      closeSubMenu($(this));\n    });\n\n    _this.$menu\n      .removeClass('mdui-menu-open')\n      .addClass('mdui-menu-closing')\n      .transitionEnd(function () {\n        transitionEnd(_this);\n      });\n  };\n\n  return Menu;\n})();\n","/**\n * =============================================================================\n * ************   Menu 自定义属性 API   ************\n * =============================================================================\n */\n\n$(function () {\n  $document.on('click', '[mdui-menu]', function () {\n    var $this = $(this);\n\n    var inst = $this.data('mdui.menu');\n    if (!inst) {\n      var options = parseOptions($this.attr('mdui-menu'));\n      var menuSelector = options.target;\n      delete options.target;\n\n      inst = new mdui.Menu($this, menuSelector, options);\n      $this.data('mdui.menu', inst);\n\n      inst.toggle();\n    }\n  });\n});\n"]}